<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="polycat_shelf" label="Polycat Shelf">
    <memberTool name="pc scene start"/>
    <memberTool name="pc alembic geo"/>
    <memberTool name="Poly Instancer"/>
    <memberTool name="geo"/>
    <memberTool name="shading light setup"/>
    <memberTool name="geo1"/>
    <memberTool name="toggleupdatemode"/>
  </toolshelf>

  <tool name="tool_2" label="New Tool" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[]]></script>
  </tool>

  <tool name="toggleupdatemode" label="Toggle Update Mode" icon="Textport">
    <script scriptType="python"><![CDATA[import hou
mode = hou.updateModeSetting().name()
if mode == "AutoUpdate":
    hou.setUpdateMode(hou.updateMode.Manual)
if mode == "Manual":
    hou.setUpdateMode(hou.updateMode.AutoUpdate)]]></script>
    <keywordList>
      <keyword>update mode toggle</keyword>
    </keywordList>
  </tool>

  <tool name="Poly Instancer" label="poly_instancer" icon="OBJ_subnet">
    <helpURL>operator:Object/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_poly_instancer1 (Object/subnet)
set _obj_poly_instancer1 = `run("opadd -e -n -v subnet poly_instancer1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_poly_instancer1
opspareds '    group {  name    "stdswitcher3"  label   "Transform"     invisibletab    parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      none    }       parm {      name        "r"         baseparm        label       "Rotate"            export      none    }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher3_1"        label   "Subnet"        invisibletab    parm {      name        "label1"            baseparm        label       "Input #1 Label"            export      all     }       parm {      name        "label2"            baseparm        label       "Input #2 Label"            export      all     }       parm {      name        "label3"            baseparm        label       "Input #3 Label"            export      all     }       parm {      name        "label4"            baseparm        label       "Input #4 Label"            export      all     }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      all     }       parm {      name        "display"           baseparm        label       "Display"           export      all     }       parm {      name        "outputobj"         baseparm        label       "Output Transform"          export      all     }       parm {      name        "visibleobjects"            baseparm        label       "Visible Children"          export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       invisible       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           invisible       export      none    }     }      group {    name    "stdswitcher3_2"        label   "Instancer"     parm {      name        "turn_instancer_on_off"             label       "Toggle Instancer On/Off"           type        toggle      default     { "0" }             range       { 0! 10 }           parmtag     { "autoscope" "0000000000000000" }      }       parm {      name        "sepparm"           label       "Separator"         type        separator           default     { "" }  }       parm {      name        "labelparm"         label       "Label"             type        label       nolabel         default     { "(\\"Ground\\" Object needs Normals)" }       }       parm {      name        "object_to_instance_on"             label       "Object To Instance On"             type        oppath      default     { "" }      parmtag     { "autoscope" "0000000000000000" }          parmtag     { "opfilter" "!!SOP!!" }            parmtag     { "oprelative" "." }    }       parm {      name        "object_to_instance"        label       "Object To Instance"        type        oppath      default     { "" }      help        "Object to instance"        range       { 0 1 }             parmtag     { "autoscope" "0000000000000000" }          parmtag     { "opfilter" "!!OBJ!!" }            parmtag     { "oprelative" "." }        parmtag     { "spare_category" "Instance" }         }       parm {      name        "sepparm2"          label       "Separator"         type        separator           default     { "" }  }       group {             name        "folder0"           label       "Scatter Method"            groupsimple {               name    "folder12"              label   "Hidden Parameters"             invisibletab            grouptag        { "group_type" "simple" }               parm {              name        "skinsource"                label       "Skin Source"               type        ordinal                     invisible               default     { "0" }                     menu        {                       "sop"   "SOP Geometry"                  "file"  "File"              }           }               parm {              name        "skinsop"                   label       "SOP Path"                  type        oppath              invisible               default     { "ground/OUT_GROUND" }                     hidewhen    "{ skinsource != sop }"                     parmtag     { "oprelative" "." }            }               parm {              name        "guidetype"                 label       "Mode"              type        ordinal                     invisible               default     { "0" }                     menu        {                       "surface"       "Scatter On Surface"                    "points"        "Guide Per Point"                       "external"      "Use External Geometry"                     }               parmtag     { "autoscope" "0000000000000000" }              }               parm {              name        "density"                   label       "Density"                   type        float               invisible               default     { "1000" }                  hidewhen    "{ guidetype != surface }"                  range       { 0 5000 }                  parmtag     { "autoscope" "0000000000000000" }              }           }       parm {              name    "densityoverride"               label   "Density Override"              type    ordinal                 nolabel                 default { "0" }                 hidewhen        "{ guidetype != surface }"              menu    {                   "skinattrib"        "Use Paint"                 "texture"   "Use Texture"           }               parmtag { "parmoverride_mainparm" "density" }       }       parm {              name    "toggle_density"                label   "Toggle Density"                type    toggle          default { "off" }               parmtag { "autoscope" "0000000000000000" }          }       parm {              name    "densityattrib"                 label   "Paint Density Attrib"          type    string          default { "density" }           hidewhen        "{ guidetype != surface } { densityoverride != skinattrib }"            menureplace     {                   [ "import furtoolutils" ]               [ "" ]                  [ "try:" ]              [ "    return furtoolutils.buildSkinPaintAttribMenu(" ]                 [ "            kwargs[\'node\'], skininput=1, skinparmname=\'skinsop\'," ]              [ "            attribSize=1)" ]                 [ "except:" ]                   [ "    return []" ]                     language    python          }               parmtag { "parmoverride_mainparm" "density" }           parmtag { "script_action" "import furtoolutils\\n\\nfurtoolutils.paintSkinAttrib(\\n    kwargs,\\n    kwargs[\'parmtuple\'][0].eval(),\\n    1.0, 1,\\n    skinparmname=\'skinsop\')" }                 parmtag { "script_action_help" "Paint Density Attrib" }                 parmtag { "script_action_icon" "SOP_paint" }        }       parm {              name    "densitytexture"                label   "Use Texture Density"           type    image           default { "" }          hidewhen        "{ guidetype != surface } { densityoverride != texture }"               parmtag { "parmoverride_mainparm" "density" }       }       parm {              name    "scatter_amount"                label   "Scatter Amount"                type    integer                 default { "0" }                 range   { 1 10000 }             parmtag { "autoscope" "0000000000000000" }          }       parm {              name    "scatter_seed"          label   "Scatter Seed"          type    float           default { "0" }                 range   { 0 1000 }              parmtag { "autoscope" "0000000000000000" }          }       parm {              name    "random_rotation_seed"          label   "Random Rotation Seed"          type    float           default { "1" }                 range   { 0 1000 }              parmtag { "autoscope" "0000000000000000" }          }       parm {              name    "randomscale"           label   "Random Scale:"                 type    label           default { "" }      }       parm {              name    "min"           label   "Min"           type    float           default { "0" }                 range   { 0 10 }                parmtag { "autoscope" "0000000000000000" }          }       parm {              name    "max"           label   "Max"           type    float           default { "1" }                 range   { 0 10 }                parmtag { "autoscope" "0000000000000000" }          }   }      }  ' $_obj_poly_instancer1
opset -S on $_obj_poly_instancer1
chautoscope $_obj_poly_instancer1 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_poly_instancer1
opexprlanguage -s hscript $_obj_poly_instancer1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1
opcf $_obj_poly_instancer1

# Node $_obj_poly_instancer1_instance_asset_01 (Object/instance)
set _obj_poly_instancer1_instance_asset_01 = `run("opadd -e -n -v instance instance_asset_01")`
oplocate -x `$arg2 + 7.270059912961` -y `$arg3 + 4.4594819407699999` $_obj_poly_instancer1_instance_asset_01
opspareds '    group {  name    "stdswitcher6"  label   "Transform"     invisibletab    parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      invisible       export      none    }       parm {      name        "pre_xform"         baseparm        label       "Pre-transform"             invisible       export      none    }       parm {      name        "xOrd"      baseparm        label       "Transform Order"           invisible       export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      invisible       export      none    }       parm {      name        "t"         baseparm        label       "Translate"         invisible       export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            invisible       export      all     }       parm {      name        "s"         baseparm        label       "Scale"             invisible       export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             invisible       export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             invisible       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher6_1"        label   "Misc"  invisibletab    tabbreak        parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       invisible       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           invisible       export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        invisible       export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             invisible       export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            invisible       export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             invisible       export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "renderable"        baseparm        label       "Renderable"        invisible       export      none    }     }      group {    name    "folder1"       label   "Transform"     parm {      name        "i_xOrd"            baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "i_rOrd"            baseparm        label       "Rotate Order"      nolabel         export      none    }       parm {      name        "i_t"       baseparm        label       "Translate"         export      none    }       parm {      name        "i_r"       baseparm        label       "Rotate"            export      none    }       parm {      name        "i_s"       baseparm        label       "Scale"             export      none    }       parm {      name        "i_p"       baseparm        label       "Pivot"             export      none    }       parm {      name        "i_scale"           baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "i_pre_xform"       baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "i_keeppos"         baseparm        label       "Keep position when parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       group {             name        "folder3_2"         label       "Lookat Options"            invisibletab            parm {              name    "i_lookatpath"          baseparm                label   "Look At"               export  none        }       parm {              name    "i_lookup"              baseparm                label   "Look At Up Vector"             export  none        }   }       group {             name        "folder3_2_1"       label       "Path Options"      invisibletab            parm {              name    "i_pathobjpath"                 baseparm                label   "Path Object"           export  none        }       parm {              name    "i_roll"                baseparm                label   "Roll"          export  none        }       parm {              name    "i_pos"                 baseparm                label   "Position"              export  none        }       parm {              name    "i_uparmtype"           baseparm                label   "Parameterization"              export  none        }       parm {              name    "i_pathorient"          baseparm                label   "Orient Along Path"             export  none        }       parm {              name    "i_up"          baseparm                label   "Orient Up Vector"              export  none        }       parm {              name    "i_bank"                baseparm                label   "Auto-Bank factor"              export  none        }   }      }      group {   name    "folder1_1"     label   "Instance"      parm {      name        "instancepath"      baseparm        label       "Instance Object"           export      none    }       parm {      name        "ptinstance"        baseparm        label       "Point Instancing"          export      none    }       parm {      name        "ptmotionblur"      baseparm        label       "Point Motion Blur"         export      none    }       parm {      name        "subnet_filter"             baseparm        label       "Subnetwork Filtering"      export      none    }       parm {      name        "subnet_pattern"            baseparm        label       "Subnetwork Pattern"        export      none    }       parm {      name        "shop_propertiespath"       baseparm        label       "Override Properties"       export      none    }     }      group {    name    "folder1_2"     label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          joinnext        export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "i_tdisplay"        baseparm        label       "Display"           nolabel         joinnext        export      none    }       parm {      name        "i_display"         baseparm        label       "Display"           export      none    }     }      group {    name    "folder1_3"     label   "Misc"          parm {      name        "i_use_dcolor"      baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "i_dcolor"          baseparm        label       "Wirefrme Color"            export      none    }       parm {      name        "i_picking"         baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "i_pickscript"      baseparm        label       "Select Script"             export      none    }       parm {      name        "i_caching"         baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "i_vport_shadeopen"         baseparm        label       "Shade Open Curves In Viewport"             export      none    }     }      group {    name    "folder1_4"     label   "Arnold"        group {             name        "folder_attributes"         label       "Attributes"        parm {              name    "ar_attributes_point"           label   "Point Attributes"              type    string          default { "*" }                 help    "The list of point attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."            menutoggle      {                   [ "__import__(\'htoa\').properties.pointAttributeMenu()" ]              language    python          }               range   { 0 1 }             }   }       group {             name        "folder_attributes_1"       label       "Motion Blur"       parm {              name    "ar_transform_type"             label   "Transform Type"                type    ordinal                 default { "2" }                 help    "The type of motion for the transformation of the object, as a hint for the matrix interpolation for transformation motion blur."               menu    {                   "linear"    "Linear"                    "rotate_about_origin"       "Rotate About Origin"               "rotate_about_center"       "Rotate About Center"           }               range   { 0 2 }                 parmtag { "spare_category" "Motion Blur" }          }       parm {              name    "ar_mb_xform_keys_override"             label   "Transform Keys Override"               type    toggle          nolabel                 joinnext                default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }          }       parm {              name    "ar_mb_xform_keys"              label   "Transform Keys"                type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result, especially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."          disablewhen     "{ ar_mb_xform_keys_override == 0 }"            range   { 1! 20 }               parmtag { "spare_category" "Motion Blur" }          }   }       group {             name        "folder_attributes_2"       label       "Visibility"        parm {              name    "ar_visibility_override"                label   "Visibility Override"           type    toggle          nolabel                 joinnext                default { "0" }                 help    "Override visibility."          range   { 0 1 }             }       parm {              name    "ar_visibility_camera"          label   "Visible to Camera Rays"                type    toggle          default { "1" }                 help    "Toggle object visibility for camera rays (i.e. primary or view rays)."                 disablewhen     "{ ar_visibility_override == 0 }"               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_shadow"          label   "Visible to Shadow Rays"                type    toggle          default { "1" }                 help    "Toggle object visibility for shadow rays fired in the direct lighting calculations."           disablewhen     "{ ar_visibility_override == 0 }"               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_diffuse_transmit"                label   "Visible to Diffuse Transmission Rays"          type    toggle          default { "1" }                 help    "Toggle object visibility for indirect diffuse transmission rays."              disablewhen     "{ ar_visibility_override == 0 }"               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_specular_transmit"               label   "Visible to Specular Transmission Rays"                 type    toggle          default { "1" }                 help    "Toggle object visibility for indirect specular transmission rays."             disablewhen     "{ ar_visibility_override == 0 }"               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_diffuse_reflect"                 label   "Visible to Diffuse Reflection Rays"            type    toggle          default { "1" }                 help    "Toggle object visibility for indirect diffuse reflection rays."                disablewhen     "{ ar_visibility_override == 0 }"               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_specular_reflect"                label   "Visible to Specular Reflection Rays"           type    toggle          default { "1" }                 help    "Toggle object visibility for indirect specular reflection rays."               disablewhen     "{ ar_visibility_override == 0 }"               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_volume"          label   "Visible to Volume Scattering Rays"             type    toggle          default { "1" }                 help    "Toggle object visibility for indirect volume scattering rays."                 disablewhen     "{ ar_visibility_override == 0 }"               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_receive_shadows_override"           label   "Receive Shadows Override"              type    toggle          nolabel                 joinnext                default { "0" }                 help    "Override received shadows."            range   { 0 1 }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "ar_receive_shadows"            label   "Receive Shadows"               type    toggle          default { "1" }                 help    "Enable/disable received shadows over the object."              disablewhen     "{ ar_receive_shadows_override == 0 }"          range   { 0 1 }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "ar_self_shadows_override"              label   "Self Shadows Override"                 type    toggle          nolabel                 joinnext                default { "0" }                 help    "Override self-shadowing."              range   { 0 1 }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "ar_self_shadows"               label   "Self Shadows"          type    toggle          default { "1" }                 help    "Enable/disable self-shadowing over the object."                disablewhen     "{ ar_self_shadows_override == 0 }"             range   { 0 1 }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "ar_opaque_override"            label   "Opaque Override"               type    toggle          nolabel                 joinnext                default { "0" }                 help    "Override the opaque flag."             range   { 0 1 }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "ar_opaque"             label   "Opaque"                type    toggle          default { "1" }                 help    "By default, Arnold will assume that objects are opaque, which lets the renderer take certain shortcuts and optimizations for maximum ray tracing speed. When this option is unchecked, the object is assumed as \\"possibly transparent\\", and Arnold will perform extra computations to support transparency and transparent shadows, according to the shader\'s opacity settings."          disablewhen     "{ ar_opaque_override == 0 }"           range   { 0 1 }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "ar_matte_override"             label   "Matte Override"                type    toggle          nolabel                 joinnext                default { "0" }                 range   { 0 1 }             }       parm {              name    "ar_matte"              label   "Matte"                 type    toggle          default { "0" }                 help    "Output black and zero alpha for camera rays to create a holdout."              disablewhen     "{ ar_matte_override == 0 }"            range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_skip"               label   "Skip"          type    toggle          default { "0" }                 help    "Do not output this object regardless of it being forced or not."               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_use_light_group"            label   "Use Light Group"               type    toggle          invisible               nolabel                 joinnext                default { "0" }                 range   { 0 1 }             }       parm {              name    "ar_light_group"                label   "Light Group"           type    oplist          invisible               default { "" }          disablewhen     "{ ar_use_light_group == 0 }"           range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/" }        }       parm {              name    "ar_use_shadow_group"           label   "Use Shadow Group"              type    toggle          invisible               nolabel                 joinnext                default { "0" }                 range   { 0 1 }             }       parm {              name    "ar_shadow_group"               label   "Shadow Group"          type    oplist          invisible               default { "" }          disablewhen     "{ ar_use_shadow_group == 0 }"          range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/" }        }       parm {              name    "ar_trace_sets_override"                label   "Trace Sets Override"           type    toggle          nolabel                 joinnext                default { "0" }                 range   { 0 1 }             }       parm {              name    "ar_trace_sets"                 label   "Trace Sets"            type    string          default { "" }          disablewhen     "{ ar_trace_sets_override == 0 }"               menutoggle      {               }               range   { 0 1 }             }   }       group {             name        "folder_attributes_3"       label       "Normals"           parm {              name    "ar_invert_normals_override"            label   "Invert Normals Override"               type    toggle          nolabel                 joinnext                default { "0" }                 help    "Override Invert Normals."              range   { 0 1 }                 parmtag { "spare_category" "Render" }       }       parm {              name    "ar_invert_normals"             label   "Invert Normals"                type    toggle          default { "0" }                 help    "Invert normals"                disablewhen     "{ ar_invert_normals_override == 0 }"           range   { 0 1 }                 parmtag { "spare_category" "Render" }       }       parm {              name    "ar_sidedness_override"                 label   "Sidedeness Override"           type    toggle          nolabel                 joinnext                default { "0" }                 help    "Override sidedness."           range   { 0 1 }                 parmtag { "spare_category" "Render" }       }       parm {              name    "ar_sidedness_camera"           label   "Double-sided for Camera Rays"          type    toggle          default { "1" }                 help    "Toggle object double-sidedness for camera rays (i.e. primary or view rays)."           disablewhen     "{ ar_sidedness_override == 0 }"                range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_shadow"           label   "Double-sided for Shadow Rays"          type    toggle          default { "1" }                 help    "Toggle object double-sidedness for shadow rays fired in the direct lighting calculations."             disablewhen     "{ ar_sidedness_override == 0 }"                range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_diffuse_transmit"                 label   "Double-sided for Diffuse Transmission Rays"            type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse transmission rays."                disablewhen     "{ ar_sidedness_override == 0 }"                range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_specular_transmit"                label   "Double-sided for Specular Transmission Rays"           type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect specular transmission rays."               disablewhen     "{ ar_sidedness_override == 0 }"                range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_diffuse_reflect"          label   "Double-sided for Diffuse Reflection Rays"              type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse reflection rays."          disablewhen     "{ ar_sidedness_override == 0 }"                range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_specular_reflect"                 label   "Double-sided for Specular Reflection Rays"             type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect specular reflection rays."                 disablewhen     "{ ar_sidedness_override == 0 }"                range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_volume"           label   "Double-sided for Volume Scattering Rays"               type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect volume scattering rays."           disablewhen     "{ ar_sidedness_override == 0 }"                range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }   }      }      parm {    name    "tdisplay"      baseparm        label   "Display"       invisible       joinnext        export  none     }     parm {   name    "display"       baseparm        label   "Display"       invisible       export  none     }     parm {   name    "lookupobjpath"         baseparm        label   "Look Up Object"        invisible       export  none     }     parm {   name    "vport_onionskin"       baseparm        label   "Onion Skinning"        invisible       export  none     } ' $_obj_poly_instancer1_instance_asset_01
chblockbegin
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 xOrd
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_xOrd")' $_obj_poly_instancer1_instance_asset_01/xOrd
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 rOrd
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_rOrd")' $_obj_poly_instancer1_instance_asset_01/rOrd
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_tx")' $_obj_poly_instancer1_instance_asset_01/tx
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_ty")' $_obj_poly_instancer1_instance_asset_01/ty
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_tz")' $_obj_poly_instancer1_instance_asset_01/tz
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_rx")' $_obj_poly_instancer1_instance_asset_01/rx
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_ry")' $_obj_poly_instancer1_instance_asset_01/ry
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_rz")' $_obj_poly_instancer1_instance_asset_01/rz
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 sx
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_sx")' $_obj_poly_instancer1_instance_asset_01/sx
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 sy
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_sy")' $_obj_poly_instancer1_instance_asset_01/sy
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 sz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_sz")' $_obj_poly_instancer1_instance_asset_01/sz
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 px
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_px")' $_obj_poly_instancer1_instance_asset_01/px
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 py
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_py")' $_obj_poly_instancer1_instance_asset_01/py
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 pz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_pz")' $_obj_poly_instancer1_instance_asset_01/pz
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_scale")' $_obj_poly_instancer1_instance_asset_01/scale
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 pre_xform
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_pre_xform")' $_obj_poly_instancer1_instance_asset_01/pre_xform
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 keeppos
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_keeppos")' $_obj_poly_instancer1_instance_asset_01/keeppos
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 lookatpath
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("./i_lookatpath")' $_obj_poly_instancer1_instance_asset_01/lookatpath
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 lookup
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("./i_lookup")' $_obj_poly_instancer1_instance_asset_01/lookup
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 pathobjpath
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("./i_pathobjpath")' $_obj_poly_instancer1_instance_asset_01/pathobjpath
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 roll
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_roll")' $_obj_poly_instancer1_instance_asset_01/roll
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 pos
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_pos")' $_obj_poly_instancer1_instance_asset_01/pos
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 uparmtype
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_uparmtype")' $_obj_poly_instancer1_instance_asset_01/uparmtype
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 pathorient
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_pathorient")' $_obj_poly_instancer1_instance_asset_01/pathorient
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 upx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_upx")' $_obj_poly_instancer1_instance_asset_01/upx
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 upy
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_upy")' $_obj_poly_instancer1_instance_asset_01/upy
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 upz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_upz")' $_obj_poly_instancer1_instance_asset_01/upz
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 bank
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_bank")' $_obj_poly_instancer1_instance_asset_01/bank
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 tdisplay
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_tdisplay")' $_obj_poly_instancer1_instance_asset_01/tdisplay
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 display
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_display")' $_obj_poly_instancer1_instance_asset_01/display
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 use_dcolor
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_use_dcolor")' $_obj_poly_instancer1_instance_asset_01/use_dcolor
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 dcolorr
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_dcolorr")' $_obj_poly_instancer1_instance_asset_01/dcolorr
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 dcolorg
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_dcolorg")' $_obj_poly_instancer1_instance_asset_01/dcolorg
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 dcolorb
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_dcolorb")' $_obj_poly_instancer1_instance_asset_01/dcolorb
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 picking
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_picking")' $_obj_poly_instancer1_instance_asset_01/picking
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 pickscript
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("./i_pickscript")' $_obj_poly_instancer1_instance_asset_01/pickscript
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 caching
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_caching")' $_obj_poly_instancer1_instance_asset_01/caching
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 vport_shadeopen
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("./i_vport_shadeopen")' $_obj_poly_instancer1_instance_asset_01/vport_shadeopen
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01 instancepath
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../object_to_instance")' $_obj_poly_instancer1_instance_asset_01/instancepath
chblockend
opset -S on $_obj_poly_instancer1_instance_asset_01
opparm $_obj_poly_instancer1_instance_asset_01 stdswitcher ( 2 2 2 ) xOrd ( xOrd ) rOrd ( rOrd ) t ( tx ty tz ) r ( rx ry rz ) s ( sx sy sz ) p ( px py pz ) scale ( scale ) pre_xform ( pre_xform ) keeppos ( keeppos ) lookatpath ( lookatpath ) lookup ( lookup ) pathobjpath ( pathobjpath ) roll ( roll ) pos ( pos ) uparmtype ( uparmtype ) pathorient ( pathorient ) up ( upx upy upz ) bank ( bank ) tdisplay ( tdisplay ) display ( display ) use_dcolor ( use_dcolor ) dcolor ( dcolorr dcolorg dcolorb ) picking ( picking ) pickscript ( pickscript ) caching ( caching ) vport_shadeopen ( vport_shadeopen ) instancepath ( instancepath ) ptinstance ( fast ) folder1 ( 1 1 1 1 1 ) folder_attributes ( 3 3 3 3 )
chautoscope $_obj_poly_instancer1_instance_asset_01 +tx +ty +tz +rx +ry +rz +sx +sy +sz +i_tx +i_ty +i_tz +i_rx +i_ry +i_rz +i_sx +i_sy +i_sz
opcolor -c 0.56499999761581421 0.49399998784065247 0.86299997568130493 $_obj_poly_instancer1_instance_asset_01
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_poly_instancer1_instance_asset_01
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01
opcf $_obj_poly_instancer1_instance_asset_01

# Node $_obj_poly_instancer1_instance_asset_01_randomize (Sop/attribvop)
set _obj_poly_instancer1_instance_asset_01_randomize = `run("opadd -e -n -v attribvop randomize")`
oplocate -x `$arg2 + 5.0602499129609999` -y `$arg3 + -1.84662805923` $_obj_poly_instancer1_instance_asset_01_randomize
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_poly_instancer1_instance_asset_01_randomize
opparm $_obj_poly_instancer1_instance_asset_01_randomize  bindings ( 0 ) groupbindings ( 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_instance_asset_01_randomize
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_randomize
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize
opcf $_obj_poly_instancer1_instance_asset_01_randomize

# Node $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + -2.2312100870389999` -y `$arg3 + 6.0254719407700001` $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_poly_instancer1_instance_asset_01_randomize_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 27.891669912961` -y `$arg3 + 4.9940019407699996` $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopoutput1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopoutput1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopoutput1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopoutput1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_const1 (Vop/constant)
set _obj_poly_instancer1_instance_asset_01_randomize_const1 = `run("opadd -e -n -v constant const1")`
oplocate -x `$arg2 + 2.3395299129609999` -y `$arg3 + 8.6797819407700008` $_obj_poly_instancer1_instance_asset_01_randomize_const1
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_randomize_const1 consttype ( vector ) vectordef ( 0 1 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_const1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_const1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_randomize_const1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_const1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_const1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_bind1 (Vop/bind)
set _obj_poly_instancer1_instance_asset_01_randomize_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 5.1436099129609998` -y `$arg3 + 8.6797819407700008` $_obj_poly_instancer1_instance_asset_01_randomize_bind1
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_randomize_bind1 parmname ( Up ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_bind1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_bind1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_randomize_bind1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_bind1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_bind1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_align1 (Vop/align)
set _obj_poly_instancer1_instance_asset_01_randomize_align1 = `run("opadd -e -n -v align align1")`
oplocate -x `$arg2 + 7.8916899129609996` -y `$arg3 + 7.0863019407700003` $_obj_poly_instancer1_instance_asset_01_randomize_align1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_align1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_align1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_align1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_align1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_align1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_rotate1 (Vop/rotate)
set _obj_poly_instancer1_instance_asset_01_randomize_rotate1 = `run("opadd -e -n -v rotate rotate1")`
oplocate -x `$arg2 + 17.435269912961001` -y `$arg3 + 5.2468319407699999` $_obj_poly_instancer1_instance_asset_01_randomize_rotate1
opparm $_obj_poly_instancer1_instance_asset_01_randomize_rotate1 signature ( m3 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_rotate1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_rotate1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_rotate1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_rotate1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_rotate1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_degtorad1 (Vop/degtorad)
set _obj_poly_instancer1_instance_asset_01_randomize_degtorad1 = `run("opadd -e -n -v degtorad degtorad1")`
oplocate -x `$arg2 + 7.0212699129610003` -y `$arg3 + 3.7567519407700001` $_obj_poly_instancer1_instance_asset_01_randomize_degtorad1
opparm $_obj_poly_instancer1_instance_asset_01_randomize_degtorad1 deg ( 360 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_degtorad1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_degtorad1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_degtorad1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_degtorad1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_degtorad1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_random1 (Vop/random)
set _obj_poly_instancer1_instance_asset_01_randomize_random1 = `run("opadd -e -n -v random random1")`
oplocate -x `$arg2 + 4.0547499129610003` -y `$arg3 + 1.8214619407699999` $_obj_poly_instancer1_instance_asset_01_randomize_random1
opparm $_obj_poly_instancer1_instance_asset_01_randomize_random1 signature ( i )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_random1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_random1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_random1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_random1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_random1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_fit1 (Vop/fit)
set _obj_poly_instancer1_instance_asset_01_randomize_fit1 = `run("opadd -e -n -v fit fit1")`
oplocate -x `$arg2 + 7.0212699129610003` -y `$arg3 + 1.8214619407699999` $_obj_poly_instancer1_instance_asset_01_randomize_fit1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_fit1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_fit1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_fit1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_fit1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_fit1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_multiply1 (Vop/multiply)
set _obj_poly_instancer1_instance_asset_01_randomize_multiply1 = `run("opadd -e -n -v multiply multiply1")`
oplocate -x `$arg2 + 10.934569912961001` -y `$arg3 + 2.6272829407699998` $_obj_poly_instancer1_instance_asset_01_randomize_multiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_multiply1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_multiply1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_randomize_multiply1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_multiply1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_multiply1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1 (Vop/matxtoquat)
set _obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1 = `run("opadd -e -n -v matxtoquat matxtoquat1")`
oplocate -x `$arg2 + 20.825169912961002` -y `$arg3 + 5.2468319407699999` $_obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1

# Node $_obj_poly_instancer1_instance_asset_01_randomize_bind2 (Vop/bind)
set _obj_poly_instancer1_instance_asset_01_randomize_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 24.556969912961002` -y `$arg3 + 5.2468319407699999` $_obj_poly_instancer1_instance_asset_01_randomize_bind2
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_randomize_bind2 parmname ( orient ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_bind2
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_bind2
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_randomize_bind2
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_bind2
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_bind2

# Node $_obj_poly_instancer1_instance_asset_01_randomize_fit2 (Vop/fit)
set _obj_poly_instancer1_instance_asset_01_randomize_fit2 = `run("opadd -e -n -v fit fit2")`
oplocate -x `$arg2 + 7.0212699129610003` -y `$arg3 + -1.34758805923` $_obj_poly_instancer1_instance_asset_01_randomize_fit2
chblockbegin
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01_randomize_fit2 destmin
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../../../min")' $_obj_poly_instancer1_instance_asset_01_randomize_fit2/destmin
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01_randomize_fit2 destmax
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../../../max")' $_obj_poly_instancer1_instance_asset_01_randomize_fit2/destmax
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_fit2
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_fit2
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_fit2
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_fit2
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_fit2

# Node $_obj_poly_instancer1_instance_asset_01_randomize_bind3 (Vop/bind)
set _obj_poly_instancer1_instance_asset_01_randomize_bind3 = `run("opadd -e -n -v bind bind3")`
oplocate -x `$arg2 + 10.427069912961` -y `$arg3 + -1.34758805923` $_obj_poly_instancer1_instance_asset_01_randomize_bind3
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_randomize_bind3 parmname ( pscale ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_bind3
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_bind3
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_randomize_bind3
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_bind3
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_bind3

# Node $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1 (Vop/mulconst)
set _obj_poly_instancer1_instance_asset_01_randomize_mulconst1 = `run("opadd -e -n -v mulconst mulconst1")`
oplocate -x `$arg2 + 13.416969912960999` -y `$arg3 + 2.6272829407699998` $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1
chblockbegin
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1 mulconst
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../../../random_rotation_seed")' $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1/mulconst
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1
opcf ..

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull (Sop/attribvop)
set _obj_poly_instancer1_instance_asset_01_texture_cull = `run("opadd -e -n -v attribvop texture_cull")`
oplocate -x `$arg2 + 6.5073099129610004` -y `$arg3 + 0.56325194076999996` $_obj_poly_instancer1_instance_asset_01_texture_cull
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "map"   label   "tesxture map"  type    image   default { "Mandril.pic" }       parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_poly_instancer1_instance_asset_01_texture_cull
opparm $_obj_poly_instancer1_instance_asset_01_texture_cull  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01_texture_cull map
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("../../densitytexture")' $_obj_poly_instancer1_instance_asset_01_texture_cull/map
chblockend
chautoscope $_obj_poly_instancer1_instance_asset_01_texture_cull +map
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_instance_asset_01_texture_cull
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_texture_cull
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_texture_cull
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_texture_cull
opcf $_obj_poly_instancer1_instance_asset_01_texture_cull

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 3.726549912961` -y `$arg3 + 4.3428819407699999` $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1 (Vop/texture::2.0)
set _obj_poly_instancer1_instance_asset_01_texture_cull_texture1 = `run("opadd -e -n -v texture::2.0 texture1")`
oplocate -x `$arg2 + 9.4037999129610004` -y `$arg3 + 4.1260619407699997` $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1
opuserdata -n '___toolcount___' -v '32' $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1
opuserdata -n '___toolid___' -v 'tool_2' $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull_map (Vop/parameter)
set _obj_poly_instancer1_instance_asset_01_texture_cull_map = `run("opadd -e -n -v parameter map")`
oplocate -x `$arg2 + 9.2708399129609997` -y `$arg3 + 6.7673419407699997` $_obj_poly_instancer1_instance_asset_01_texture_cull_map
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_texture_cull_map parmname ( map ) parmlabel ( 'tesxture map' ) parmtype ( image ) imagedef ( Mandril.pic ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e off -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_texture_cull_map
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull_map
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_texture_cull_map
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_texture_cull_map
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_texture_cull_map

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull_luminance1 (Vop/luminance)
set _obj_poly_instancer1_instance_asset_01_texture_cull_luminance1 = `run("opadd -e -n -v luminance luminance1")`
oplocate -x `$arg2 + 11.876969912961` -y `$arg3 + 4.1260619407699997` $_obj_poly_instancer1_instance_asset_01_texture_cull_luminance1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_texture_cull_luminance1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull_luminance1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_texture_cull_luminance1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_texture_cull_luminance1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_texture_cull_luminance1

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull_removepoint1 (Vop/removepoint)
set _obj_poly_instancer1_instance_asset_01_texture_cull_removepoint1 = `run("opadd -e -n -v removepoint removepoint1")`
oplocate -x `$arg2 + 20.062269912961` -y `$arg3 + 1.66868394077` $_obj_poly_instancer1_instance_asset_01_texture_cull_removepoint1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_texture_cull_removepoint1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull_removepoint1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_texture_cull_removepoint1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_texture_cull_removepoint1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_texture_cull_removepoint1

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1 (Vop/random_sobol)
set _obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1 = `run("opadd -e -n -v random_sobol random_sobol1")`
oplocate -x `$arg2 + 9.3020199129610006` -y `$arg3 + 6.6388119407700001` $_obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1
opuserdata -n '___Version___' -v '' $_obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1 (Vop/block_begin_if)
set _obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1 = `run("opadd -e -n -v block_begin_if if_begin1")`
oplocate -x `$arg2 + 17.403569912961` -y `$arg3 + 1.7436829407700001` $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1
opparm $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1  outputnum ( 1 )
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1 blockpath ( ../end_if1 ) outputnum ( 1 )
opcolor -c 0 0.46666699647903442 1 $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1 (Vop/block_end)
set _obj_poly_instancer1_instance_asset_01_texture_cull_end_if1 = `run("opadd -e -n -v block_end end_if1")`
oplocate -x `$arg2 + 22.898169912960999` -y `$arg3 + 1.9510639407699999` $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1
opparm $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1  outputnum ( 0 )
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1 blockpath ( ../if_begin1 ) encloseinputs ( on )
opcolor -c 0 0.46666699647903442 1 $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_texture_cull_end_if1

# Node $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1 (Vop/compare)
set _obj_poly_instancer1_instance_asset_01_texture_cull_compare1 = `run("opadd -e -n -v compare compare1")`
oplocate -x `$arg2 + 14.566569912961` -y `$arg3 + 4.6137419407699998` $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1 cmp ( gt )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1
opcf ..
opcf ..
opcf ..
opcf $_obj_poly_instancer1
opcf $_obj_poly_instancer1_instance_asset_01

# Node $_obj_poly_instancer1_instance_asset_01_object_merge3 (Sop/object_merge)
set _obj_poly_instancer1_instance_asset_01_object_merge3 = `run("opadd -e -n -v object_merge object_merge3")`
oplocate -x `$arg2 + 5.0602499129609999` -y `$arg3 + 4.1432219407700002` $_obj_poly_instancer1_instance_asset_01_object_merge3
opparm $_obj_poly_instancer1_instance_asset_01_object_merge3  numobj ( 1 )
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_object_merge3 xformtype ( local ) objpath1 ( ../../ground/OUT_GROUND )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_instance_asset_01_object_merge3
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_object_merge3
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_object_merge3
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_object_merge3
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_object_merge3

# Node $_obj_poly_instancer1_instance_asset_01_scatter3 (Sop/scatter::2.0)
set _obj_poly_instancer1_instance_asset_01_scatter3 = `run("opadd -e -n -v scatter::2.0 scatter3")`
oplocate -x `$arg2 + 5.0602499129609999` -y `$arg3 + 1.9373389407699999` $_obj_poly_instancer1_instance_asset_01_scatter3
chblockbegin
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01_scatter3 usedensityattrib
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../../toggle_density")' $_obj_poly_instancer1_instance_asset_01_scatter3/usedensityattrib
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01_scatter3 npts
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../../scatter_amount")' $_obj_poly_instancer1_instance_asset_01_scatter3/npts
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01_scatter3 seed
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../../scatter_seed")' $_obj_poly_instancer1_instance_asset_01_scatter3/seed
chblockend
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_scatter3 stdswitcher ( 1 1 ) usedensityattrib ( usedensityattrib ) densityattrib ( '`chs("../../densityattrib")`' ) npts ( npts ) seed ( seed ) pointattribs ( '* ^Pref' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_instance_asset_01_scatter3
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_scatter3
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_scatter3
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_scatter3
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_scatter3

# Node $_obj_poly_instancer1_instance_asset_01_nothing (Sop/null)
set _obj_poly_instancer1_instance_asset_01_nothing = `run("opadd -e -n -v null nothing")`
oplocate -x `$arg2 + 1.929299912961` -y `$arg3 + -0.084588059229999998` $_obj_poly_instancer1_instance_asset_01_nothing
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_instance_asset_01_nothing
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_nothing
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_nothing
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_nothing
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_nothing

# Node $_obj_poly_instancer1_instance_asset_01_switch2 (Sop/switch)
set _obj_poly_instancer1_instance_asset_01_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 5.0602499129609999` -y `$arg3 + -3.3595480592300002` $_obj_poly_instancer1_instance_asset_01_switch2
chblockbegin
chadd -t 0 0 $_obj_poly_instancer1_instance_asset_01_switch2 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../../turn_instancer_on_off")' $_obj_poly_instancer1_instance_asset_01_switch2/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_instance_asset_01_switch2
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_switch2
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_switch2
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_switch2
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_switch2
opcf $_obj_poly_instancer1_instance_asset_01_randomize
oporder -e geometryvopglobal1 geometryvopoutput1 const1 bind1 align1 rotate1 degtorad1 random1 fit1 multiply1 matxtoquat1 bind2 fit2 bind3 mulconst1 
opcf ..
opcf $_obj_poly_instancer1_instance_asset_01_texture_cull
oporder -e geometryvopglobal1 texture1 map luminance1 removepoint1 random_sobol1 if_begin1 end_if1 compare1 
opcf ..

# Node $_obj_poly_instancer1_instance_asset_01_attribpromote1 (Sop/attribpromote)
set _obj_poly_instancer1_instance_asset_01_attribpromote1 = `run("opadd -e -n -v attribpromote attribpromote1")`
oplocate -x `$arg2 + 5.0602499129609999` -y `$arg3 + 3.0778619407700001` $_obj_poly_instancer1_instance_asset_01_attribpromote1
opparm -V 16.0.736 $_obj_poly_instancer1_instance_asset_01_attribpromote1 inname ( uv ) inclass ( vertex ) method ( first )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_instance_asset_01_attribpromote1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_attribpromote1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_attribpromote1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_attribpromote1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_attribpromote1

# Node $_obj_poly_instancer1_instance_asset_01_switch1 (Sop/switch)
set _obj_poly_instancer1_instance_asset_01_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 5.0602499129609999` -y `$arg3 + -0.47987805922999999` $_obj_poly_instancer1_instance_asset_01_switch1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_instance_asset_01_switch1
opexprlanguage -s hscript $_obj_poly_instancer1_instance_asset_01_switch1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_instance_asset_01_switch1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_instance_asset_01_switch1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_instance_asset_01_switch1
oporder -e object_merge3 scatter3 nothing switch2 randomize texture_cull attribpromote1 switch1 
opcf ..

# Node $_obj_poly_instancer1_ground (Object/geo)
set _obj_poly_instancer1_ground = `run("opadd -e -n -v geo ground")`
oplocate -x `$arg2 + 7.270059912961` -y `$arg3 + 6.0781619407700003` $_obj_poly_instancer1_ground
opspareds '    group {  name    "stdswitcher4"  label   "Transform"     parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            export      all     }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher4_1"        label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      none    }       parm {      name        "display"           baseparm        label       "Display"           export      none    }       parm {      name        "viewportlod"       label       "Display As"        type        ordinal             default     { "0" }             help        "Choose how the object\'s geometry should be rendered in the viewport"      menu        {               "full"  "Full Geometry"                 "points"        "Point Cloud"           "box"   "Bounding Box"          "centroid"      "Centroid"              "hidden"        "Hidden"                "subd"  "Subdivision Surface / Curves"      }       parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendervisibility"       label       "Render Visibility"         type        string      default     { "*" }             menureplace {               "*"     "Visible to all"                "primary"       "Visible only to primary rays"          "primary|shadow"        "Visible only to primary and shadow rays"               "-primary"      "Invisible to primary rays (Phantom)"           "-diffuse"      "Invisible to diffuse rays"             "-diffuse&-reflect&-refract"    "Invisible to secondary rays"           ""      "Invisible (Unrenderable)"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendervisibility" }        parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendersubd"             label       "Render Polygons As Subdivision (Mantra)"           type        toggle      default     { "0" }             parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendersubd" }      parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdstyle"      label       "Subdivision Style"         type        string      default     { "mantra_catclark" }       hidewhen    "{ vm_rendersubd == 0 }"            menu        {               "mantra_catclark"       "Mantra Catmull-Clark"          "osd_catclark"  "OpenSubdiv Catmull-Clark"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdstyle" }       parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdgroup"      label       "Subdivision Group"         type        string      default     { "" }      hidewhen    "{ vm_rendersubd == 0 }"            parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdgroup" }       parmtag     { "spare_category" "Geometry" }         }       group {             name        "folder0"           label       "Shading"           parm {              name    "categories"            label   "Categories"            type    string          default { "" }          help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }      }       parm {              name    "reflectmask"           label   "Reflection Mask"               type    oplist          default { "*" }                 help    "Objects that will be reflected on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "refractmask"           label   "Refraction Mask"               type    oplist          default { "*" }                 help    "Objects that will be refracted on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightmask"             label   "Light Mask"            type    oplist          default { "*" }                 help    "Lights that illuminate this object."           parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightcategories"               label   "Light Selection"               type    string          default { "*" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilter"               label   "Volume Filter"                 type    string          default { "box" }               menu    {                   "box"       "Box Filter"                "gaussian"  "Gaussian"                  "bartlett"  "Bartlett (triangle)"               "catrom"    "Catmull-Rom"               "hanning"   "Hanning"                   "blackman"  "Blackman"                  "sinc"      "Sinc (sharpening)"             }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filter" }              parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilterwidth"          label   "Volume Filter Width"           type    float           default { "1" }                 range   { 0.001 5 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_matte"              label   "Matte shading"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "matte" }               parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_rayshade"           label   "Raytrace Shading"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rayshade" }            parmtag { "spare_category" "Shading" }      }   }       group {             name        "folder0_1"         label       "Sampling"          parm {              name    "geo_velocityblur"              label   "Geometry Velocity Blur"                type    toggle          default { "0" }                 disablewhen     "{ allowmotionblur == 0 }"              parmtag { "spare_category" "Sampling" }             }   }       group {             name        "folder0_2"         label       "Dicing"            parm {              name    "vm_shadingquality"             label   "Shading Quality"               type    float           default { "1" }                 range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "shadingquality" }              parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_flatness"           label   "Dicing Flatness"               type    float           default { "0.05" }              range   { 0 1 }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "flatness" }            parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu    {                   "0" "Disable Predicing"                 "1" "Full Predicing"                    "2" "Precompute Bounds"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "raypredice" }          parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_curvesurface"               label   "Shade Curves As Surfaces"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "curvesurface" }                parmtag { "spare_category" "Dicing" }       }   }       group {             name        "folder0_3"         label       "Geometry"          parm {              name    "vm_rmbackface"                 label   "Backface Removal"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rmbackface" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "shop_geometrypath"             label   "Procedural Shader"             type    oppath          default { "" }          parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }              parmtag { "oprelative" "." }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_forcegeometry"              label   "Force Procedural Geometry Output"              type    toggle          default { "1" }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_rendersubdcurves"           label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubdcurves" }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpoints"               label   "Render As Points (Mantra)"             type    integer                 default { "2" }                 menu    {                   "0" "No Point Rendering"                "1" "Render Only Points"                "2" "Render Unconnected Points"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpoints" }                parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpointsas"             label   "Render Points As (Mantra)"             type    integer                 default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              menu    {                   "0" "Spheres"                   "1" "Circles"               }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpointsas" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_usenforpoints"              label   "Use N For Point Rendering"             type    toggle          default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "usenforpoints" }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pointscale"                 label   "Point Scale"           type    float           default { "1" }                 disablewhen     "{ vm_renderpoints == 0 }"              range   { 0! 10 }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pointscale" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pscalediameter"             label   "Treat Point Scale as Diameter Instead of Radius"               type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pscalediameter" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_metavolume"                 label   "Metaballs as Volume"           type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "metavolume" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_coving"             label   "Coving"                type    integer                 default { "1" }                 menu    {                   "0" "Disable Coving"                    "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "coving" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_materialoverride"           label   "Material Override"             type    string          default { "compact" }           menu    {                   "none"      "Disabled"                  "full"      "Evaluate for Each Primitve/Point"                  "compact"   "Evaluate Once"                 }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_overridedetail"             label   "Ignore Geometry Attribute Shaders"             type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "overridedetail" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_procuseroottransform"               label   "Proc Use Root Transform"               type    toggle          default { "1" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "procuseroottransform" }                parmtag { "spare_category" "Geometry" }             }   }      }      group {   name    "stdswitcher4_2"        label   "Arnold"        parm {      name        "shop_propertiespath"       label       "Default Properties"        type        oppath      default     { "" }      help        "Specifies a Property SHOP that is used to resolve rendering parameter values. At render time, this SHOP (if given) is used to resolve rendering parameter values first, before looking for then on the objects being rendered."            range       { 0 1 }             parmtag     { "opfilter" "!!SHOP/PROPERTIES!!" }        parmtag     { "oprelative" "." }        parmtag     { "spare_category" "Shaders" }  }       parm {      name        "ar_user_options"           label       "User Options"      type        string      joinnext        default     { "" }      help        "This string is passed to AiNodeSetAttributes() ont the Arnold node. It can contain any number of parameter/value pairs separated by whitespace (spaces, tabs, newlines) as found in .ass files."           disablewhen "{ ar_user_options_enable == 0 }"       }       parm {      name        "ar_user_options_enable"            label       "Enable"            type        toggle      default     { "0" }             help        "Overrides the value of any parameter of the Arnold node."      }       group {             name        "folder_subdivision"        label       "Subdivision"       parm {              name    "ar_subdiv_type"                label   "Type"          type    string          default { "none" }              help    "Subdivision algorithm. None ignores any subdivision and renders the mesh as it is. Linear subdivision puts vertices in the middle of each face. The Catmull-Clark algorithm is used to create smooth surfaces by recursive subdivision surface modeling. The resulting surface will always consist of a mesh of quadrilateral faces."          menu    {                   "none"      "None"              "catclark"  "Catmull-Clark"                     "linear"    "Linear"                }               range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }          }       parm {              name    "ar_subdiv_iterations"          label   "Iterations"            type    integer                 default { "1" }                 help    "The number of iterations / levels of subdivision. With Catmull-Clark subdivision, increasing the number of iterations produces a smoother mesh."               disablewhen     "{ ar_subdiv_type == none }"            range   { 1! 10 }               parmtag { "spare_category" "Subdivision" }          }       parm {              name    "ar_subdiv_adaptive_metric"             label   "Adaptive Metric"               type    string          joinnext                default { "auto" }              help    "The adaptive subdivision criterion. Auto subdiv will choose between the EDGELENGTH mode and the FLATNESS depending on the displacement property of the polymesh. This means that if there is a displacement it will use the EDGELENGTH algorithm. If there is not displacement (or it is ignored in the global options) it will use FLATNESS."                 disablewhen     "{ ar_subdiv_type == none }"            menu    {                   "auto"      "Auto"              "edge_length"       "Edge Length"               "flatness"  "Flatness"              }               parmtag { "spare_category" "Subdivision" }          }       parm {              name    "ar_subdiv_adaptive_error"              label   "     Error"            type    float           default { "0" }                 help    "The \\"adaptive error\\" refers to the acceptable tessellation error as seen from the camera. If there\'s no displacement, then the error represents the distance from the subdivided mesh to the \\"true\\" or \\"limit\\" surface -- sort of a \\"flatness\\" heuristic. The smaller the error, the closer to the limit surface a mesh will be and the less inter-frame popping when the subdivision level jumps. If displacement is enabled, then the error represents the final size of the subdivided quads. A value of 0 disables adaptive subdivision."                 disablewhen     "{ ar_subdiv_type == none }"            range   { 0! 10 }               parmtag { "spare_category" "Subdivision" }          }       parm {              name    "ar_subdiv_adaptive_space"              label   "Adaptive Space"                type    string          default { "raster" }            help    "The space in which the adaptive metric is evaluated."          disablewhen     "{ ar_subdiv_type == none }"            menu    {                   "raster"    "Raster"                    "object"    "Object"                }               parmtag { "spare_category" "Subdivision" }          }       parm {              name    "ar_subdiv_uv_smoothing"                label   "UV Smoothing"          type    string          joinnext                default { "pin_corners" }               help    "UV smoothing algorithm."               disablewhen     "{ ar_subdiv_type == none }"            menu    {                   "pin_corners"       "Pin Corners"               "pin_borders"       "Pin Borders"               "linear"    "Linear"                    "smooth"    "Smooth"                }               range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }          }       parm {              name    "ar_subdiv_smooth_derivs"               label   "Smooth Derivatives"            type    toggle          default { "0" }                 help    "This option makes it possible to remove the faceted appearance from anisotropic speculars. The object must have a valid UV map for this option to work and only works if you apply at least one subdivision level to the geometry."            disablewhen     "{ ar_subdiv_type == none }"            range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }          }       parm {              name    "ar_merge_vertex_indices"               label   "Merge Vertex Indices"          type    toggle          default { "1" }                 help    "Enable merging of the indices and data of coincident and identical vertex attribute values (UVs, normals, vertex user data). This allows the proper interpolation of vertex attributes when subdividing, and yields more compact render scenes in memory and on disk, at the cost of a slower export."                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }          }   }       group {             name        "folder_subdivision_1"      label       "Displacement"              parm {              name    "ar_disp_height"                label   "Height"                type    float           default { "1" }                 range   { 0 10 }                parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_disp_zero_value"            label   "Zero Value"            type    float           default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_disp_padding"               label   "Bounds Padding"                type    float           default { "0" }                 range   { 0 10 }                parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_disp_autobump"              label   "Autobump"              type    toggle          default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_autobump_visibility_camera"                 label   "Autobump Camera Rays"          type    toggle          default { "1" }                 help    "Toggle autobump for camera rays (i.e. primary or view rays)."          disablewhen     "{ ar_disp_autobump == 0 }"             range   { 0 1 }                 parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_autobump_visibility_shadow"                 label   "Autobump Shadow Rays"          type    toggle          default { "0" }                 help    "Toggle autobump for shadow rays fired in the direct lighting calculations."            disablewhen     "{ ar_disp_autobump == 0 }"             range   { 0 1 }                 parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_autobump_visibility_diffuse_transmit"               label   "Autobump Diffuse Transmission Rays"            type    toggle          default { "0" }                 help    "Toggle autobump for indirect diffuse transmission rays."               disablewhen     "{ ar_disp_autobump == 0 }"             range   { 0 1 }                 parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_autobump_visibility_specular_transmit"              label   "Autobump Specular Transmission Rays"           type    toggle          default { "0" }                 help    "Toggle autobump for indirect specular transmission rays."              disablewhen     "{ ar_disp_autobump == 0 }"             range   { 0 1 }                 parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_autobump_visibility_diffuse_reflect"                label   "Autobump Diffuse Reflection Rays"              type    toggle          default { "0" }                 help    "Toggle autobump for indirect diffuse reflection rays."                 disablewhen     "{ ar_disp_autobump == 0 }"             range   { 0 1 }                 parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_autobump_visibility_specular_reflect"               label   "Autobump Specular Reflection Rays"             type    toggle          default { "0" }                 help    "Toggle autobump for indirect specular reflection rays."                disablewhen     "{ ar_disp_autobump == 0 }"             range   { 0 1 }                 parmtag { "spare_category" "Displacement" }         }       parm {              name    "ar_autobump_visibility_volume"                 label   "Autobump Volume Scattering Rays"               type    toggle          default { "0" }                 help    "Toggle autobump for indirect volume scattering rays."          disablewhen     "{ ar_disp_autobump == 0 }"             range   { 0 1 }                 parmtag { "spare_category" "Displacement" }         }   }       group {             name        "folder_subdivision_2"      label       "Shapes"            parm {              name    "ar_min_pixel_width"            label   "Minimum Pixel Width"           type    float           default { "0" }                 help    "If this value is non-zero, points or curves with a small on-screen width will be automatically enlarged so that they are at least the specified size in pixels. The enlargement fraction is then used in the hair shader to adjust the opacity so that the visible thickness of the hair remains the same. For a given number of AA samples, this makes it a lot easier to antialias fine hair, at the expense of render time (because of the additional transparency/depth complexity). Good values are in the range 0.2 to 0.7. Values closer to 0 are faster to render but need more AA samples. So if your scene already uses very high AA settings, you should use a low value like 0.1. For best results, you may need to increase the auto-transparency depth, and/or lower the auto-transparency threshold, but watch the effect on render times. Note that this parameter currently works with the ribbon mode only."                 range   { 0 10 }                parmtag { "spare_category" "Curves" }       }       parm {              name    "ar_radius"             label   "Default Radius"                type    float           default { "0.05" }              help    "Sets the default rendered radius of points or thickness of curves. This property can be overridden per point with the \\"ar_radius\\", \\"pscale\\" or \\"width\\" (curves only) attributes."          range   { 0 10 }                parmtag { "units" "m1" }            }       group {             name    "folder_points"                 label   "Points"                parm {              name        "ar_mode"                   label       "Mode"              type        ordinal                     default     { "sphere" }                help        "Rendering mode for points or particles. Can be spheres, or camera-facing disks or quads."                  menu        {                       "disk"  "Disk"                  "sphere"        "Sphere"                        "quad"  "Quad"              }               range       { 0 1 }                 }               parm {              name        "ar_point_scale"                    label       "Point Scale"               type        float               default     { "1" }                     help        "A global scale factor applied to points."                  range       { 0! 10 }               }               parm {              name        "ar_aspect"                 label       "Aspect"                    type        log                 default     { "1" }                     help        "The aspect ratio for quads. This property can be overrriden per point by setting the \\"ar_aspect\\" or \\"spritescale\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"               range       { 0.1 10 }              }               parm {              name        "ar_rotation"               label       "Rotation"                  type        angle               default     { "0" }                     help        "The rotation angle in degrees for quads. This property can be overrriden per point by setting the \\"ar_rotation\\" or the \\"spriterot\\" attributes on the geometry."                    disablewhen "{ ar_mode != quad }"               range       { -180 180 }            }           }       group {             name    "folder_points_1"               label   "Curves"                parm {              name        "ar_curves_basis"                   label       "Basis"                     type        string              default     { "auto" }                  help        "The curves basis to interpret the knots of the input curves or open polygons. When set to \\"Automatic\\", the basis will attempt to match the closest equivalent in Arnold, ie. linear for open polygons, Bezier for Bezier curves and B-spline for NURBS."               menu        {                       "bezier"        "Bezier"                        "b-spline"      "B-Spline"                      "catmull-rom"   "Catmull-Rom"                   "linear"        "Linear"                        "auto"  "Automatic"                 }               range       { 0 1 }                     parmtag     { "spare_category" "Curves" }           }               parm {              name        "ar_curves_mode"                    label       "Mode"              type        string              default     { "ribbon" }                help        "- Ribbon: This mode is recommended for fine geometry such as realistic hair, fur or fields of grass. These curves are rendered as camera-facing flat ribbons. For secondary and shadow rays, they face the incoming ray direction. This mode doesn\'t look so good for very wide hairs or dramatic zoom-ins because of the flat appearance. This mode works best with a proper hair shader (perhaps based on a Kay-Kajiya or Marschner specular model).\\\\n\\\\n- Thick: This mode resembles spaghetti. It has a circular cross section, and a normal vector that varies across the width of the hair. Thick hairs look great when zoomed in, and are specially useful for effects work, but their varying normals make them more difficult to antialias when they are small. You can use any shader with this rendering mode, including lambert, phong, etc.\\\\n\\\\n- Oriented: This mode is similar to the ribbons mode, but you can set the ribbon orientation for each knot with an \\"ar_orientations\\" vector attribute representing the direction of the normal of the ribbon. This mode can be useful to render grass strands for example."                    menu        {                       "ribbon"        "Ribbon"                        "thick" "Thick"                         "oriented"      "Oriented      "                    }               range       { 0 1 }                     parmtag     { "spare_category" "Curves" }           }           }       group {             name    "folder_points_2"               label   "Volumes"               parm {              name        "ar_step_size"              label       "Volume Step Size"                  type        float               default     { "0" }                     help        "When ar_step_size is set to a value other than zero, then points rendered as spheres, particles and polymeshes will be rendered as volumes."               range       { 0 1 }                 }               parm {              name        "ar_volume_padding"                 label       "Volume Padding"                    type        float               default     { "0" }                     help        "When rendering particles or polymeshes as volumes (when ar_step_size is non-zero), ar_volume_padding will provide extra the volume padding specified for displacement requirements"                disablewhen "{ ar_step_size == 0 }"                     range       { 0 10 }                }               parm {              name        "label_volume"              label       "Label"                     type        label               nolabel                 default     { "" }          }               parm {              name        "label_volume2"                     label       "Label"                     type        label               nolabel                 default     { "Points and polymeshes are rendered as volumes if Step Size > 0" }            }           }       group {             name    "folder_points_3"               label   " VDB "                 parm {              name        "ar_vdb_file_enable"                label       "Export VDB File"                   type        toggle              nolabel                 joinnext                default     { "0" }                     help        "Export the VDB primitives as a VDB file and reference the file in the Arnold volume."              range       { 0 1 }                 }               parm {              name        "ar_vdb_file"               label       "Save to File"              type        file                default     { "$HIP/`pythonexprs(\\"hou.pwd().path()[1:].replace(\'/\', \'_\')\\")`.$F4.vdb" }                  help        "The OpenVDB file name that the VDB primitves will be written to, and that will be referenced by the Arnold volume instead of attaching the volume data."                   disablewhen "{ ar_vdb_file_enable == 0 }"               range       { 0 1 }                     parmtag     { "filechooser_pattern" "*.vdb" }               }               parm {              name        "ar_grids"                  label       "Export Grids"              type        string              default     { "*" }                     help        "The VDB grids to export and make available in the volume shading context."                 menutoggle  {                       [ "import htoa.properties" ]                    [ "return htoa.properties.vdbGridMenu()" ]                      language        python              }               range       { 0 1 }                     parmtag     { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                   parmtag     { "script_callback_language" "python" }                 }               parm {              name        "ar_velocity_grids"                 label       "Velocity Grids"                    type        string              default     { "*" }                     help        "Select 1 vector or 3 float grids representing velocity for motion blur."                   menutoggle  {                       [ "import htoa.properties" ]                    [ "return htoa.properties.vdbGridMenu()" ]                      language        python              }               range       { 0 1 }                 }               parm {              name        "ar_velocity_scale"                 label       "Velocity Scale"                    type        log                 default     { "1" }                     help        "Scale the velocities by this factor."              disablewhen "{ ar_velocity_grids == \\"\\" }"                   range       { 0.1 10 }              }               parm {              name        "ar_velocity_threshold"                     label       "Velocity Threshold"                type        log                 default     { "0.001" }                 help        "Controls filtering of noisy velocities. The default value 0.001 should have little to no visual impact, setting it to zero disables filtering entirely."                   disablewhen "{ ar_velocity_grids == \\"\\" }"                   range       { 0! 1! }               }               parm {              name        "ar_padding"                label       "Bounds Padding"                    type        float               default     { "0" }                     help        "Extra padding for the volume bounds"               range       { 0 10 }                }               parm {              name        "ar_step_size_type"                 label       "Volume Step"               type        ordinal                     joinnext                default     { "0" }                     help        "When set to auto, the step size is automatically determined by the volume plugin, yielding the minimum voxel size."                menu        {                       "auto"  "Automatic       "                      "custom"        "Custom"                    }               range       { 0 1 }                     parmtag     { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                   parmtag     { "script_callback_language" "python" }                 }               parm {              name        "ar_vdb_step_size"                  label       "      Step Size"                   type        float               default     { "0.02" }                  help        "The ray marching step size. When the step type is auto, this indicates the computed step size, the minimum voxel size."                    disablewhen "{ ar_step_size_type == auto }"                     range       { 0! 10 }               }               parm {              name        "ar_step_scale"                     label       "Step Scale"                type        log                 default     { "1" }                     help        "Multiply the step size by this factor, including when it\'s automatically detected."               range       { 0.1! 10 }             }               parm {              name        "ar_compress"               label       "Compress"                  type        toggle              invisible               default     { "1" }                     help        "Optimize voxel storage to reduce memory usage."                    range       { 0 1 }                 }           }       group {             name    "folder_points_4"               label   "Tessellation"                  parm {              name        "ar_tessellation_enable"                    label       "Tessellate Primitives"                     type        toggle              default     { "1" }                     help        "Tessellate Houdini primitives such as NURBS, Bezier meshes, circles, tubes or spheres prior to sending to Arnold."                 disablewhen "{ ar_tessellation_use_rop == 1 }"                  range       { 0 1 }                     parmtag     { "spare_category" "Tessellation" }             }               parm {              name        "ar_tessellation_style"                     label       "Tessellation Style"                type        string              invisible               default     { "lod" }                   help        "Specifies the conversion style for the geometry. The default is\\"Level of Detail\\". Can be one of the following:\\\\n- Level of Detail: Tessellate geometry using the level of detail settings.\\\\n- Divisions: Tessellate geometry based on the number of divisions settings."                 disablewhen "{ ar_tessellation_enable == 0 }"                   menu        {                       "lod"   "Level of Detail"                       "div"   "Divisions"                 }               range       { 0 1 }                     parmtag     { "spare_category" "Tessellation" }             }               parm {              name        "ar_tessellation_ulod"              label       "U Level of Detail"                 type        float               default     { "1" }                     help        "Specifies the level of detail for U subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."               disablewhen "{ ar_tessellation_enable == 0 }"                   hidewhen    "{ ar_tessellation_style != lod }"                  range       { 0! 10 }                   parmtag     { "spare_category" "Tessellation" }             }               parm {              name        "ar_tessellation_vlod"              label       "V Level of Detail"                 type        float               default     { "1" }                     help        "Specifies the level of detail for V subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."               disablewhen "{ ar_tessellation_enable == 0 }"                   hidewhen    "{ ar_tessellation_style != lod }"                  range       { 0! 10 }                   parmtag     { "spare_category" "Tessellation" }             }               parm {              name        "ar_tessellation_trimlod"                   label       "Trim Level of Detail"              type        float               default     { "1" }                     help        "Specifies the level of detail for trim curves of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                  disablewhen "{ ar_tessellation_enable == 0 }"                   hidewhen    "{ ar_tessellation_style != lod }"                  range       { 0! 10 }                   parmtag     { "spare_category" "Tessellation" }             }           }   }       group {             name        "folder_subdivision_3"      label       "Attributes"        parm {              name    "ar_attributes_detail"          label   "Detail Attributes"             type    string          default { "*" }                 help    "The list of details attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."          menutoggle      {                   [ "__import__(\'htoa\').properties.detailAttributeMenu()" ]                     language    python          }               range   { 0 1 }                 parmtag { "spare_category" "Attributes" }           }       parm {              name    "ar_attributes_primitive"               label   "Primitive Attributes"          type    string          default { "*" }                 help    "The list of primitive attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                menutoggle      {                   [ "__import__(\'htoa\').properties.primitiveAttributeMenu()" ]                  language    python          }               range   { 0 1 }                 parmtag { "spare_category" "Attributes" }           }       parm {              name    "ar_attributes_point"           label   "Point Attributes"              type    string          default { "*" }                 help    "The list of point attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."            menutoggle      {                   [ "__import__(\'htoa\').properties.pointAttributeMenu()" ]              language    python          }               range   { 0 1 }                 parmtag { "spare_category" "Attributes" }           }       parm {              name    "ar_attributes_vertex"          label   "Vertex Attributes"             type    string          default { "*" }                 help    "The list of vertex attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."           menutoggle      {                   [ "__import__(\'htoa\').properties.vertexAttributeMenu()" ]                     language    python          }               range   { 0 1 }                 parmtag { "spare_category" "Attributes" }           }   }       group {             name        "folder_subdivision_4"      label       "Motion Blur"       parm {              name    "ar_transform_type"             label   "Transform Type"                type    ordinal                 default { "2" }                 help    "The type of motion for the transformation of the object, as a hint for the matrix interpolation for transformation motion blur."               menu    {                   "linear"    "Linear"                    "rotate_about_origin"       "Rotate About Origin"               "rotate_about_center"       "Rotate About Center"           }               range   { 0 2 }                 parmtag { "spare_category" "Motion Blur" }          }       parm {              name    "ar_mb_xform_keys_override"             label   "Transform Keys Override"               type    toggle          nolabel                 joinnext                default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }          }       parm {              name    "ar_mb_xform_keys"              label   "Transform Keys"                type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result, especially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."          disablewhen     "{ ar_mb_xform_keys_override == 0 }"            range   { 1! 20 }               parmtag { "spare_category" "Motion Blur" }          }       parm {              name    "ar_mb_dform_keys_override"             label   "Deform Keys Override"          type    toggle          nolabel                 joinnext                default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }          }       parm {              name    "ar_mb_dform_keys"              label   "Deform Keys"           type    integer                 default { "2" }                 help    "Number of motion keys for object points. Just like with transformation motion keys, increasing this value allows curved motion paths to be rendered more accurately, at the expense of using more memory."             disablewhen     "{ ar_mb_dform_keys_override == 0 } { ar_mb_velocity_enable == 1 ar_mb_acceleration_enable != 1 }"              range   { 1! 20 }               parmtag { "spare_category" "Motion Blur" }          }       parm {              name    "ar_mb_velocity_enable"                 label   "Velocity Blur Enable"          type    toggle          nolabel                 joinnext                default { "0" }                 help    "Deformation blur will be computed from the \\"v\\" point attribute."           range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }          }       parm {              name    "ar_mb_velocity_attribute"              label   "Velocity Blur"                 type    string          default { "v" }                 help    "The velocity point attribute to use for velocity blur. The Houdini convention is \'v\'."               disablewhen     "{ ar_mb_velocity_enable == 0 }"                menureplace     {                   [ "geometry = hou.pwd().renderNode().geometry()" ]              [ "if not geometry:" ]                  [ "    return []" ]                     [ "menu_items = []" ]                   [ "for attr in geometry.pointAttribs():" ]              [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                 language    python          }               range   { 0 1 }             }       parm {              name    "ar_mb_acceleration_enable"             label   "Acceleration Blur Enable"              type    toggle          nolabel                 joinnext                default { "0" }                 disablewhen     "{ ar_mb_velocity_enable == 0 }"                range   { 0 1 }             }       parm {              name    "ar_mb_acceleration_attribute"          label   "Acceleration Blur"             type    string          default { "force" }             help    "The acceleration point attribute to use for acceleration blur. The Houdini convention is \'force\' or \'accel\'. If you use use \'force\' ensure you divide by the mass."              disablewhen     "{ ar_mb_velocity_enable == 0 } { ar_mb_acceleration_enable == 0 }"             menureplace     {                   [ "geometry = hou.pwd().renderNode().geometry()" ]              [ "if not geometry:" ]                  [ "    return []" ]                     [ "menu_items = []" ]                   [ "for attr in geometry.pointAttribs():" ]              [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                 language    python          }               range   { 0 1 }             }   }       group {             name        "folder_subdivision_5"      label       "Visibility"        parm {              name    "ar_visibility_camera"          label   "Visible to Camera Rays"                type    toggle          default { "1" }                 help    "Toggle object visibility for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_shadow"          label   "Visible to Shadow Rays"                type    toggle          default { "1" }                 help    "Toggle object visibility for shadow rays fired in the direct lighting calculations."           range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_diffuse_transmit"                label   "Visible to Diffuse Transmission Rays"          type    toggle          default { "1" }                 help    "Toggle object visibility for indirect diffuse transmission rays."              range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_specular_transmit"               label   "Visible to Specular Transmission Rays"                 type    toggle          default { "1" }                 help    "Toggle object visibility for indirect specular transmission rays."             range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_diffuse_reflect"                 label   "Visible to Diffuse Reflection Rays"            type    toggle          default { "1" }                 help    "Toggle object visibility for indirect diffuse reflection rays."                range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_specular_reflect"                label   "Visible to Specular Reflection Rays"           type    toggle          default { "1" }                 help    "Toggle object visibility for indirect specular reflection rays."               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_visibility_volume"          label   "Visible to Volume Scattering Rays"             type    toggle          default { "1" }                 help    "Toggle object visibility for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_receive_shadows"            label   "Receive Shadows"               type    toggle          default { "1" }                 help    "Enable/disable received shadows over the object."              range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_self_shadows"               label   "Self Shadows"          type    toggle          default { "1" }                 help    "Enable/disable self-shadowing over the object."                disablewhen     "{ ar_receive_shadows == 0 }"           range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_opaque"             label   "Opaque"                type    toggle          default { "1" }                 help    "By default, Arnold will assume that objects are opaque, which lets the renderer take certain shortcuts and optimizations for maximum ray tracing speed. When this option is unchecked, the object is assumed as \\"possibly transparent\\", and Arnold will perform extra computations to support transparency and transparent shadows, according to the shader\'s opacity settings."          range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_matte"              label   "Matte"                 type    toggle          default { "0" }                 help    "Output black and zero alpha for camera rays to create a holdout."              range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_skip"               label   "Skip"          type    toggle          default { "0" }                 help    "Do not output this object regardless of it being forced or not."               range   { 0 1 }                 parmtag { "spare_category" "Visibility" }           }       parm {              name    "ar_use_light_group"            label   "Use Light Group"               type    toggle          invisible               nolabel                 joinnext                default { "0" }                 range   { 0 1 }             }       parm {              name    "ar_light_group"                label   "Light Group"           type    oplist          invisible               default { "" }          disablewhen     "{ ar_use_light_group == 0 }"           range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/" }        }       parm {              name    "ar_use_shadow_group"           label   "Use Shadow Group"              type    toggle          invisible               nolabel                 joinnext                default { "0" }                 range   { 0 1 }             }       parm {              name    "ar_shadow_group"               label   "Shadow Group"          type    oplist          invisible               default { "" }          disablewhen     "{ ar_use_shadow_group == 0 }"          range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/" }        }       parm {              name    "ar_trace_sets"                 label   "Trace Sets"            type    string          default { "" }          menutoggle      {                   [ "def traverse(node, my_set):" ]               [ "    for child in node.children():" ]                 [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_trace_sets\'):" ]                [ "            setnames = child.parm(\'ar_trace_sets\').evalAsString()" ]               [ "            if setnames:" ]                  [ "                my_set.update(setnames.split())" ]                   [ "        traverse(child, my_set)" ]                   [ "" ]                  [ "tracesets = set()" ]                 [ "traverse(hou.node(\'/\'), tracesets)" ]              [ "tracesets = list(tracesets)" ]               [ "tracesets.sort()" ]                  [ "" ]                  [ "return [x for y in zip(tracesets, tracesets) for x in y]" ]                  language    python          }               range   { 0 1 }             }       parm {              name    "ar_sss_setname"                label   "SSS Set"               type    string          default { "" }          help    "Use this parameter to tag multiple objects as belonging to the same SSS set so that illumination will blur across object boundaries. A common use case might be blurring between teeth and gum geometry. This feature is only available when using raytraced SSS."             menureplace     {                   [ "def traverse(node, my_set):" ]               [ "    for child in node.children():" ]                 [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_sss_setname\'):" ]               [ "            setname = child.parm(\'ar_sss_setname\').evalAsString()" ]               [ "            if setname:" ]                   [ "                my_set.update([setname])" ]                  [ "        traverse(child, my_set)" ]                   [ "" ]                  [ "sss_names = set()" ]                 [ "traverse(hou.node(\'/\'), sss_names)" ]              [ "sss_names = list(sss_names)" ]               [ "sss_names.sort()" ]                  [ "" ]                  [ "return [x for y in zip(sss_names, sss_names) for x in y]" ]                  language    python          }               range   { 0 1 }             }   }       group {             name        "folder_subdivision_6"      label       "Normals"           parm {              name    "ar_smoothing"          label   "Smoothing"             type    toggle          default { "1" }                 help    "Smooth/Flat normals."          range   { 0 1 }                 parmtag { "spare_category" "Render" }       }       parm {              name    "ar_invert_normals"             label   "Invert Normals"                type    toggle          default { "0" }                 help    "Invert normals"                range   { 0 1 }                 parmtag { "spare_category" "Render" }       }       parm {              name    "ar_sidedness_camera"           label   "Double-sided for Camera Rays"          type    toggle          default { "1" }                 help    "Toggle object double-sidedness for camera rays (i.e. primary or view rays)."           range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_shadow"           label   "Double-sided for Shadow Rays"          type    toggle          default { "1" }                 help    "Toggle object double-sidedness for shadow rays fired in the direct lighting calculations."             range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_diffuse_transmit"                 label   "Double-sided for Diffuse Transmission Rays"            type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse transmission rays."                range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_specular_transmit"                label   "Double-sided for Specular Transmission Rays"           type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect specular transmission rays."               range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_diffuse_reflect"          label   "Double-sided for Diffuse Reflection Rays"              type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse reflection rays."          range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_specular_reflect"                 label   "Double-sided for Specular Reflection Rays"             type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }       parm {              name    "ar_sidedness_volume"           label   "Double-sided for Volume Scattering Rays"               type    toggle          default { "1" }                 help    "Toggle object double-sidedness for indirect volume scattering rays."           range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }            }   }      }      group {   name    "stdswitcher4_3"        label   "Misc"          parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "vport_onionskin"           baseparm        label       "Onion Skinning"            export      none    }     }  ' $_obj_poly_instancer1_ground
chblockbegin
chadd -t 0 0 $_obj_poly_instancer1_ground ar_point_scale
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_pointscale")' $_obj_poly_instancer1_ground/ar_point_scale
chadd -t 0 0 $_obj_poly_instancer1_ground ar_mb_velocity_enable
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("geo_velocityblur")' $_obj_poly_instancer1_ground/ar_mb_velocity_enable
chadd -t 0 0 $_obj_poly_instancer1_ground ar_matte
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_matte")' $_obj_poly_instancer1_ground/ar_matte
chblockend
opset -S on $_obj_poly_instancer1_ground
opparm -V 16.0.736 $_obj_poly_instancer1_ground use_dcolor ( off ) lightmask ( '* ^hero_light' ) ar_point_scale ( ar_point_scale ) ar_mb_velocity_enable ( ar_mb_velocity_enable ) ar_matte ( ar_matte )
chautoscope $_obj_poly_instancer1_ground +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_poly_instancer1_ground
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_poly_instancer1_ground
opexprlanguage -s hscript $_obj_poly_instancer1_ground
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_ground
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_ground
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_ground
opcf $_obj_poly_instancer1_ground

# Node $_obj_poly_instancer1_ground_object_merge1 (Sop/object_merge)
set _obj_poly_instancer1_ground_object_merge1 = `run("opadd -e -n -v object_merge object_merge1")`
oplocate -x `$arg2 + 7.4524099129610004` -y `$arg3 + 3.2998619407700001` $_obj_poly_instancer1_ground_object_merge1
opparm $_obj_poly_instancer1_ground_object_merge1  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_poly_instancer1_ground_object_merge1 objpath1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../../object_to_instance_on")' $_obj_poly_instancer1_ground_object_merge1/objpath1
chblockend
opparm -V 16.0.736 $_obj_poly_instancer1_ground_object_merge1 xformtype ( local ) objpath1 ( objpath1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_ground_object_merge1
opexprlanguage -s hscript $_obj_poly_instancer1_ground_object_merge1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_ground_object_merge1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_ground_object_merge1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_ground_object_merge1

# Node $_obj_poly_instancer1_ground_OUT_GROUND (Sop/null)
set _obj_poly_instancer1_ground_OUT_GROUND = `run("opadd -e -n -v null OUT_GROUND")`
oplocate -x `$arg2 + 7.4524099129610004` -y `$arg3 + -3.0770180592299998` $_obj_poly_instancer1_ground_OUT_GROUND
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_ground_OUT_GROUND
opexprlanguage -s hscript $_obj_poly_instancer1_ground_OUT_GROUND
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_ground_OUT_GROUND
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_ground_OUT_GROUND
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_ground_OUT_GROUND

# Node $_obj_poly_instancer1_ground_paint_scatter_density (Sop/paint)
set _obj_poly_instancer1_ground_paint_scatter_density = `run("opadd -e -n -v paint paint_scatter_density")`
oplocate -x `$arg2 + 7.4524099129610004` -y `$arg3 + -0.14436805923000001` $_obj_poly_instancer1_ground_paint_scatter_density
opparm -V 16.0.736 $_obj_poly_instancer1_ground_paint_scatter_density fg ( 0 0 0 ) overridecd ( on ) cdname ( '`chs("../../densityattrib")`' ) symaxis ( 1 0 0 )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_ground_paint_scatter_density
opexprlanguage -s hscript $_obj_poly_instancer1_ground_paint_scatter_density
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_ground_paint_scatter_density
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_ground_paint_scatter_density
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_ground_paint_scatter_density

# Node $_obj_poly_instancer1_ground_add_density (Sop/attribcreate::2.0)
set _obj_poly_instancer1_ground_add_density = `run("opadd -e -n -v attribcreate::2.0 add_density")`
oplocate -x `$arg2 + 7.4524099129610004` -y `$arg3 + 1.2026919407700001` $_obj_poly_instancer1_ground_add_density
opparm $_obj_poly_instancer1_ground_add_density  numattr ( 1 )
opparm -V 16.0.736 $_obj_poly_instancer1_ground_add_density name1 ( '`chs("../../densityattrib")`' ) value1v ( 1 0 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_ground_add_density
opexprlanguage -s hscript $_obj_poly_instancer1_ground_add_density
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_ground_add_density
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_ground_add_density
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_ground_add_density

# Node $_obj_poly_instancer1_ground_switch1 (Sop/switch)
set _obj_poly_instancer1_ground_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 7.4524099129610004` -y `$arg3 + -1.76695805923` $_obj_poly_instancer1_ground_switch1
chblockbegin
chadd -t 0 0 $_obj_poly_instancer1_ground_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../../densityoverride")' $_obj_poly_instancer1_ground_switch1/input
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_ground_switch1
opexprlanguage -s hscript $_obj_poly_instancer1_ground_switch1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_ground_switch1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_ground_switch1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_ground_switch1

# Node $_obj_poly_instancer1_ground_null1 (Sop/null)
set _obj_poly_instancer1_ground_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + 11.252569912961` -y `$arg3 + -0.14436805923000001` $_obj_poly_instancer1_ground_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_poly_instancer1_ground_null1
opexprlanguage -s hscript $_obj_poly_instancer1_ground_null1
opuserdata -n '___Version___' -v '16.0.736' $_obj_poly_instancer1_ground_null1
opuserdata -n '___toolcount___' -v '1' $_obj_poly_instancer1_ground_null1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_poly_instancer1_ground_null1
oporder -e object_merge1 OUT_GROUND paint_scatter_density add_density switch1 null1 
opcf ..
oporder -e instance_asset_01 ground 
opcf ..
opset -p on $_obj_poly_instancer1

opcf $arg1
opcf $_obj_poly_instancer1
opcf $_obj_poly_instancer1_instance_asset_01
opwire -n $_obj_poly_instancer1_instance_asset_01_attribpromote1 -0 $_obj_poly_instancer1_instance_asset_01_scatter3
opwire -n $_obj_poly_instancer1_instance_asset_01_nothing -0 $_obj_poly_instancer1_instance_asset_01_switch2
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize -1 $_obj_poly_instancer1_instance_asset_01_switch2
opwire -n $_obj_poly_instancer1_instance_asset_01_switch1 -0 $_obj_poly_instancer1_instance_asset_01_randomize
opcf $_obj_poly_instancer1_instance_asset_01_randomize
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_const1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_bind1
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_bind1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_align1
opwire -n -o 8 $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1 -1 $_obj_poly_instancer1_instance_asset_01_randomize_align1
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_align1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_rotate1
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1 -1 $_obj_poly_instancer1_instance_asset_01_randomize_rotate1
opwire -n -o 8 $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1 -2 $_obj_poly_instancer1_instance_asset_01_randomize_rotate1
opwire -n -o 12 $_obj_poly_instancer1_instance_asset_01_randomize_geometryvopglobal1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_random1
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_random1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_fit1
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_degtorad1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_multiply1
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_fit1 -1 $_obj_poly_instancer1_instance_asset_01_randomize_multiply1
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_rotate1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_matxtoquat1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_bind2
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_random1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_fit2
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_fit2 -0 $_obj_poly_instancer1_instance_asset_01_randomize_bind3
opwire -n $_obj_poly_instancer1_instance_asset_01_randomize_multiply1 -0 $_obj_poly_instancer1_instance_asset_01_randomize_mulconst1
opcf ..
opwire -n $_obj_poly_instancer1_instance_asset_01_scatter3 -0 $_obj_poly_instancer1_instance_asset_01_texture_cull
opcf $_obj_poly_instancer1_instance_asset_01_texture_cull
opwire -n -o 7 $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1 -0 $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1
opwire -n $_obj_poly_instancer1_instance_asset_01_texture_cull_map -2 $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1
opwire -n $_obj_poly_instancer1_instance_asset_01_texture_cull_texture1 -0 $_obj_poly_instancer1_instance_asset_01_texture_cull_luminance1
opwire -n -o 1 $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1 -1 $_obj_poly_instancer1_instance_asset_01_texture_cull_removepoint1
opwire -n -o 12 $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1 -1 $_obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1
opwire -n $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1 -0 $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1
opwire -n -o 12 $_obj_poly_instancer1_instance_asset_01_texture_cull_geometryvopglobal1 -1 $_obj_poly_instancer1_instance_asset_01_texture_cull_if_begin1
opwire -n $_obj_poly_instancer1_instance_asset_01_texture_cull_random_sobol1 -0 $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1
opwire -n $_obj_poly_instancer1_instance_asset_01_texture_cull_luminance1 -1 $_obj_poly_instancer1_instance_asset_01_texture_cull_compare1
opcf ..
opwire -n $_obj_poly_instancer1_instance_asset_01_object_merge3 -0 $_obj_poly_instancer1_instance_asset_01_attribpromote1
opwire -n $_obj_poly_instancer1_instance_asset_01_scatter3 -0 $_obj_poly_instancer1_instance_asset_01_switch1
opwire -n $_obj_poly_instancer1_instance_asset_01_texture_cull -1 $_obj_poly_instancer1_instance_asset_01_switch1
opcf ..
opcf $_obj_poly_instancer1_ground
opwire -n $_obj_poly_instancer1_ground_switch1 -0 $_obj_poly_instancer1_ground_OUT_GROUND
opwire -n $_obj_poly_instancer1_ground_add_density -0 $_obj_poly_instancer1_ground_paint_scatter_density
opwire -n $_obj_poly_instancer1_ground_object_merge1 -0 $_obj_poly_instancer1_ground_add_density
opwire -n $_obj_poly_instancer1_ground_paint_scatter_density -0 $_obj_poly_instancer1_ground_switch1
opwire -n $_obj_poly_instancer1_ground_null1 -1 $_obj_poly_instancer1_ground_switch1
opwire -n $_obj_poly_instancer1_ground_object_merge1 -0 $_obj_poly_instancer1_ground_null1
opcf ..
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_poly_instancer1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_poly_instancer1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="geo" label="particles" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_particles (Object/geo)
set _obj_particles = `run("opadd -e -n -v geo particles")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_particles
opspareds '    group {         name    "stdswitcher4"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher4_1"         label   "Render"          parm {             name    "shop_materialpath"             baseparm             label   "Material"             export  none         }         parm {             name    "shop_materialopts"             baseparm             label   "Options"             invisible             export  none         }         parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "viewportlod"             label   "Display As"             type    ordinal             default { "full" }             help    "Choose how the object\'s geometry should be rendered in the viewport"             menu {                 "full"      "Full Geometry"                 "points"    "Point Cloud"                 "box"       "Bounding Box"                 "centroid"  "Centroid"                 "hidden"    "Hidden"                 "subd"      "Subdivision Surface / Curves"             }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendervisibility"             label   "Render Visibility"             type    string             default { "*" }             menureplace {                 "*"                             "Visible to all"                 "primary"                       "Visible only to primary rays"                 "primary|shadow"                "Visible only to primary and shadow rays"                 "-primary"                      "Invisible to primary rays (Phantom)"                 "-diffuse"                      "Invisible to diffuse rays"                 "-diffuse&-reflect&-refract"    "Invisible to secondary rays"                 ""                              "Invisible (Unrenderable)"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendervisibility" }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendersubd"             label   "Render Polygons As Subdivision (Mantra)"             type    toggle             default { "0" }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubd" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdstyle"             label   "Subdivision Style"             type    string             default { "mantra_catclark" }             hidewhen "{ vm_rendersubd == 0 }"             menu {                 "mantra_catclark"   "Mantra Catmull-Clark"                 "osd_catclark"      "OpenSubdiv Catmull-Clark"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdstyle" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdgroup"             label   "Subdivision Group"             type    string             default { "" }             hidewhen "{ vm_rendersubd == 0 }"             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdgroup" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_quality"             label   "Open Subdiv Quality"             type    float             default { "1" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_quality" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_vtxinterp"             label   "OSD Vtx Interp"             type    integer             default { "2" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "No vertex interpolation"                 "1" "Edges only"                 "2" "Edges and Corners"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_vtxinterp" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_fvarinterp"             label   "OSD FVar Interp"             type    integer             default { "4" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "Smooth everywhere"                 "1" "Sharpen corners only"                 "2" "Sharpen edges and corners"                 "3" "Sharpen edges and propagated corners"                 "4" "Sharpen all boundaries"                 "5" "Bilinear interpolation"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_fvarinterp" }             parmtag { "spare_category" "Geometry" }         }         group {             name    "folder0"             label   "Shading"              parm {                 name    "categories"                 label   "Categories"                 type    string                 default { "" }                 help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "reflectmask"                 label   "Reflection Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be reflected on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "refractmask"                 label   "Refraction Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be refracted on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightmask"                 label   "Light Mask"                 type    oplist                 default { "*" }                 help    "Lights that illuminate this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightcategories"                 label   "Light Selection"                 type    string                 default { "*" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_lpetag"                 label   "LPE Tag"                 type    string                 default { "" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "lpetag" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilter"                 label   "Volume Filter"                 type    string                 default { "box" }                 menu {                     "box"       "Box Filter"                     "gaussian"  "Gaussian"                     "bartlett"  "Bartlett (triangle)"                     "catrom"    "Catmull-Rom"                     "hanning"   "Hanning"                     "blackman"  "Blackman"                     "sinc"      "Sinc (sharpening)"                 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filter" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilterwidth"                 label   "Volume Filter Width"                 type    float                 default { "1" }                 range   { 0.001 5 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_matte"                 label   "Matte shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "matte" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_rayshade"                 label   "Raytrace Shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rayshade" }                 parmtag { "spare_category" "Shading" }             }         }          group {             name    "folder0_1"             label   "Sampling"              parm {                 name    "geo_velocityblur"                 label   "Geometry Velocity Blur"                 type    ordinal                 default { "off" }                 disablewhen "{ allowmotionblur == 0 }"                 menu {                     "off"       "No Velocity Blur"                     "on"        "Velocity Blur"                     "accelblur" "Acceleration Blur"                 }             }             parm {                 name    "geo_accelattribute"                 label   "Acceleration Attribute"                 type    string                 default { "accel" }                 hidewhen "{ geo_velocityblur != accelblur }"                 parmtag { "spare_category" "Sampling" }             }         }          group {             name    "folder0_2"             label   "Dicing"              parm {                 name    "vm_shadingquality"                 label   "Shading Quality"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "shadingquality" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_flatness"                 label   "Dicing Flatness"                 type    float                 default { "0.05" }                 range   { 0 1 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "flatness" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu {                     "0" "Disable Predicing"                     "1" "Full Predicing"                     "2" "Precompute Bounds"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "raypredice" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_curvesurface"                 label   "Shade Curves As Surfaces"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "curvesurface" }                 parmtag { "spare_category" "Dicing" }             }         }          group {             name    "folder0_3"             label   "Geometry"              parm {                 name    "vm_rmbackface"                 label   "Backface Removal"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rmbackface" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "shop_geometrypath"                 label   "Procedural Shader"                 type    oppath                 default { "" }                 parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }                 parmtag { "oprelative" "." }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_forcegeometry"                 label   "Force Procedural Geometry Output"                 type    toggle                 default { "1" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_rendersubdcurves"                 label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rendersubdcurves" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpoints"                 label   "Render As Points (Mantra)"                 type    integer                 default { "2" }                 menu {                     "0" "No Point Rendering"                     "1" "Render Only Points"                     "2" "Render Unconnected Points"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpointsas"                 label   "Render Points As (Mantra)"                 type    integer                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 menu {                     "0" "Spheres"                     "1" "Circles"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpointsas" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_usenforpoints"                 label   "Use N For Point Rendering"                 type    toggle                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "usenforpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pointscale"                 label   "Point Scale"                 type    float                 default { "1" }                 disablewhen "{ vm_renderpoints == 0 }"                 range   { 0! 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pointscale" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pscalediameter"                 label   "Treat Point Scale as Diameter Instead of Radius"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pscalediameter" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_metavolume"                 label   "Metaballs as Volume"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "metavolume" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_coving"                 label   "Coving"                 type    integer                 default { "1" }                 menu {                     "0" "Disable Coving"                     "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "coving" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_materialoverride"                 label   "Material Override"                 type    string                 default { "compact" }                 menu {                     "none"      "Disabled"                     "full"      "Evaluate for Each Primitve/Point"                     "compact"   "Evaluate Once"                 }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_overridedetail"                 label   "Ignore Geometry Attribute Shaders"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "overridedetail" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_procuseroottransform"                 label   "Proc Use Root Transform"                 type    toggle                 default { "1" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "procuseroottransform" }                 parmtag { "spare_category" "Geometry" }             }         }      }      group {         name    "stdswitcher4_2"         label   "Arnold"          parm {             name    "shop_propertiespath"             label   "Default Properties"             type    oppath             default { "" }             help    "Specifies a Property SHOP that is used to resolve rendering parameter values. At render time, this SHOP (if given) is used to resolve rendering parameter values first, before looking for then on the objects being rendered."             range   { 0 1 }             parmtag { "opfilter" "!!SHOP/PROPERTIES!!" }             parmtag { "oprelative" "." }             parmtag { "spare_category" "Shaders" }         }         parm {             name    "ar_user_options"             label   "User Options"             type    string             joinnext             default { "" }             help    "This string is passed to AiNodeSetAttributes() ont the Arnold node. It can contain any number of parameter/value pairs separated by whitespace (spaces, tabs, newlines) as found in .ass files."             disablewhen "{ ar_user_options_enable == 0 }"         }         parm {             name    "ar_user_options_enable"             label   "Enable"             type    toggle             default { "0" }             help    "Overrides the value of any parameter of the Arnold node."         }         group {             name    "folder_subdivision"             label   "Subdivision"              parm {                 name    "ar_subdiv_type"                 label   "Type"                 type    string                 default { "none" }                 help    "Subdivision algorithm. None ignores any subdivision and renders the mesh as it is. Linear subdivision puts vertices in the middle of each face. The Catmull-Clark algorithm is used to create smooth surfaces by recursive subdivision surface modeling. The resulting surface will always consist of a mesh of quadrilateral faces."                 menu {                     "none"      "None"                     "catclark"  "Catmull-Clark"                     "linear"    "Linear"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_iterations"                 label   "Iterations"                 type    integer                 default { "1" }                 help    "The number of iterations / levels of subdivision. With Catmull-Clark subdivision, increasing the number of iterations produces a smoother mesh."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 1! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_metric"                 label   "Adaptive Metric"                 type    string                 joinnext                 default { "auto" }                 help    "The adaptive subdivision criterion. Auto subdiv will choose between the EDGELENGTH mode and the FLATNESS depending on the displacement property of the polymesh. This means that if there is a displacement it will use the EDGELENGTH algorithm. If there is not displacement (or it is ignored in the global options) it will use FLATNESS."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "auto"          "Auto"                     "edge_length"   "Edge Length"                     "flatness"      "Flatness"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_error"                 label   "     Error"                 type    float                 default { "0" }                 help    "The \\"adaptive error\\" refers to the acceptable tessellation error as seen from the camera. If there\'s no displacement, then the error represents the distance from the subdivided mesh to the \\"true\\" or \\"limit\\" surface -- sort of a \\"flatness\\" heuristic. The smaller the error, the closer to the limit surface a mesh will be and the less inter-frame popping when the subdivision level jumps. If displacement is enabled, then the error represents the final size of the subdivided quads. A value of 0 disables adaptive subdivision."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_space"                 label   "Adaptive Space"                 type    string                 default { "raster" }                 help    "The space in which the adaptive metric is evaluated."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "raster"    "Raster"                     "object"    "Object"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_uv_smoothing"                 label   "UV Smoothing"                 type    string                 joinnext                 default { "pin_corners" }                 help    "UV smoothing algorithm."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "pin_corners"   "Pin Corners"                     "pin_borders"   "Pin Borders"                     "linear"        "Linear"                     "smooth"        "Smooth"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_smooth_derivs"                 label   "Smooth Derivatives"                 type    toggle                 default { "0" }                 help    "This option makes it possible to remove the faceted appearance from anisotropic speculars. The object must have a valid UV map for this option to work and only works if you apply at least one subdivision level to the geometry."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_merge_vertex_indices"                 label   "Merge Vertex Indices"                 type    toggle                 default { "1" }                 help    "Enable merging of the indices and data of coincident and identical vertex attribute values (UVs, normals, vertex user data). This allows the proper interpolation of vertex attributes when subdividing, and yields more compact render scenes in memory and on disk, at the cost of a slower export."                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_frustum_ignore"                 label   "Ignore Frustum Culling"                 type    toggle                 default { "0" }                 help    "Subdivision surfaces outside the view or dicing camera frustum will not be subdivided. This can be turned on globally by enabling subdiv_frustum_culling on the ROP and can be turned off for specific meshes by setting subdiv_frustum_ignore true."                 disablewhen "{ ar_subdiv_type == none }"                 parmtag { "spare_category" "Subdivision" }             }         }          group {             name    "folder_subdivision_1"             label   "Displacement"              parm {                 name    "ar_disp_height"                 label   "Height"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_zero_value"                 label   "Zero Value"                 type    float                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_padding"                 label   "Bounds Padding"                 type    float                 default { "0" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_autobump"                 label   "Autobump"                 type    toggle                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_camera"                 label   "Autobump Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle autobump for camera rays (i.e. primary or view rays)."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_shadow"                 label   "Autobump Shadow Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for shadow rays fired in the direct lighting calculations."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_diffuse_transmit"                 label   "Autobump Diffuse Transmission Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect diffuse transmission rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_specular_transmit"                 label   "Autobump Specular Transmission Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect specular transmission rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_diffuse_reflect"                 label   "Autobump Diffuse Reflection Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect diffuse reflection rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_specular_reflect"                 label   "Autobump Specular Reflection Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect specular reflection rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_volume"                 label   "Autobump Volume Scattering Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect volume scattering rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }         }          group {             name    "folder_subdivision_2"             label   "Shapes"              parm {                 name    "ar_min_pixel_width"                 label   "Minimum Pixel Width"                 type    float                 default { "0" }                 help    "If this value is non-zero, points or curves with a small on-screen width will be automatically enlarged so that they are at least the specified size in pixels. The enlargement fraction is then used in the hair shader to adjust the opacity so that the visible thickness of the hair remains the same. For a given number of AA samples, this makes it a lot easier to antialias fine hair, at the expense of render time (because of the additional transparency/depth complexity). Good values are in the range 0.2 to 0.7. Values closer to 0 are faster to render but need more AA samples. So if your scene already uses very high AA settings, you should use a low value like 0.1. For best results, you may need to increase the auto-transparency depth, and/or lower the auto-transparency threshold, but watch the effect on render times. Note that this parameter currently works with the ribbon mode only."                 range   { 0 10 }                 parmtag { "spare_category" "Curves" }             }             parm {                 name    "ar_radius"                 label   "Default Radius"                 type    float                 default { "0.05" }                 help    "Sets the default rendered radius of points or thickness of curves. This property can be overridden per point with the \\"ar_radius\\", \\"pscale\\" or \\"width\\" (curves only) attributes."                 range   { 0 10 }                 parmtag { "units" "m1" }             }             group {                 name    "folder_points"                 label   "Points"                  parm {                     name    "ar_mode"                     label   "Mode"                     type    ordinal                     default { "sphere" }                     help    "Rendering mode for points or particles. Can be spheres, or camera-facing disks or quads."                     menu {                         "disk"      "Disk"                         "sphere"    "Sphere"                         "quad"      "Quad"                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_point_scale"                     label   "Point Scale"                     type    float                     default { "1" }                     help    "A global scale factor applied to points."                     range   { 0! 10 }                 }                 parm {                     name    "ar_aspect"                     label   "Aspect"                     type    log                     default { "1" }                     help    "The aspect ratio for quads. This property can be overrriden per point by setting the \\"ar_aspect\\" or \\"spritescale\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_rotation"                     label   "Rotation"                     type    angle                     default { "0" }                     help    "The rotation angle in degrees for quads. This property can be overrriden per point by setting the \\"ar_rotation\\" or the \\"spriterot\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { -180 180 }                 }             }              group {                 name    "folder_points_1"                 label   "Curves"                  parm {                     name    "ar_curves_basis"                     label   "Basis"                     type    string                     default { "auto" }                     help    "The curves basis to interpret the knots of the input curves or open polygons. When set to \\"Automatic\\", the basis will attempt to match the closest equivalent in Arnold, ie. linear for open polygons, Bezier for Bezier curves and B-spline for NURBS."                     menu {                         "bezier"        "Bezier"                         "b-spline"      "B-Spline"                         "catmull-rom"   "Catmull-Rom"                         "linear"        "Linear"                         "auto"          "Automatic"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }                 parm {                     name    "ar_curves_mode"                     label   "Mode"                     type    string                     default { "ribbon" }                     help    "- Ribbon: This mode is recommended for fine geometry such as realistic hair, fur or fields of grass. These curves are rendered as camera-facing flat ribbons. For secondary and shadow rays, they face the incoming ray direction. This mode doesn\'t look so good for very wide hairs or dramatic zoom-ins because of the flat appearance. This mode works best with a proper hair shader (perhaps based on a Kay-Kajiya or Marschner specular model).\\\\n\\\\n- Thick: This mode resembles spaghetti. It has a circular cross section, and a normal vector that varies across the width of the hair. Thick hairs look great when zoomed in, and are specially useful for effects work, but their varying normals make them more difficult to antialias when they are small. You can use any shader with this rendering mode, including lambert, phong, etc.\\\\n\\\\n- Oriented: This mode is similar to the ribbons mode, but you can set the ribbon orientation for each knot with an \\"ar_orientations\\" vector attribute representing the direction of the normal of the ribbon. This mode can be useful to render grass strands for example."                     menu {                         "ribbon"    "Ribbon"                         "thick"     "Thick"                         "oriented"  "Oriented      "                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }             }              group {                 name    "folder_points_2"                 label   "Volumes"                  parm {                     name    "ar_step_size"                     label   "Volume Step Size"                     type    float                     default { "0" }                     help    "When ar_step_size is set to a value other than zero, then points rendered as spheres, particles and polymeshes will be rendered as volumes."                     range   { 0 1 }                 }                 parm {                     name    "ar_volume_padding"                     label   "Volume Padding"                     type    float                     default { "0" }                     help    "When rendering particles or polymeshes as volumes (when ar_step_size is non-zero), ar_volume_padding will provide extra the volume padding specified for displacement requirements"                     disablewhen "{ ar_step_size == 0 }"                     range   { 0 10 }                 }                 parm {                     name    "label_volume"                     label   "Label"                     type    label                     nolabel                     default { "" }                 }                 parm {                     name    "label_volume2"                     label   "Label"                     type    label                     nolabel                     default { "Points and polymeshes are rendered as volumes if Step Size > 0" }                 }             }              group {                 name    "folder_points_3"                 label   " VDB "                  parm {                     name    "ar_vdb_file_enable"                     label   "Export VDB File"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Export the VDB primitives as a VDB file and reference the file in the Arnold volume."                     range   { 0 1 }                 }                 parm {                     name    "ar_vdb_file"                     label   "Save to File"                     type    file                     default { "$HIP/`pythonexprs(\\"hou.pwd().path()[1:].replace(\'/\', \'_\')\\")`.$F4.vdb" }                     help    "The OpenVDB file name that the VDB primitves will be written to, and that will be referenced by the Arnold volume instead of attaching the volume data."                     disablewhen "{ ar_vdb_file_enable == 0 }"                     range   { 0 1 }                     parmtag { "filechooser_pattern" "*.vdb" }                 }                 parm {                     name    "ar_grids"                     label   "Export Grids"                     type    string                     default { "*" }                     help    "The VDB grids to export and make available in the volume shading context."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_velocity_grids"                     label   "Velocity Grids"                     type    string                     default { "*" }                     help    "Select 1 vector or 3 float grids representing velocity for motion blur."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_velocity_scale"                     label   "Velocity Scale"                     type    log                     default { "1" }                     help    "Scale the velocities by this factor."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_velocity_threshold"                     label   "Velocity Threshold"                     type    log                     default { "0.001" }                     help    "Controls filtering of noisy velocities. The default value 0.001 should have little to no visual impact, setting it to zero disables filtering entirely."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0! 1! }                 }                 parm {                     name    "ar_padding"                     label   "Bounds Padding"                     type    float                     default { "0" }                     help    "Extra padding for the volume bounds"                     range   { 0 10 }                 }                 parm {                     name    "ar_step_size_type"                     label   "Volume Step"                     type    ordinal                     joinnext                     default { "0" }                     help    "When set to auto, the step size is automatically determined by the volume plugin, yielding the minimum voxel size."                     menu {                         "auto"      "Automatic       "                         "custom"    "Custom"                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_vdb_step_size"                     label   "      Step Size"                     type    float                     default { "0.02" }                     help    "The ray marching step size. When the step type is auto, this indicates the computed step size, the minimum voxel size."                     disablewhen "{ ar_step_size_type == auto }"                     range   { 0! 10 }                 }                 parm {                     name    "ar_step_scale"                     label   "Step Scale"                     type    log                     default { "1" }                     help    "Multiply the step size by this factor, including when it\'s automatically detected."                     range   { 0.1! 10 }                 }                 parm {                     name    "ar_compress"                     label   "Compress"                     type    toggle                     invisible                     default { "1" }                     help    "Optimize voxel storage to reduce memory usage."                     range   { 0 1 }                 }             }              group {                 name    "folder_points_4"                 label   "Tessellation"                  parm {                     name    "ar_tessellation_enable"                     label   "Tessellate Primitives"                     type    toggle                     default { "1" }                     help    "Tessellate Houdini primitives such as NURBS, Bezier meshes, circles, tubes or spheres prior to sending to Arnold."                     disablewhen "{ ar_tessellation_use_rop == 1 }"                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_style"                     label   "Tessellation Style"                     type    string                     invisible                     default { "lod" }                     help    "Specifies the conversion style for the geometry. The default is\\"Level of Detail\\". Can be one of the following:\\\\n- Level of Detail: Tessellate geometry using the level of detail settings.\\\\n- Divisions: Tessellate geometry based on the number of divisions settings."                     disablewhen "{ ar_tessellation_enable == 0 }"                     menu {                         "lod"   "Level of Detail"                         "div"   "Divisions"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_ulod"                     label   "U Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for U subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_vlod"                     label   "V Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for V subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_trimlod"                     label   "Trim Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for trim curves of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }             }          }          group {             name    "folder_subdivision_3"             label   "Attributes"              parm {                 name    "ar_toon_id"                 label   "Toon ID Group"                 type    string                 default { "" }                 help    "Objects in the same toon ID group will be rendered with the same silhouette, if the user_id attribute is set on the toon shader"             }             parm {                 name    "ar_attributes_detail"                 label   "Detail Attributes"                 type    string                 default { "*" }                 help    "The list of details attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.detailAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_primitive"                 label   "Primitive Attributes"                 type    string                 default { "*" }                 help    "The list of primitive attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.primitiveAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_point"                 label   "Point Attributes"                 type    string                 default { "*" }                 help    "The list of point attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.pointAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_vertex"                 label   "Vertex Attributes"                 type    string                 default { "*" }                 help    "The list of vertex attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.vertexAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }         }          group {             name    "folder_subdivision_4"             label   "Motion Blur"              parm {                 name    "ar_transform_type"                 label   "Transform Type"                 type    ordinal                 default { "2" }                 help    "The type of motion for the transformation of the object, as a hint for the matrix interpolation for transformation motion blur."                 menu {                     "linear"                "Linear"                     "rotate_about_origin"   "Rotate About Origin"                     "rotate_about_center"   "Rotate About Center"                 }                 range   { 0 2 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys_override"                 label   "Transform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys"                 label   "Transform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result, especially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."                 disablewhen "{ ar_mb_xform_keys_override == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys_override"                 label   "Deform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys"                 label   "Deform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for object points. Just like with transformation motion keys, increasing this value allows curved motion paths to be rendered more accurately, at the expense of using more memory."                 disablewhen "{ ar_mb_dform_keys_override == 0 } { ar_mb_velocity_enable == 1 ar_mb_acceleration_enable != 1 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_enable"                 label   "Velocity Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Deformation blur will be computed from the \\"v\\" point attribute."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_attribute"                 label   "Velocity Blur"                 type    string                 default { "v" }                 help    "The velocity point attribute to use for velocity blur. The Houdini convention is \'v\'."                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_enable"                 label   "Acceleration Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_attribute"                 label   "Acceleration Blur"                 type    string                 default { "force" }                 help    "The acceleration point attribute to use for acceleration blur. The Houdini convention is \'force\' or \'accel\'. If you use use \'force\' ensure you divide by the mass."                 disablewhen "{ ar_mb_velocity_enable == 0 } { ar_mb_acceleration_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_5"             label   "Visibility"              parm {                 name    "ar_visibility_camera"                 label   "Visible to Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_shadow"                 label   "Visible to Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_transmit"                 label   "Visible to Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_transmit"                 label   "Visible to Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_reflect"                 label   "Visible to Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_reflect"                 label   "Visible to Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_volume"                 label   "Visible to Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_receive_shadows"                 label   "Receive Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable received shadows over the object."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_self_shadows"                 label   "Self Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable self-shadowing over the object."                 disablewhen "{ ar_receive_shadows == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_opaque"                 label   "Opaque"                 type    toggle                 default { "1" }                 help    "By default, Arnold will assume that objects are opaque, which lets the renderer take certain shortcuts and optimizations for maximum ray tracing speed. When this option is unchecked, the object is assumed as \\"possibly transparent\\", and Arnold will perform extra computations to support transparency and transparent shadows, according to the shader\'s opacity settings."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_matte"                 label   "Matte"                 type    toggle                 default { "0" }                 help    "Output black and zero alpha for camera rays to create a holdout."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_skip"                 label   "Skip"                 type    toggle                 default { "0" }                 help    "Do not output this object regardless of it being forced or not."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_use_light_group"                 label   "Use Light Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_light_group"                 label   "Light Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_light_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_use_shadow_group"                 label   "Use Shadow Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_shadow_group"                 label   "Shadow Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_shadow_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_trace_sets"                 label   "Trace Sets"                 type    string                 default { "" }                 menutoggle {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_trace_sets\'):" ]                     [ "            setnames = child.parm(\'ar_trace_sets\').evalAsString()" ]                     [ "            if setnames:" ]                     [ "                my_set.update(setnames.split())" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "tracesets = set()" ]                     [ "traverse(hou.node(\'/\'), tracesets)" ]                     [ "tracesets = list(tracesets)" ]                     [ "tracesets.sort()" ]                     [ "" ]                     [ "return [x for y in zip(tracesets, tracesets) for x in y]" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_sss_setname"                 label   "SSS Set"                 type    string                 default { "" }                 help    "Use this parameter to tag multiple objects as belonging to the same SSS set so that illumination will blur across object boundaries. A common use case might be blurring between teeth and gum geometry. This feature is only available when using raytraced SSS."                 menureplace {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_sss_setname\'):" ]                     [ "            setname = child.parm(\'ar_sss_setname\').evalAsString()" ]                     [ "            if setname:" ]                     [ "                my_set.update([setname])" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "sss_names = set()" ]                     [ "traverse(hou.node(\'/\'), sss_names)" ]                     [ "sss_names = list(sss_names)" ]                     [ "sss_names.sort()" ]                     [ "" ]                     [ "return [x for y in zip(sss_names, sss_names) for x in y]" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_6"             label   "Normals"              parm {                 name    "ar_smoothing"                 label   "Smoothing"                 type    toggle                 default { "1" }                 help    "Smooth/Flat normals."                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_invert_normals"                 label   "Invert Normals"                 type    toggle                 default { "0" }                 help    "Invert normals"                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_sidedness_camera"                 label   "Double-sided for Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_shadow"                 label   "Double-sided for Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_transmit"                 label   "Double-sided for Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_transmit"                 label   "Double-sided for Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_reflect"                 label   "Double-sided for Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_reflect"                 label   "Double-sided for Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_volume"                 label   "Double-sided for Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }         }      }      group {         name    "stdswitcher4_3"         label   "Misc"          parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }         parm {             name    "vport_shadeopen"             baseparm             label   "Shade Open Curves In Viewport"             export  none         }         parm {             name    "vport_displayassubdiv"             baseparm             label   "Display as Subdivision in Viewport"             invisible             export  none         }         parm {             name    "vport_onionskin"             baseparm             label   "Onion Skinning"             export  none         }     }  ' $_obj_particles
chblockbegin
chadd -t 0 0 $_obj_particles ar_point_scale
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_pointscale")' $_obj_particles/ar_point_scale
chadd -t 0 0 $_obj_particles ar_mb_velocity_enable
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("geo_velocityblur")' $_obj_particles/ar_mb_velocity_enable
chadd -t 0 0 $_obj_particles ar_matte
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_matte")' $_obj_particles/ar_matte
chblockend
opset -S on $_obj_particles
opparm -V 17.0.352 $_obj_particles shop_materialpath ( shopnet1/air_particles ) stdswitcher4 ( 2 2 2 2 ) geo_velocityblur ( on ) folder_subdivision ( 4 4 4 4 4 4 4 ) ar_point_scale ( ar_point_scale ) ar_mb_velocity_enable ( ar_mb_velocity_enable ) ar_matte ( ar_matte )
chautoscope $_obj_particles +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_particles
opexprlanguage -s hscript $_obj_particles
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles
opcf $_obj_particles

# Node $_obj_particles_pc_particle_spawn1 (Sop/pc_particle_spawn)
set _obj_particles_pc_particle_spawn1 = `run("opadd -e -n -v pc_particle_spawn pc_particle_spawn1")`
oplocate -x `$arg2 + -7.0455699999999997` -y `$arg3 + -0.78891100000000003` $_obj_particles_pc_particle_spawn1
chblockbegin
chadd -t 4 4 $_obj_particles_pc_particle_spawn1 frame
chkey -t 4 -v 0 -m 0 -a 0 -A 0 -T a  -F '$F' $_obj_particles_pc_particle_spawn1/frame
chblockend
opparm $_obj_particles_pc_particle_spawn1 parm ( 2 ) spawn_type ( 1 ) constantrate ( 10000 ) amp2 ( 0.10000000000000001 ) forcescale ( 25 ) maxdistance ( 0.5 ) activation3 ( off ) createframe ( off ) destmin2 ( 0.001 ) destmax2 ( 0.0015 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_particles_pc_particle_spawn1
opexprlanguage -s hscript $_obj_particles_pc_particle_spawn1
opuserdata -n '___Version___' -v '' $_obj_particles_pc_particle_spawn1

# Node $_obj_particles_shopnet1 (Sop/shopnet)
set _obj_particles_shopnet1 = `run("opadd -e -n -v shopnet shopnet1")`
oplocate -x `$arg2 + -11.0883` -y `$arg3 + -0.984989` $_obj_particles_shopnet1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_particles_shopnet1
opexprlanguage -s hscript $_obj_particles_shopnet1
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles_shopnet1
opcf $_obj_particles_shopnet1

# Node $_obj_particles_shopnet1_air_particles (Shop/arnold_vopnet)
set _obj_particles_shopnet1_air_particles = `run("opadd -e -n -v arnold_vopnet air_particles")`
oplocate -x `$arg2 + -8.9655900000000006` -y `$arg3 + -0.68601100000000004` $_obj_particles_shopnet1_air_particles
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_particles_shopnet1_air_particles
opexprlanguage -s hscript $_obj_particles_shopnet1_air_particles
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles_shopnet1_air_particles
opcf $_obj_particles_shopnet1_air_particles

# Node $_obj_particles_shopnet1_air_particles_OUT_material (Vop/arnold_material)
set _obj_particles_shopnet1_air_particles_OUT_material = `run("opadd -e -n -v arnold_material OUT_material")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_particles_shopnet1_air_particles_OUT_material
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_particles_shopnet1_air_particles_OUT_material
opexprlanguage -s hscript $_obj_particles_shopnet1_air_particles_OUT_material
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles_shopnet1_air_particles_OUT_material

# Node $_obj_particles_shopnet1_air_particles_standard_surface1 (arnold::Vop/standard_surface)
set _obj_particles_shopnet1_air_particles_standard_surface1 = `run("opadd -e -n -v arnold::standard_surface standard_surface1")`
oplocate -x `$arg2 + -4.1705899999999998` -y `$arg3 + 0` $_obj_particles_shopnet1_air_particles_standard_surface1
opparm -V 17.0.352 $_obj_particles_shopnet1_air_particles_standard_surface1 base ( 1 ) base_color ( 0.20000000298023224 0.16079999506473541 0.14120000600814819 ) specular_roughness ( 0.40000000000000002 ) specular_IOR ( 1.3999999999999999 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_particles_shopnet1_air_particles_standard_surface1
opexprlanguage -s hscript $_obj_particles_shopnet1_air_particles_standard_surface1
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles_shopnet1_air_particles_standard_surface1
opcf ..
opcf ..
opcf ..
opcf $_obj_particles

# Node $_obj_particles_box1 (Sop/box)
set _obj_particles_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + -7.0455699999999997` -y `$arg3 + 2.75956` $_obj_particles_box1
opparm -V 17.0.352 $_obj_particles_box1 size ( 1.7662083625793457 0.48366727828979483 1.6981651306152343 ) t ( -4.8121275901794434 1.7492547035217285 -34.061323165893555 ) scale ( 10 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_particles_box1
opexprlanguage -s hscript $_obj_particles_box1
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles_box1

# Node $_obj_particles_isooffset1 (Sop/isooffset)
set _obj_particles_isooffset1 = `run("opadd -e -n -v isooffset isooffset1")`
oplocate -x `$arg2 + -7.0455699999999997` -y `$arg3 + 1.5799000000000001` $_obj_particles_isooffset1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_particles_isooffset1
opexprlanguage -s hscript $_obj_particles_isooffset1
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles_isooffset1

# Node $_obj_particles_scatter1 (Sop/scatter::2.0)
set _obj_particles_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + -7.0455699999999997` -y `$arg3 + 0.48563099999999998` $_obj_particles_scatter1
opparm -V 17.0.352 $_obj_particles_scatter1 npts ( 100000 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_particles_scatter1
opexprlanguage -s hscript $_obj_particles_scatter1
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles_scatter1

# Node $_obj_particles_object_merge1 (Sop/object_merge)
set _obj_particles_object_merge1 = `run("opadd -e -n -v object_merge object_merge1")`
oplocate -x `$arg2 + -4.7045300000000001` -y `$arg3 + 0.48718099999999998` $_obj_particles_object_merge1
opparm $_obj_particles_object_merge1  numobj ( 1 )
opparm -V 17.0.352 $_obj_particles_object_merge1 objpath1 ( ../../fac_forest_guardian1/forest_guardian/OUT_ANIM )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_particles_object_merge1
opexprlanguage -s hscript $_obj_particles_object_merge1
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles_object_merge1
opcf $_obj_particles_shopnet1
opcf $_obj_particles_shopnet1_air_particles
oporder -e OUT_material standard_surface1 
opcf ..
opcf ..

# Node $_obj_particles_trail1 (Sop/trail)
set _obj_particles_trail1 = `run("opadd -e -n -v trail trail1")`
oplocate -x `$arg2 + -7.0455699999999997` -y `$arg3 + -1.81538` $_obj_particles_trail1
opparm -V 17.0.352 $_obj_particles_trail1 result ( velocity )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_particles_trail1
opexprlanguage -s hscript $_obj_particles_trail1
opuserdata -n '___Version___' -v '17.0.352' $_obj_particles_trail1
oporder -e pc_particle_spawn1 box1 isooffset1 scatter1 object_merge1 shopnet1 trail1 
opcf ..
opset -p on $_obj_particles

opcf $arg1
opcf $_obj_particles
opwire -n $_obj_particles_scatter1 -0 $_obj_particles_pc_particle_spawn1
opwire -n $_obj_particles_object_merge1 -4 $_obj_particles_pc_particle_spawn1
opwire -n $_obj_particles_box1 -0 $_obj_particles_isooffset1
opwire -n $_obj_particles_isooffset1 -0 $_obj_particles_scatter1
opcf $_obj_particles_shopnet1
opcf $_obj_particles_shopnet1_air_particles
opwire -n $_obj_particles_shopnet1_air_particles_standard_surface1 -0 $_obj_particles_shopnet1_air_particles_OUT_material
opcf ..
opcf ..
opwire -n $_obj_particles_pc_particle_spawn1 -0 $_obj_particles_trail1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_particles
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_particles
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="shading light setup" label="Shading Light Setup" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Object/shopnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('arnold_light'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_shopnet1 (Object/shopnet)
set _obj_shopnet1 = `run("opadd -e -n -v shopnet shopnet1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_shopnet1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_shopnet1
opexprlanguage -s hscript $_obj_shopnet1
opuserdata -n '___Version___' -v '17.0.352' $_obj_shopnet1
opuserdata -n '___toolcount___' -v '1' $_obj_shopnet1
opuserdata -n '___toolid___' -v 'pc_scene_start0' $_obj_shopnet1
opcf $_obj_shopnet1

# Node $_obj_shopnet1_grey (Shop/arnold_vopnet)
set _obj_shopnet1_grey = `run("opadd -e -n -v arnold_vopnet grey")`
oplocate -x `$arg2 + 3.1381800000000002` -y `$arg3 + -1.61812` $_obj_shopnet1_grey
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_shopnet1_grey
opexprlanguage -s hscript $_obj_shopnet1_grey
opuserdata -n '___Version___' -v '17.0.352' $_obj_shopnet1_grey
opuserdata -n '___toolcount___' -v '1' $_obj_shopnet1_grey
opuserdata -n '___toolid___' -v 'pc_scene_start0' $_obj_shopnet1_grey
opcf $_obj_shopnet1_grey

# Node $_obj_shopnet1_grey_OUT_material (Vop/arnold_material)
set _obj_shopnet1_grey_OUT_material = `run("opadd -e -n -v arnold_material OUT_material")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_shopnet1_grey_OUT_material
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_shopnet1_grey_OUT_material
opexprlanguage -s hscript $_obj_shopnet1_grey_OUT_material
opuserdata -n '___Version___' -v '17.0.352' $_obj_shopnet1_grey_OUT_material
opuserdata -n '___toolcount___' -v '1' $_obj_shopnet1_grey_OUT_material
opuserdata -n '___toolid___' -v 'pc_scene_start0' $_obj_shopnet1_grey_OUT_material

# Node $_obj_shopnet1_grey_standard_surface1 (arnold::Vop/standard_surface)
set _obj_shopnet1_grey_standard_surface1 = `run("opadd -e -n -v arnold::standard_surface standard_surface1")`
oplocate -x `$arg2 + -3.8902000000000001` -y `$arg3 + 0` $_obj_shopnet1_grey_standard_surface1
opparm -V 17.0.352 $_obj_shopnet1_grey_standard_surface1 base ( 1 ) base_color ( 0.20000000000000001 0.20000000000000001 0.20000000000000001 ) specular_roughness ( 0.69999999999999996 ) specular_IOR ( 1.52 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_shopnet1_grey_standard_surface1
opexprlanguage -s hscript $_obj_shopnet1_grey_standard_surface1
opuserdata -n '___Version___' -v '17.0.352' $_obj_shopnet1_grey_standard_surface1
opuserdata -n '___toolcount___' -v '1' $_obj_shopnet1_grey_standard_surface1
opuserdata -n '___toolid___' -v 'pc_scene_start0' $_obj_shopnet1_grey_standard_surface1
opcf ..
opcf ..
opcf $_obj_shopnet1
opcf $_obj_shopnet1_grey
oporder -e OUT_material standard_surface1 
opcf ..
opcf ..
opset -p on $_obj_shopnet1
opcf $arg1

# Node $_obj_env_light (Object/arnold_light)
set _obj_env_light = `run("opadd -e -n -v arnold_light env_light")`
oplocate -x `$arg2 + 0` -y `$arg3 + -1.2720288245724931` $_obj_env_light
opparm $_obj_env_light  attenramp ( 3 )
chblockbegin
chadd -t 0 0 $_obj_env_light normalizearea
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_normalize")' $_obj_env_light/normalizearea
chadd -t 0 0 $_obj_env_light shadow_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cast_shadows")' $_obj_env_light/shadow_type
chadd -t 0 0 $_obj_env_light shadow_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_shadow_density")' $_obj_env_light/shadow_intensity
chadd -t 0 0 $_obj_env_light projection
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(strcmp(chs(\'light_type\'), \'distant\') == 0, 1, 0)' $_obj_env_light/projection
chadd -t 0 0 $_obj_env_light areasize1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizex"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, ch("ar_height"),     if(ch("ar_light_type") == 6, 1,     if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_env_light/areasize1
chadd -t 0 0 $_obj_env_light areasize2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizey"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, 1,     if(ch("ar_light_type") == 6, 1, if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_env_light/areasize2
chadd -t 0 0 $_obj_env_light conedelta
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_penumbra_angle")' $_obj_env_light/conedelta
chadd -t 0 0 $_obj_env_light coneangle
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cone_angle")-(2*ch("ar_penumbra_angle"))' $_obj_env_light/coneangle
chadd -t 0 0 $_obj_env_light light_contribdiff
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_diffuse") != 0' $_obj_env_light/light_contribdiff
chadd -t 0 0 $_obj_env_light light_contribspec
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_specular") != 0' $_obj_env_light/light_contribspec
chadd -t 0 0 $_obj_env_light light_colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorr")' $_obj_env_light/light_colorr
chadd -t 0 0 $_obj_env_light light_colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorg")' $_obj_env_light/light_colorg
chadd -t 0 0 $_obj_env_light light_colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorb")' $_obj_env_light/light_colorb
chadd -t 0 0 $_obj_env_light light_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_intensity")*(2^ch("ar_exposure"))' $_obj_env_light/light_intensity
chadd -t 0 0 $_obj_env_light coneenable
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 2, 1, 0)' $_obj_env_light/coneenable
chadd -t 0 0 $_obj_env_light light_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, 4),      if(ch("ar_light_type") == 1, 6,      if(ch("ar_light_type") == 2, 0,    if(ch("ar_light_type") == 3, 2,      if(ch("ar_light_type") == 4, 3,      if(ch("ar_light_type") == 5, 1,      if(ch("ar_light_type") == 6, 8,      if(ch("ar_light_type") == 7, 8,     if(ch("ar_light_type") == 8, 5, 8)))))))))' $_obj_env_light/light_type
chblockend
opset -S on $_obj_env_light
opparm $_obj_env_light r ( 0 71 0 ) s ( 1 1 1 ) scale ( 1 ) folder1 ( 4 4 4 4 4 4 4 4 4 4 ) ar_light_type ( skydome ) ar_light_color_type ( texture ) ar_format ( latlong ) ar_color ( 0.55259996652603149 0.72630000114440918 0.89999997615814209 ) ar_light_color_texture ( '$JOB/gen/hdri/290-hdri-skies-com.hdr' ) ar_light_color_texture_refresh ( 0 ) ar_intensity ( 0.5 ) categories ( lb:arnold_light1 ) ar_camera ( 0 ) attenramp1c ( 1 1 1 ) attenramp2pos ( 0.89999997600000003 ) attenramp2c ( 1 1 1 ) attenramp3pos ( 1 )
chautoscope $_obj_env_light +tx +ty +tz +rx +ry +rz +sx +sy +sz +dimmer
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_env_light
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_env_light
opexprlanguage -s hscript $_obj_env_light
opuserdata -n '___Version___' -v '' $_obj_env_light
opuserdata -n '___toolcount___' -v '4' $_obj_env_light
opuserdata -n '___toolid___' -v 'object_arnold_light' $_obj_env_light
opset -p on $_obj_env_light
opcf $arg1

# Node $_obj_rim_light (Object/arnold_light)
set _obj_rim_light = `run("opadd -e -n -v arnold_light rim_light")`
oplocate -x `$arg2 + 2.1946899999999996` -y `$arg3 + -2.4245188245724933` $_obj_rim_light
opparm $_obj_rim_light  attenramp ( 3 )
chblockbegin
chadd -t 0 0 $_obj_rim_light normalizearea
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_normalize")' $_obj_rim_light/normalizearea
chadd -t 0 0 $_obj_rim_light shadow_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cast_shadows")' $_obj_rim_light/shadow_type
chadd -t 0 0 $_obj_rim_light shadow_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_shadow_density")' $_obj_rim_light/shadow_intensity
chadd -t 0 0 $_obj_rim_light projection
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(strcmp(chs(\'light_type\'), \'distant\') == 0, 1, 0)' $_obj_rim_light/projection
chadd -t 0 0 $_obj_rim_light areasize1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizex"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, ch("ar_height"),     if(ch("ar_light_type") == 6, 1,     if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_rim_light/areasize1
chadd -t 0 0 $_obj_rim_light areasize2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizey"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, 1,     if(ch("ar_light_type") == 6, 1, if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_rim_light/areasize2
chadd -t 0 0 $_obj_rim_light conedelta
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_penumbra_angle")' $_obj_rim_light/conedelta
chadd -t 0 0 $_obj_rim_light coneangle
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cone_angle")-(2*ch("ar_penumbra_angle"))' $_obj_rim_light/coneangle
chadd -t 0 0 $_obj_rim_light light_contribdiff
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_diffuse") != 0' $_obj_rim_light/light_contribdiff
chadd -t 0 0 $_obj_rim_light light_contribspec
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_specular") != 0' $_obj_rim_light/light_contribspec
chadd -t 0 0 $_obj_rim_light light_colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorr")' $_obj_rim_light/light_colorr
chadd -t 0 0 $_obj_rim_light light_colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorg")' $_obj_rim_light/light_colorg
chadd -t 0 0 $_obj_rim_light light_colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorb")' $_obj_rim_light/light_colorb
chadd -t 0 0 $_obj_rim_light light_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_intensity")*(2^ch("ar_exposure"))' $_obj_rim_light/light_intensity
chadd -t 0 0 $_obj_rim_light coneenable
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 2, 1, 0)' $_obj_rim_light/coneenable
chadd -t 0 0 $_obj_rim_light light_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, 4),      if(ch("ar_light_type") == 1, 6,      if(ch("ar_light_type") == 2, 0,    if(ch("ar_light_type") == 3, 2,      if(ch("ar_light_type") == 4, 3,      if(ch("ar_light_type") == 5, 1,      if(ch("ar_light_type") == 6, 8,      if(ch("ar_light_type") == 7, 8,     if(ch("ar_light_type") == 8, 5, 8)))))))))' $_obj_rim_light/light_type
chblockend
opset -S on $_obj_rim_light
opparm $_obj_rim_light t ( -2.0864834736483169 2.268381619366826 -2.5006375378833572 ) r ( -24.570555397535987 218.92637688234859 0 ) s ( 1 1 1 ) scale ( 1 ) folder1 ( 1 1 1 1 1 1 1 1 1 1 ) ar_light_type ( disk ) ar_color ( 0.38069996237754822 0.72689998149871826 0.89999997615814209 ) ar_light_color_texture_refresh ( 0 ) ar_exposure ( 5 ) ar_spread ( 0.48699999999999999 ) ar_quad_size ( 0.25 0.25 ) categories ( lb:arnold_light2 ) orthowidth ( 1.481481393178304 ) attenramp1c ( 1 1 1 ) attenramp2pos ( 0.89999997600000003 ) attenramp2c ( 1 1 1 ) attenramp3pos ( 1 )
chautoscope $_obj_rim_light +tx +ty +tz +rx +ry +rz +sx +sy +sz +dimmer
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_rim_light
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_rim_light
opexprlanguage -s hscript $_obj_rim_light
opuserdata -n '___Version___' -v '' $_obj_rim_light
opuserdata -n '___toolcount___' -v '4' $_obj_rim_light
opuserdata -n '___toolid___' -v 'object_arnold_light' $_obj_rim_light
opset -p on $_obj_rim_light
opcf $arg1

# Node $_obj_key_light (Object/arnold_light)
set _obj_key_light = `run("opadd -e -n -v arnold_light key_light")`
oplocate -x `$arg2 + 0` -y `$arg3 + -2.4245188245724933` $_obj_key_light
opparm $_obj_key_light  attenramp ( 3 )
chblockbegin
chadd -t 0 0 $_obj_key_light normalizearea
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_normalize")' $_obj_key_light/normalizearea
chadd -t 0 0 $_obj_key_light shadow_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cast_shadows")' $_obj_key_light/shadow_type
chadd -t 0 0 $_obj_key_light shadow_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_shadow_density")' $_obj_key_light/shadow_intensity
chadd -t 0 0 $_obj_key_light projection
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(strcmp(chs(\'light_type\'), \'distant\') == 0, 1, 0)' $_obj_key_light/projection
chadd -t 0 0 $_obj_key_light areasize1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizex"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, ch("ar_height"),     if(ch("ar_light_type") == 6, 1,     if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_key_light/areasize1
chadd -t 0 0 $_obj_key_light areasize2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizey"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, 1,     if(ch("ar_light_type") == 6, 1, if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_key_light/areasize2
chadd -t 0 0 $_obj_key_light conedelta
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_penumbra_angle")' $_obj_key_light/conedelta
chadd -t 0 0 $_obj_key_light coneangle
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cone_angle")-(2*ch("ar_penumbra_angle"))' $_obj_key_light/coneangle
chadd -t 0 0 $_obj_key_light light_contribdiff
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_diffuse") != 0' $_obj_key_light/light_contribdiff
chadd -t 0 0 $_obj_key_light light_contribspec
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_specular") != 0' $_obj_key_light/light_contribspec
chadd -t 0 0 $_obj_key_light light_colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorr")' $_obj_key_light/light_colorr
chadd -t 0 0 $_obj_key_light light_colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorg")' $_obj_key_light/light_colorg
chadd -t 0 0 $_obj_key_light light_colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorb")' $_obj_key_light/light_colorb
chadd -t 0 0 $_obj_key_light light_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_intensity")*(2^ch("ar_exposure"))' $_obj_key_light/light_intensity
chadd -t 0 0 $_obj_key_light coneenable
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 2, 1, 0)' $_obj_key_light/coneenable
chadd -t 0 0 $_obj_key_light light_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, 4),      if(ch("ar_light_type") == 1, 6,      if(ch("ar_light_type") == 2, 0,    if(ch("ar_light_type") == 3, 2,      if(ch("ar_light_type") == 4, 3,      if(ch("ar_light_type") == 5, 1,      if(ch("ar_light_type") == 6, 8,      if(ch("ar_light_type") == 7, 8,     if(ch("ar_light_type") == 8, 5, 8)))))))))' $_obj_key_light/light_type
chblockend
opset -S on $_obj_key_light
opparm $_obj_key_light t ( 2.8252229618870706 2.6003966599752579 0.8785719827521955 ) r ( -33.957056476734387 72.607358189185859 -2.1280432147480143e-14 ) s ( 1 1 1 ) scale ( 1 ) folder1 ( 1 1 1 1 1 1 1 1 1 1 ) ar_light_type ( disk ) ar_color ( 1 0.90450006723403931 0.80900001525878906 ) ar_light_color_texture_refresh ( 0 ) ar_exposure ( 6.75 ) categories ( lb:arnold_light2 ) orthowidth ( 1.481481393178304 ) attenramp1c ( 1 1 1 ) attenramp2pos ( 0.89999997600000003 ) attenramp2c ( 1 1 1 ) attenramp3pos ( 1 )
chautoscope $_obj_key_light +tx +ty +tz +rx +ry +rz +sx +sy +sz +dimmer
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_key_light
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_key_light
opexprlanguage -s hscript $_obj_key_light
opuserdata -n '___Version___' -v '' $_obj_key_light
opuserdata -n '___toolcount___' -v '4' $_obj_key_light
opuserdata -n '___toolid___' -v 'object_arnold_light' $_obj_key_light
opset -p on $_obj_key_light
opcf $arg1

# Node $_obj_fill_light (Object/arnold_light)
set _obj_fill_light = `run("opadd -e -n -v arnold_light fill_light")`
oplocate -x `$arg2 + 0` -y `$arg3 + -3.6413088245724934` $_obj_fill_light
opparm $_obj_fill_light  attenramp ( 3 )
chblockbegin
chadd -t 0 0 $_obj_fill_light normalizearea
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_normalize")' $_obj_fill_light/normalizearea
chadd -t 0 0 $_obj_fill_light shadow_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cast_shadows")' $_obj_fill_light/shadow_type
chadd -t 0 0 $_obj_fill_light shadow_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_shadow_density")' $_obj_fill_light/shadow_intensity
chadd -t 0 0 $_obj_fill_light projection
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(strcmp(chs(\'light_type\'), \'distant\') == 0, 1, 0)' $_obj_fill_light/projection
chadd -t 0 0 $_obj_fill_light areasize1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizex"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, ch("ar_height"),     if(ch("ar_light_type") == 6, 1,     if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_fill_light/areasize1
chadd -t 0 0 $_obj_fill_light areasize2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizey"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, 1,     if(ch("ar_light_type") == 6, 1, if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_fill_light/areasize2
chadd -t 0 0 $_obj_fill_light conedelta
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_penumbra_angle")' $_obj_fill_light/conedelta
chadd -t 0 0 $_obj_fill_light coneangle
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cone_angle")-(2*ch("ar_penumbra_angle"))' $_obj_fill_light/coneangle
chadd -t 0 0 $_obj_fill_light light_contribdiff
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_diffuse") != 0' $_obj_fill_light/light_contribdiff
chadd -t 0 0 $_obj_fill_light light_contribspec
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_specular") != 0' $_obj_fill_light/light_contribspec
chadd -t 0 0 $_obj_fill_light light_colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorr")' $_obj_fill_light/light_colorr
chadd -t 0 0 $_obj_fill_light light_colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorg")' $_obj_fill_light/light_colorg
chadd -t 0 0 $_obj_fill_light light_colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorb")' $_obj_fill_light/light_colorb
chadd -t 0 0 $_obj_fill_light light_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_intensity")*(2^ch("ar_exposure"))' $_obj_fill_light/light_intensity
chadd -t 0 0 $_obj_fill_light coneenable
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 2, 1, 0)' $_obj_fill_light/coneenable
chadd -t 0 0 $_obj_fill_light light_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, 4),      if(ch("ar_light_type") == 1, 6,      if(ch("ar_light_type") == 2, 0,    if(ch("ar_light_type") == 3, 2,      if(ch("ar_light_type") == 4, 3,      if(ch("ar_light_type") == 5, 1,      if(ch("ar_light_type") == 6, 8,      if(ch("ar_light_type") == 7, 8,     if(ch("ar_light_type") == 8, 5, 8)))))))))' $_obj_fill_light/light_type
chblockend
opset -S on $_obj_fill_light
opparm $_obj_fill_light t ( -3.0507122079933136 2.0930144622790827 0.064317312314739986 ) r ( -27.331287129089546 -90.82822598999212 -2.7504375089683186e-14 ) s ( 1 1 1 ) scale ( 1 ) folder1 ( 1 1 1 1 1 1 1 1 1 1 ) ar_light_type ( disk ) ar_color ( 0.76499998569488525 0.90208333730697632 1 ) ar_light_color_texture_refresh ( 0 ) ar_exposure ( 5.5 ) categories ( lb:arnold_light2 ) orthowidth ( 1.481481393178304 ) attenramp1c ( 1 1 1 ) attenramp2pos ( 0.89999997600000003 ) attenramp2c ( 1 1 1 ) attenramp3pos ( 1 )
chautoscope $_obj_fill_light +tx +ty +tz +rx +ry +rz +sx +sy +sz +dimmer
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_fill_light
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_fill_light
opexprlanguage -s hscript $_obj_fill_light
opuserdata -n '___Version___' -v '' $_obj_fill_light
opuserdata -n '___toolcount___' -v '4' $_obj_fill_light
opuserdata -n '___toolid___' -v 'object_arnold_light' $_obj_fill_light
opset -p on $_obj_fill_light

opcf $arg1
opcf $_obj_shopnet1
opcf $_obj_shopnet1_grey
opwire -n $_obj_shopnet1_grey_standard_surface1 -0 $_obj_shopnet1_grey_OUT_material
opcf ..
opcf ..
opcf $arg1
opcf $arg1
opcf $arg1
opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fill_light
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_shopnet1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="geo1" label="clouds" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_clouds_clouds (Object/geo)
set _obj_clouds_clouds = `run("opadd -e -n -v geo clouds")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_clouds_clouds
opspareds '    group {         name    "stdswitcher4"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher4_1"         label   "Render"          parm {             name    "shop_materialpath"             baseparm             label   "Material"             export  none         }         parm {             name    "shop_materialopts"             baseparm             label   "Options"             invisible             export  none         }         parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "viewportlod"             label   "Display As"             type    ordinal             default { "full" }             help    "Choose how the object\'s geometry should be rendered in the viewport"             menu {                 "full"      "Full Geometry"                 "points"    "Point Cloud"                 "box"       "Bounding Box"                 "centroid"  "Centroid"                 "hidden"    "Hidden"                 "subd"      "Subdivision Surface / Curves"             }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendervisibility"             label   "Render Visibility"             type    string             default { "*" }             menureplace {                 "*"                             "Visible to all"                 "primary"                       "Visible only to primary rays"                 "primary|shadow"                "Visible only to primary and shadow rays"                 "-primary"                      "Invisible to primary rays (Phantom)"                 "-diffuse"                      "Invisible to diffuse rays"                 "-diffuse&-reflect&-refract"    "Invisible to secondary rays"                 ""                              "Invisible (Unrenderable)"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendervisibility" }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendersubd"             label   "Render Polygons As Subdivision (Mantra)"             type    toggle             default { "0" }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubd" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdstyle"             label   "Subdivision Style"             type    string             default { "mantra_catclark" }             hidewhen "{ vm_rendersubd == 0 }"             menu {                 "mantra_catclark"   "Mantra Catmull-Clark"                 "osd_catclark"      "OpenSubdiv Catmull-Clark"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdstyle" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdgroup"             label   "Subdivision Group"             type    string             default { "" }             hidewhen "{ vm_rendersubd == 0 }"             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdgroup" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_quality"             label   "Open Subdiv Quality"             type    float             default { "1" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_quality" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_vtxinterp"             label   "OSD Vtx Interp"             type    integer             default { "2" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "No vertex interpolation"                 "1" "Edges only"                 "2" "Edges and Corners"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_vtxinterp" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_fvarinterp"             label   "OSD FVar Interp"             type    integer             default { "4" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "Smooth everywhere"                 "1" "Sharpen corners only"                 "2" "Sharpen edges and corners"                 "3" "Sharpen edges and propagated corners"                 "4" "Sharpen all boundaries"                 "5" "Bilinear interpolation"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_fvarinterp" }             parmtag { "spare_category" "Geometry" }         }         group {             name    "folder0"             label   "Shading"              parm {                 name    "categories"                 label   "Categories"                 type    string                 default { "" }                 help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "reflectmask"                 label   "Reflection Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be reflected on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "refractmask"                 label   "Refraction Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be refracted on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightmask"                 label   "Light Mask"                 type    oplist                 default { "*" }                 help    "Lights that illuminate this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightcategories"                 label   "Light Selection"                 type    string                 default { "*" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_lpetag"                 label   "LPE Tag"                 type    string                 default { "" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "lpetag" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilter"                 label   "Volume Filter"                 type    string                 default { "box" }                 menu {                     "box"       "Box Filter"                     "gaussian"  "Gaussian"                     "bartlett"  "Bartlett (triangle)"                     "catrom"    "Catmull-Rom"                     "hanning"   "Hanning"                     "blackman"  "Blackman"                     "sinc"      "Sinc (sharpening)"                 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filter" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilterwidth"                 label   "Volume Filter Width"                 type    float                 default { "1" }                 range   { 0.001 5 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_matte"                 label   "Matte shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "matte" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_rayshade"                 label   "Raytrace Shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rayshade" }                 parmtag { "spare_category" "Shading" }             }         }          group {             name    "folder0_1"             label   "Sampling"              parm {                 name    "geo_velocityblur"                 label   "Geometry Velocity Blur"                 type    ordinal                 default { "off" }                 disablewhen "{ allowmotionblur == 0 }"                 menu {                     "off"       "No Velocity Blur"                     "on"        "Velocity Blur"                     "accelblur" "Acceleration Blur"                 }             }             parm {                 name    "geo_accelattribute"                 label   "Acceleration Attribute"                 type    string                 default { "accel" }                 hidewhen "{ geo_velocityblur != accelblur }"                 parmtag { "spare_category" "Sampling" }             }         }          group {             name    "folder0_2"             label   "Dicing"              parm {                 name    "vm_shadingquality"                 label   "Shading Quality"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "shadingquality" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_flatness"                 label   "Dicing Flatness"                 type    float                 default { "0.05" }                 range   { 0 1 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "flatness" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu {                     "0" "Disable Predicing"                     "1" "Full Predicing"                     "2" "Precompute Bounds"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "raypredice" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_curvesurface"                 label   "Shade Curves As Surfaces"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "curvesurface" }                 parmtag { "spare_category" "Dicing" }             }         }          group {             name    "folder0_3"             label   "Geometry"              parm {                 name    "vm_rmbackface"                 label   "Backface Removal"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rmbackface" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "shop_geometrypath"                 label   "Procedural Shader"                 type    oppath                 default { "" }                 parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }                 parmtag { "oprelative" "." }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_forcegeometry"                 label   "Force Procedural Geometry Output"                 type    toggle                 default { "1" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_rendersubdcurves"                 label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rendersubdcurves" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpoints"                 label   "Render As Points (Mantra)"                 type    integer                 default { "2" }                 menu {                     "0" "No Point Rendering"                     "1" "Render Only Points"                     "2" "Render Unconnected Points"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpointsas"                 label   "Render Points As (Mantra)"                 type    integer                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 menu {                     "0" "Spheres"                     "1" "Circles"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpointsas" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_usenforpoints"                 label   "Use N For Point Rendering"                 type    toggle                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "usenforpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pointscale"                 label   "Point Scale"                 type    float                 default { "1" }                 disablewhen "{ vm_renderpoints == 0 }"                 range   { 0! 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pointscale" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pscalediameter"                 label   "Treat Point Scale as Diameter Instead of Radius"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pscalediameter" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_metavolume"                 label   "Metaballs as Volume"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "metavolume" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_coving"                 label   "Coving"                 type    integer                 default { "1" }                 menu {                     "0" "Disable Coving"                     "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "coving" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_materialoverride"                 label   "Material Override"                 type    string                 default { "compact" }                 menu {                     "none"      "Disabled"                     "full"      "Evaluate for Each Primitve/Point"                     "compact"   "Evaluate Once"                 }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_overridedetail"                 label   "Ignore Geometry Attribute Shaders"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "overridedetail" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_procuseroottransform"                 label   "Proc Use Root Transform"                 type    toggle                 default { "1" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "procuseroottransform" }                 parmtag { "spare_category" "Geometry" }             }         }      }      group {         name    "stdswitcher4_2"         label   "Arnold"          parm {             name    "shop_propertiespath"             label   "Default Properties"             type    oppath             default { "" }             help    "Specifies a Property SHOP that is used to resolve rendering parameter values. At render time, this SHOP (if given) is used to resolve rendering parameter values first, before looking for then on the objects being rendered."             range   { 0 1 }             parmtag { "opfilter" "!!SHOP/PROPERTIES!!" }             parmtag { "oprelative" "." }             parmtag { "spare_category" "Shaders" }         }         parm {             name    "ar_user_options"             label   "User Options"             type    string             joinnext             default { "" }             help    "This string is passed to AiNodeSetAttributes() ont the Arnold node. It can contain any number of parameter/value pairs separated by whitespace (spaces, tabs, newlines) as found in .ass files."             disablewhen "{ ar_user_options_enable == 0 }"         }         parm {             name    "ar_user_options_enable"             label   "Enable"             type    toggle             default { "0" }             help    "Overrides the value of any parameter of the Arnold node."         }         group {             name    "folder_subdivision"             label   "Subdivision"              parm {                 name    "ar_subdiv_type"                 label   "Type"                 type    string                 default { "none" }                 help    "Subdivision algorithm. None ignores any subdivision and renders the mesh as it is. Linear subdivision puts vertices in the middle of each face. The Catmull-Clark algorithm is used to create smooth surfaces by recursive subdivision surface modeling. The resulting surface will always consist of a mesh of quadrilateral faces."                 menu {                     "none"      "None"                     "catclark"  "Catmull-Clark"                     "linear"    "Linear"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_iterations"                 label   "Iterations"                 type    integer                 default { "1" }                 help    "The number of iterations / levels of subdivision. With Catmull-Clark subdivision, increasing the number of iterations produces a smoother mesh."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 1! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_metric"                 label   "Adaptive Metric"                 type    string                 joinnext                 default { "auto" }                 help    "The adaptive subdivision criterion. Auto subdiv will choose between the EDGELENGTH mode and the FLATNESS depending on the displacement property of the polymesh. This means that if there is a displacement it will use the EDGELENGTH algorithm. If there is not displacement (or it is ignored in the global options) it will use FLATNESS."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "auto"          "Auto"                     "edge_length"   "Edge Length"                     "flatness"      "Flatness"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_error"                 label   "     Error"                 type    float                 default { "0" }                 help    "The \\"adaptive error\\" refers to the acceptable tessellation error as seen from the camera. If there\'s no displacement, then the error represents the distance from the subdivided mesh to the \\"true\\" or \\"limit\\" surface -- sort of a \\"flatness\\" heuristic. The smaller the error, the closer to the limit surface a mesh will be and the less inter-frame popping when the subdivision level jumps. If displacement is enabled, then the error represents the final size of the subdivided quads. A value of 0 disables adaptive subdivision."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_space"                 label   "Adaptive Space"                 type    string                 default { "raster" }                 help    "The space in which the adaptive metric is evaluated."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "raster"    "Raster"                     "object"    "Object"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_uv_smoothing"                 label   "UV Smoothing"                 type    string                 joinnext                 default { "pin_corners" }                 help    "UV smoothing algorithm."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "pin_corners"   "Pin Corners"                     "pin_borders"   "Pin Borders"                     "linear"        "Linear"                     "smooth"        "Smooth"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_smooth_derivs"                 label   "Smooth Derivatives"                 type    toggle                 default { "0" }                 help    "This option makes it possible to remove the faceted appearance from anisotropic speculars. The object must have a valid UV map for this option to work and only works if you apply at least one subdivision level to the geometry."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_merge_vertex_indices"                 label   "Merge Vertex Indices"                 type    toggle                 default { "1" }                 help    "Enable merging of the indices and data of coincident and identical vertex attribute values (UVs, normals, vertex user data). This allows the proper interpolation of vertex attributes when subdividing, and yields more compact render scenes in memory and on disk, at the cost of a slower export."                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_frustum_ignore"                 label   "Ignore Frustum Culling"                 type    toggle                 default { "0" }                 help    "Subdivision surfaces outside the view or dicing camera frustum will not be subdivided. This can be turned on globally by enabling subdiv_frustum_culling on the ROP and can be turned off for specific meshes by setting subdiv_frustum_ignore true."                 disablewhen "{ ar_subdiv_type == none }"                 parmtag { "spare_category" "Subdivision" }             }         }          group {             name    "folder_subdivision_1"             label   "Displacement"              parm {                 name    "ar_disp_height"                 label   "Height"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_zero_value"                 label   "Zero Value"                 type    float                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_padding"                 label   "Bounds Padding"                 type    float                 default { "0" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_autobump"                 label   "Autobump"                 type    toggle                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_camera"                 label   "Autobump Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle autobump for camera rays (i.e. primary or view rays)."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_shadow"                 label   "Autobump Shadow Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for shadow rays fired in the direct lighting calculations."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_diffuse_transmit"                 label   "Autobump Diffuse Transmission Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect diffuse transmission rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_specular_transmit"                 label   "Autobump Specular Transmission Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect specular transmission rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_diffuse_reflect"                 label   "Autobump Diffuse Reflection Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect diffuse reflection rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_specular_reflect"                 label   "Autobump Specular Reflection Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect specular reflection rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_autobump_visibility_volume"                 label   "Autobump Volume Scattering Rays"                 type    toggle                 default { "0" }                 help    "Toggle autobump for indirect volume scattering rays."                 disablewhen "{ ar_disp_autobump == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }         }          group {             name    "folder_subdivision_2"             label   "Shapes"              parm {                 name    "ar_min_pixel_width"                 label   "Minimum Pixel Width"                 type    float                 default { "0" }                 help    "If this value is non-zero, points or curves with a small on-screen width will be automatically enlarged so that they are at least the specified size in pixels. The enlargement fraction is then used in the hair shader to adjust the opacity so that the visible thickness of the hair remains the same. For a given number of AA samples, this makes it a lot easier to antialias fine hair, at the expense of render time (because of the additional transparency/depth complexity). Good values are in the range 0.2 to 0.7. Values closer to 0 are faster to render but need more AA samples. So if your scene already uses very high AA settings, you should use a low value like 0.1. For best results, you may need to increase the auto-transparency depth, and/or lower the auto-transparency threshold, but watch the effect on render times. Note that this parameter currently works with the ribbon mode only."                 range   { 0 10 }                 parmtag { "spare_category" "Curves" }             }             parm {                 name    "ar_radius"                 label   "Default Radius"                 type    float                 default { "0.05" }                 help    "Sets the default rendered radius of points or thickness of curves. This property can be overridden per point with the \\"ar_radius\\", \\"pscale\\" or \\"width\\" (curves only) attributes."                 range   { 0 10 }                 parmtag { "units" "m1" }             }             group {                 name    "folder_points"                 label   "Points"                  parm {                     name    "ar_mode"                     label   "Mode"                     type    ordinal                     default { "sphere" }                     help    "Rendering mode for points or particles. Can be spheres, or camera-facing disks or quads."                     menu {                         "disk"      "Disk"                         "sphere"    "Sphere"                         "quad"      "Quad"                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_point_scale"                     label   "Point Scale"                     type    float                     default { "1" }                     help    "A global scale factor applied to points."                     range   { 0! 10 }                 }                 parm {                     name    "ar_aspect"                     label   "Aspect"                     type    log                     default { "1" }                     help    "The aspect ratio for quads. This property can be overrriden per point by setting the \\"ar_aspect\\" or \\"spritescale\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_rotation"                     label   "Rotation"                     type    angle                     default { "0" }                     help    "The rotation angle in degrees for quads. This property can be overrriden per point by setting the \\"ar_rotation\\" or the \\"spriterot\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { -180 180 }                 }             }              group {                 name    "folder_points_1"                 label   "Curves"                  parm {                     name    "ar_curves_basis"                     label   "Basis"                     type    string                     default { "auto" }                     help    "The curves basis to interpret the knots of the input curves or open polygons. When set to \\"Automatic\\", the basis will attempt to match the closest equivalent in Arnold, ie. linear for open polygons, Bezier for Bezier curves and B-spline for NURBS."                     menu {                         "bezier"        "Bezier"                         "b-spline"      "B-Spline"                         "catmull-rom"   "Catmull-Rom"                         "linear"        "Linear"                         "auto"          "Automatic"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }                 parm {                     name    "ar_curves_mode"                     label   "Mode"                     type    string                     default { "ribbon" }                     help    "- Ribbon: This mode is recommended for fine geometry such as realistic hair, fur or fields of grass. These curves are rendered as camera-facing flat ribbons. For secondary and shadow rays, they face the incoming ray direction. This mode doesn\'t look so good for very wide hairs or dramatic zoom-ins because of the flat appearance. This mode works best with a proper hair shader (perhaps based on a Kay-Kajiya or Marschner specular model).\\\\n\\\\n- Thick: This mode resembles spaghetti. It has a circular cross section, and a normal vector that varies across the width of the hair. Thick hairs look great when zoomed in, and are specially useful for effects work, but their varying normals make them more difficult to antialias when they are small. You can use any shader with this rendering mode, including lambert, phong, etc.\\\\n\\\\n- Oriented: This mode is similar to the ribbons mode, but you can set the ribbon orientation for each knot with an \\"ar_orientations\\" vector attribute representing the direction of the normal of the ribbon. This mode can be useful to render grass strands for example."                     menu {                         "ribbon"    "Ribbon"                         "thick"     "Thick"                         "oriented"  "Oriented      "                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }             }              group {                 name    "folder_points_2"                 label   "Volumes"                  parm {                     name    "ar_step_size"                     label   "Volume Step Size"                     type    float                     default { "0" }                     help    "When ar_step_size is set to a value other than zero, then points rendered as spheres, particles and polymeshes will be rendered as volumes."                     range   { 0 1 }                 }                 parm {                     name    "ar_volume_padding"                     label   "Volume Padding"                     type    float                     default { "0" }                     help    "When rendering particles or polymeshes as volumes (when ar_step_size is non-zero), ar_volume_padding will provide extra the volume padding specified for displacement requirements"                     disablewhen "{ ar_step_size == 0 }"                     range   { 0 10 }                 }                 parm {                     name    "label_volume"                     label   "Label"                     type    label                     nolabel                     default { "" }                 }                 parm {                     name    "label_volume2"                     label   "Label"                     type    label                     nolabel                     default { "Points and polymeshes are rendered as volumes if Step Size > 0" }                 }             }              group {                 name    "folder_points_3"                 label   " VDB "                  parm {                     name    "ar_vdb_file_enable"                     label   "Export VDB File"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Export the VDB primitives as a VDB file and reference the file in the Arnold volume."                     range   { 0 1 }                 }                 parm {                     name    "ar_vdb_file"                     label   "Save to File"                     type    file                     default { "$HIP/`pythonexprs(\\"hou.pwd().path()[1:].replace(\'/\', \'_\')\\")`.$F4.vdb" }                     help    "The OpenVDB file name that the VDB primitves will be written to, and that will be referenced by the Arnold volume instead of attaching the volume data."                     disablewhen "{ ar_vdb_file_enable == 0 }"                     range   { 0 1 }                     parmtag { "filechooser_pattern" "*.vdb" }                 }                 parm {                     name    "ar_grids"                     label   "Export Grids"                     type    string                     default { "*" }                     help    "The VDB grids to export and make available in the volume shading context."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_velocity_grids"                     label   "Velocity Grids"                     type    string                     default { "*" }                     help    "Select 1 vector or 3 float grids representing velocity for motion blur."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_velocity_scale"                     label   "Velocity Scale"                     type    log                     default { "1" }                     help    "Scale the velocities by this factor."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_velocity_threshold"                     label   "Velocity Threshold"                     type    log                     default { "0.001" }                     help    "Controls filtering of noisy velocities. The default value 0.001 should have little to no visual impact, setting it to zero disables filtering entirely."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0! 1! }                 }                 parm {                     name    "ar_padding"                     label   "Bounds Padding"                     type    float                     default { "0" }                     help    "Extra padding for the volume bounds"                     range   { 0 10 }                 }                 parm {                     name    "ar_step_size_type"                     label   "Volume Step"                     type    ordinal                     joinnext                     default { "0" }                     help    "When set to auto, the step size is automatically determined by the volume plugin, yielding the minimum voxel size."                     menu {                         "auto"      "Automatic       "                         "custom"    "Custom"                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_vdb_step_size"                     label   "      Step Size"                     type    float                     default { "0.02" }                     help    "The ray marching step size. When the step type is auto, this indicates the computed step size, the minimum voxel size."                     disablewhen "{ ar_step_size_type == auto }"                     range   { 0! 10 }                 }                 parm {                     name    "ar_step_scale"                     label   "Step Scale"                     type    log                     default { "1" }                     help    "Multiply the step size by this factor, including when it\'s automatically detected."                     range   { 0.1! 10 }                 }                 parm {                     name    "ar_compress"                     label   "Compress"                     type    toggle                     invisible                     default { "1" }                     help    "Optimize voxel storage to reduce memory usage."                     range   { 0 1 }                 }             }              group {                 name    "folder_points_4"                 label   "Tessellation"                  parm {                     name    "ar_tessellation_enable"                     label   "Tessellate Primitives"                     type    toggle                     default { "1" }                     help    "Tessellate Houdini primitives such as NURBS, Bezier meshes, circles, tubes or spheres prior to sending to Arnold."                     disablewhen "{ ar_tessellation_use_rop == 1 }"                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_style"                     label   "Tessellation Style"                     type    string                     invisible                     default { "lod" }                     help    "Specifies the conversion style for the geometry. The default is\\"Level of Detail\\". Can be one of the following:\\\\n- Level of Detail: Tessellate geometry using the level of detail settings.\\\\n- Divisions: Tessellate geometry based on the number of divisions settings."                     disablewhen "{ ar_tessellation_enable == 0 }"                     menu {                         "lod"   "Level of Detail"                         "div"   "Divisions"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_ulod"                     label   "U Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for U subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_vlod"                     label   "V Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for V subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_trimlod"                     label   "Trim Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for trim curves of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }             }          }          group {             name    "folder_subdivision_3"             label   "Attributes"              parm {                 name    "ar_toon_id"                 label   "Toon ID Group"                 type    string                 default { "" }                 help    "Objects in the same toon ID group will be rendered with the same silhouette, if the user_id attribute is set on the toon shader"             }             parm {                 name    "ar_attributes_detail"                 label   "Detail Attributes"                 type    string                 default { "*" }                 help    "The list of details attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.detailAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_primitive"                 label   "Primitive Attributes"                 type    string                 default { "*" }                 help    "The list of primitive attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.primitiveAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_point"                 label   "Point Attributes"                 type    string                 default { "*" }                 help    "The list of point attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.pointAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_vertex"                 label   "Vertex Attributes"                 type    string                 default { "*" }                 help    "The list of vertex attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.vertexAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }         }          group {             name    "folder_subdivision_4"             label   "Motion Blur"              parm {                 name    "ar_transform_type"                 label   "Transform Type"                 type    ordinal                 default { "2" }                 help    "The type of motion for the transformation of the object, as a hint for the matrix interpolation for transformation motion blur."                 menu {                     "linear"                "Linear"                     "rotate_about_origin"   "Rotate About Origin"                     "rotate_about_center"   "Rotate About Center"                 }                 range   { 0 2 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys_override"                 label   "Transform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys"                 label   "Transform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result, especially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."                 disablewhen "{ ar_mb_xform_keys_override == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys_override"                 label   "Deform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys"                 label   "Deform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for object points. Just like with transformation motion keys, increasing this value allows curved motion paths to be rendered more accurately, at the expense of using more memory."                 disablewhen "{ ar_mb_dform_keys_override == 0 } { ar_mb_velocity_enable == 1 ar_mb_acceleration_enable != 1 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_enable"                 label   "Velocity Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Deformation blur will be computed from the \\"v\\" point attribute."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_attribute"                 label   "Velocity Blur"                 type    string                 default { "v" }                 help    "The velocity point attribute to use for velocity blur. The Houdini convention is \'v\'."                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_enable"                 label   "Acceleration Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_attribute"                 label   "Acceleration Blur"                 type    string                 default { "force" }                 help    "The acceleration point attribute to use for acceleration blur. The Houdini convention is \'force\' or \'accel\'. If you use use \'force\' ensure you divide by the mass."                 disablewhen "{ ar_mb_velocity_enable == 0 } { ar_mb_acceleration_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_5"             label   "Visibility"              parm {                 name    "ar_visibility_camera"                 label   "Visible to Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_shadow"                 label   "Visible to Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_transmit"                 label   "Visible to Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_transmit"                 label   "Visible to Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_reflect"                 label   "Visible to Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_reflect"                 label   "Visible to Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_volume"                 label   "Visible to Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_receive_shadows"                 label   "Receive Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable received shadows over the object."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_self_shadows"                 label   "Self Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable self-shadowing over the object."                 disablewhen "{ ar_receive_shadows == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_opaque"                 label   "Opaque"                 type    toggle                 default { "1" }                 help    "By default, Arnold will assume that objects are opaque, which lets the renderer take certain shortcuts and optimizations for maximum ray tracing speed. When this option is unchecked, the object is assumed as \\"possibly transparent\\", and Arnold will perform extra computations to support transparency and transparent shadows, according to the shader\'s opacity settings."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_matte"                 label   "Matte"                 type    toggle                 default { "0" }                 help    "Output black and zero alpha for camera rays to create a holdout."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_skip"                 label   "Skip"                 type    toggle                 default { "0" }                 help    "Do not output this object regardless of it being forced or not."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_use_light_group"                 label   "Use Light Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_light_group"                 label   "Light Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_light_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_use_shadow_group"                 label   "Use Shadow Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_shadow_group"                 label   "Shadow Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_shadow_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_trace_sets"                 label   "Trace Sets"                 type    string                 default { "" }                 menutoggle {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_trace_sets\'):" ]                     [ "            setnames = child.parm(\'ar_trace_sets\').evalAsString()" ]                     [ "            if setnames:" ]                     [ "                my_set.update(setnames.split())" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "tracesets = set()" ]                     [ "traverse(hou.node(\'/\'), tracesets)" ]                     [ "tracesets = list(tracesets)" ]                     [ "tracesets.sort()" ]                     [ "" ]                     [ "return [x for y in zip(tracesets, tracesets) for x in y]" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_sss_setname"                 label   "SSS Set"                 type    string                 default { "" }                 help    "Use this parameter to tag multiple objects as belonging to the same SSS set so that illumination will blur across object boundaries. A common use case might be blurring between teeth and gum geometry. This feature is only available when using raytraced SSS."                 menureplace {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_sss_setname\'):" ]                     [ "            setname = child.parm(\'ar_sss_setname\').evalAsString()" ]                     [ "            if setname:" ]                     [ "                my_set.update([setname])" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "sss_names = set()" ]                     [ "traverse(hou.node(\'/\'), sss_names)" ]                     [ "sss_names = list(sss_names)" ]                     [ "sss_names.sort()" ]                     [ "" ]                     [ "return [x for y in zip(sss_names, sss_names) for x in y]" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_6"             label   "Normals"              parm {                 name    "ar_smoothing"                 label   "Smoothing"                 type    toggle                 default { "1" }                 help    "Smooth/Flat normals."                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_invert_normals"                 label   "Invert Normals"                 type    toggle                 default { "0" }                 help    "Invert normals"                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_sidedness_camera"                 label   "Double-sided for Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_shadow"                 label   "Double-sided for Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_transmit"                 label   "Double-sided for Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_transmit"                 label   "Double-sided for Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_reflect"                 label   "Double-sided for Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_reflect"                 label   "Double-sided for Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_volume"                 label   "Double-sided for Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }         }      }      group {         name    "stdswitcher4_3"         label   "Misc"          parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }         parm {             name    "vport_shadeopen"             baseparm             label   "Shade Open Curves In Viewport"             export  none         }         parm {             name    "vport_displayassubdiv"             baseparm             label   "Display as Subdivision in Viewport"             invisible             export  none         }         parm {             name    "vport_onionskin"             baseparm             label   "Onion Skinning"             export  none         }     }  ' $_obj_clouds_clouds
chblockbegin
chadd -t 0 0 $_obj_clouds_clouds ar_point_scale
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_pointscale")' $_obj_clouds_clouds/ar_point_scale
chadd -t 0 0 $_obj_clouds_clouds ar_mb_velocity_enable
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("geo_velocityblur")' $_obj_clouds_clouds/ar_mb_velocity_enable
chadd -t 0 0 $_obj_clouds_clouds ar_matte
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_matte")' $_obj_clouds_clouds/ar_matte
chblockend
opset -S on $_obj_clouds_clouds
chautoscope $_obj_clouds_clouds +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.56499999761581421 0.49399998784065247 0.86299997568130493 $_obj_clouds_clouds
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_clouds_clouds
opexprlanguage -s hscript $_obj_clouds_clouds
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds
opcf $_obj_clouds_clouds

# Node $_obj_clouds_clouds_randomize (Sop/attribvop)
set _obj_clouds_clouds_randomize = `run("opadd -e -n -v attribvop randomize")`
oplocate -x `$arg2 + -3.8743500000000002` -y `$arg3 + -3.44136` $_obj_clouds_clouds_randomize
opspareds '    parm {         name    "bindgroup"         baseparm         label   "Group"         export  none         bindselector uvselect "Modify Points"             "Select the points to affect and press Enter to complete."             0 1 0xffffffff 0 bindgrouptype 0     }     parm {         name    "bindgrouptype"         baseparm         label   "Group Type"         export  none     }     parm {         name    "bindclass"         baseparm         label   "Run Over"         export  none     }     parm {         name    "vex_numcount"         baseparm         label   "Number Count"         export  none     }     parm {         name    "vex_threadjobsize"         baseparm         label   "Thread Job Size"         export  none     }     group {         name    "stdswitcher3"         label   "Vex Setup"          parm {             name    "vexsrc"             baseparm             label   "Vex Source"             export  all         }         parm {             name    "shoppath"             baseparm             label   "Shop Path"             export  all         }         parm {             name    "script"             baseparm             label   "Script"             export  all         }         parm {             name    "clear"             baseparm             label   "Re-load VEX Functions"             export  all         }         parm {             name    "vop_compiler"             baseparm             label   "Compiler"             export  none         }         parm {             name    "vop_forcecompile"             baseparm             label   "Force Compile"             export  none         }         parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_multithread"             baseparm             label   "Enable Multithreading"             export  none         }     }      group {         name    "stdswitcher3_1"         label   "Attribute Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "ptnum"         label   "Point Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "vtxnum"         label   "Vertex Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "primnum"         label   "Primitive Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "id"         label   "Id"         type    integer         invisible         default { "-1" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numpt"         label   "Number of Points"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numvtx"         label   "Number of Vertices"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numprim"         label   "Number of Prims"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Time"         label   "Time"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "TimeInc"         label   "Time Inc"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Frame"         label   "Frame"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "life"         label   "Life"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "age"         label   "Age"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput2"         label   "Second Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput3"         label   "Third Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput4"         label   "Fourth Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput1"         label   "First Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "uv"         label   "UV"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "P"         label   "P"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "v"         label   "Velocity"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "force"         label   "Force"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Cd"         label   "Cd"         type    float         invisible         size    3         default { "1" "1" "1" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "N"         label   "N"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_clouds_clouds_randomize
opparm $_obj_clouds_clouds_randomize  bindings ( 0 ) groupbindings ( 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_randomize
opexprlanguage -s hscript $_obj_clouds_clouds_randomize
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize
opcf $_obj_clouds_clouds_randomize

# Node $_obj_clouds_clouds_randomize_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_clouds_clouds_randomize_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + -2.2312099999999999` -y `$arg3 + 6.0254700000000003` $_obj_clouds_clouds_randomize_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_geometryvopglobal1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_geometryvopglobal1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_geometryvopglobal1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_geometryvopglobal1

# Node $_obj_clouds_clouds_randomize_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_clouds_clouds_randomize_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 27.8917` -y `$arg3 + 4.9939999999999998` $_obj_clouds_clouds_randomize_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_geometryvopoutput1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_geometryvopoutput1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_geometryvopoutput1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_geometryvopoutput1

# Node $_obj_clouds_clouds_randomize_const1 (Vop/constant)
set _obj_clouds_clouds_randomize_const1 = `run("opadd -e -n -v constant const1")`
oplocate -x `$arg2 + 2.3395299999999999` -y `$arg3 + 8.6797799999999992` $_obj_clouds_clouds_randomize_const1
opparm -V 17.0.352 $_obj_clouds_clouds_randomize_const1 consttype ( vector ) vectordef ( 0 1 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_const1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_const1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize_const1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_const1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_const1

# Node $_obj_clouds_clouds_randomize_bind1 (Vop/bind)
set _obj_clouds_clouds_randomize_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 5.1436099999999998` -y `$arg3 + 8.6797799999999992` $_obj_clouds_clouds_randomize_bind1
opparm -V 17.0.352 $_obj_clouds_clouds_randomize_bind1 parmname ( Up ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_bind1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_bind1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize_bind1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_bind1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_bind1

# Node $_obj_clouds_clouds_randomize_align1 (Vop/align)
set _obj_clouds_clouds_randomize_align1 = `run("opadd -e -n -v align align1")`
oplocate -x `$arg2 + 7.8916899999999996` -y `$arg3 + 7.0862999999999996` $_obj_clouds_clouds_randomize_align1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_align1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_align1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_align1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_align1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_align1

# Node $_obj_clouds_clouds_randomize_rotate1 (Vop/rotate)
set _obj_clouds_clouds_randomize_rotate1 = `run("opadd -e -n -v rotate rotate1")`
oplocate -x `$arg2 + 17.435300000000002` -y `$arg3 + 5.2468300000000001` $_obj_clouds_clouds_randomize_rotate1
opparm $_obj_clouds_clouds_randomize_rotate1 signature ( m3 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_rotate1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_rotate1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_rotate1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_rotate1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_rotate1

# Node $_obj_clouds_clouds_randomize_degtorad1 (Vop/degtorad)
set _obj_clouds_clouds_randomize_degtorad1 = `run("opadd -e -n -v degtorad degtorad1")`
oplocate -x `$arg2 + 7.0212700000000003` -y `$arg3 + 3.7567499999999998` $_obj_clouds_clouds_randomize_degtorad1
opparm $_obj_clouds_clouds_randomize_degtorad1 deg ( 360 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_degtorad1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_degtorad1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_degtorad1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_degtorad1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_degtorad1

# Node $_obj_clouds_clouds_randomize_random1 (Vop/random)
set _obj_clouds_clouds_randomize_random1 = `run("opadd -e -n -v random random1")`
oplocate -x `$arg2 + 4.0547500000000003` -y `$arg3 + 1.8214600000000001` $_obj_clouds_clouds_randomize_random1
opparm $_obj_clouds_clouds_randomize_random1 signature ( i )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_random1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_random1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_random1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_random1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_random1

# Node $_obj_clouds_clouds_randomize_fit1 (Vop/fit)
set _obj_clouds_clouds_randomize_fit1 = `run("opadd -e -n -v fit fit1")`
oplocate -x `$arg2 + 7.0212700000000003` -y `$arg3 + 1.8214600000000001` $_obj_clouds_clouds_randomize_fit1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_fit1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_fit1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_fit1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_fit1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_fit1

# Node $_obj_clouds_clouds_randomize_multiply1 (Vop/multiply)
set _obj_clouds_clouds_randomize_multiply1 = `run("opadd -e -n -v multiply multiply1")`
oplocate -x `$arg2 + 10.9346` -y `$arg3 + 2.6272799999999998` $_obj_clouds_clouds_randomize_multiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_multiply1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_multiply1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize_multiply1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_multiply1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_multiply1

# Node $_obj_clouds_clouds_randomize_matxtoquat1 (Vop/matxtoquat)
set _obj_clouds_clouds_randomize_matxtoquat1 = `run("opadd -e -n -v matxtoquat matxtoquat1")`
oplocate -x `$arg2 + 20.825199999999999` -y `$arg3 + 5.2468300000000001` $_obj_clouds_clouds_randomize_matxtoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_matxtoquat1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_matxtoquat1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_matxtoquat1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_matxtoquat1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_matxtoquat1

# Node $_obj_clouds_clouds_randomize_bind2 (Vop/bind)
set _obj_clouds_clouds_randomize_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 24.556999999999999` -y `$arg3 + 5.2468300000000001` $_obj_clouds_clouds_randomize_bind2
opparm -V 17.0.352 $_obj_clouds_clouds_randomize_bind2 parmname ( orient ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_bind2
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_bind2
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize_bind2
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_bind2
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_bind2

# Node $_obj_clouds_clouds_randomize_fit2 (Vop/fit)
set _obj_clouds_clouds_randomize_fit2 = `run("opadd -e -n -v fit fit2")`
oplocate -x `$arg2 + 7.0212700000000003` -y `$arg3 + -1.3475900000000001` $_obj_clouds_clouds_randomize_fit2
opparm $_obj_clouds_clouds_randomize_fit2 destmin ( 0.20000000000000001 ) destmax ( 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_fit2
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_fit2
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_fit2
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_fit2
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_fit2

# Node $_obj_clouds_clouds_randomize_bind3 (Vop/bind)
set _obj_clouds_clouds_randomize_bind3 = `run("opadd -e -n -v bind bind3")`
oplocate -x `$arg2 + 10.427099999999999` -y `$arg3 + -1.3475900000000001` $_obj_clouds_clouds_randomize_bind3
opparm -V 17.0.352 $_obj_clouds_clouds_randomize_bind3 parmname ( pscale ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_bind3
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_bind3
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize_bind3
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_bind3
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_bind3

# Node $_obj_clouds_clouds_randomize_mulconst1 (Vop/mulconst)
set _obj_clouds_clouds_randomize_mulconst1 = `run("opadd -e -n -v mulconst mulconst1")`
oplocate -x `$arg2 + 13.417` -y `$arg3 + 2.6272799999999998` $_obj_clouds_clouds_randomize_mulconst1
opparm $_obj_clouds_clouds_randomize_mulconst1 mulconst ( 10 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize_mulconst1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize_mulconst1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize_mulconst1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize_mulconst1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize_mulconst1
opcf ..

# Node $_obj_clouds_clouds_pointvop1 (Sop/attribvop)
set _obj_clouds_clouds_pointvop1 = `run("opadd -e -n -v attribvop pointvop1")`
oplocate -x `$arg2 + -4.9633500000000002` -y `$arg3 + -8.04176` $_obj_clouds_clouds_pointvop1
opspareds '    parm {         name    "bindgroup"         baseparm         label   "Group"         export  none         bindselector uvselect "Modify Points"             "Select the points to affect and press Enter to complete."             0 1 0xffffffff 0 bindgrouptype 0     }     parm {         name    "bindgrouptype"         baseparm         label   "Group Type"         export  none     }     parm {         name    "bindclass"         baseparm         label   "Run Over"         export  none     }     parm {         name    "vex_numcount"         baseparm         label   "Number Count"         export  none     }     parm {         name    "vex_threadjobsize"         baseparm         label   "Thread Job Size"         export  none     }     group {         name    "stdswitcher3"         label   "Vex Setup"          parm {             name    "vexsrc"             baseparm             label   "Vex Source"             export  all         }         parm {             name    "shoppath"             baseparm             label   "Shop Path"             export  all         }         parm {             name    "script"             baseparm             label   "Script"             export  all         }         parm {             name    "clear"             baseparm             label   "Re-load VEX Functions"             export  all         }         parm {             name    "vop_compiler"             baseparm             label   "Compiler"             export  none         }         parm {             name    "vop_forcecompile"             baseparm             label   "Force Compile"             export  none         }         parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_multithread"             baseparm             label   "Enable Multithreading"             export  none         }     }      group {         name    "stdswitcher3_1"         label   "Attribute Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "ptnum"         label   "Point Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "vtxnum"         label   "Vertex Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "primnum"         label   "Primitive Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "id"         label   "Id"         type    integer         invisible         default { "-1" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numpt"         label   "Number of Points"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numvtx"         label   "Number of Vertices"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numprim"         label   "Number of Prims"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Time"         label   "Time"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "TimeInc"         label   "Time Inc"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Frame"         label   "Frame"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "life"         label   "Life"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "age"         label   "Age"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput2"         label   "Second Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput3"         label   "Third Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput4"         label   "Fourth Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput1"         label   "First Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "uv"         label   "UV"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "P"         label   "P"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "v"         label   "Velocity"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "force"         label   "Force"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Cd"         label   "Cd"         type    float         invisible         size    3         default { "1" "1" "1" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "N"         label   "N"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_clouds_clouds_pointvop1
opparm $_obj_clouds_clouds_pointvop1  bindings ( 0 ) groupbindings ( 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_pointvop1
opexprlanguage -s hscript $_obj_clouds_clouds_pointvop1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_pointvop1
opcf $_obj_clouds_clouds_pointvop1

# Node $_obj_clouds_clouds_pointvop1_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_clouds_clouds_pointvop1_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + -3.2589199999999998` -y `$arg3 + 2.5645500000000001` $_obj_clouds_clouds_pointvop1_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_pointvop1_geometryvopglobal1
opexprlanguage -s hscript $_obj_clouds_clouds_pointvop1_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_pointvop1_geometryvopglobal1

# Node $_obj_clouds_clouds_pointvop1_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_clouds_clouds_pointvop1_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 7.2469599999999996` -y `$arg3 + 3.67056` $_obj_clouds_clouds_pointvop1_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_pointvop1_geometryvopoutput1
opexprlanguage -s hscript $_obj_clouds_clouds_pointvop1_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_pointvop1_geometryvopoutput1

# Node $_obj_clouds_clouds_pointvop1_turbnoise1 (Vop/turbnoise)
set _obj_clouds_clouds_pointvop1_turbnoise1 = `run("opadd -e -n -v turbnoise turbnoise1")`
oplocate -x `$arg2 + 0.14108100000000001` -y `$arg3 + 5.52902` $_obj_clouds_clouds_pointvop1_turbnoise1
opparm $_obj_clouds_clouds_pointvop1_turbnoise1 signature ( v ) type ( snoise ) freq ( 0.5 0.5 0.5 ) rough ( 0.29999999999999999 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_pointvop1_turbnoise1
opexprlanguage -s hscript $_obj_clouds_clouds_pointvop1_turbnoise1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_pointvop1_turbnoise1

# Node $_obj_clouds_clouds_pointvop1_add1 (Vop/add)
set _obj_clouds_clouds_pointvop1_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 4.2469599999999996` -y `$arg3 + 3.67056` $_obj_clouds_clouds_pointvop1_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_pointvop1_add1
opexprlanguage -s hscript $_obj_clouds_clouds_pointvop1_add1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_pointvop1_add1
opcf ..

# Node $_obj_clouds_clouds_shopnet1 (Sop/shopnet)
set _obj_clouds_clouds_shopnet1 = `run("opadd -e -n -v shopnet shopnet1")`
oplocate -x `$arg2 + -0.099586400000000005` -y `$arg3 + -10.390599999999999` $_obj_clouds_clouds_shopnet1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_shopnet1
opexprlanguage -s hscript $_obj_clouds_clouds_shopnet1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_shopnet1
opcf $_obj_clouds_clouds_shopnet1

# Node $_obj_clouds_clouds_shopnet1_clouds (Shop/arnold_vopnet)
set _obj_clouds_clouds_shopnet1_clouds = `run("opadd -e -n -v arnold_vopnet clouds")`
oplocate -x `$arg2 + -2.84063` -y `$arg3 + -8.3552199999999992` $_obj_clouds_clouds_shopnet1_clouds
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_shopnet1_clouds
opexprlanguage -s hscript $_obj_clouds_clouds_shopnet1_clouds
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_shopnet1_clouds
opcf $_obj_clouds_clouds_shopnet1_clouds

# Node $_obj_clouds_clouds_shopnet1_clouds_OUT_material (Vop/arnold_material)
set _obj_clouds_clouds_shopnet1_clouds_OUT_material = `run("opadd -e -n -v arnold_material OUT_material")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_clouds_clouds_shopnet1_clouds_OUT_material
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_shopnet1_clouds_OUT_material
opexprlanguage -s hscript $_obj_clouds_clouds_shopnet1_clouds_OUT_material
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_shopnet1_clouds_OUT_material

# Node $_obj_clouds_clouds_shopnet1_clouds_standard_volume1 (arnold::Vop/standard_volume)
set _obj_clouds_clouds_shopnet1_clouds_standard_volume1 = `run("opadd -e -n -v arnold::standard_volume standard_volume1")`
oplocate -x `$arg2 + -4.8764700000000003` -y `$arg3 + -0.42235299999999998` $_obj_clouds_clouds_shopnet1_clouds_standard_volume1
opparm -V 17.0.352 $_obj_clouds_clouds_shopnet1_clouds_standard_volume1 scatter_color ( 1 1 1 ) transparent ( 0.54180002212524414 0.57490998506546021 0.60199999809265137 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_shopnet1_clouds_standard_volume1
opexprlanguage -s hscript $_obj_clouds_clouds_shopnet1_clouds_standard_volume1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_shopnet1_clouds_standard_volume1

# Node $_obj_clouds_clouds_shopnet1_clouds_noise1 (arnold::Vop/noise)
set _obj_clouds_clouds_shopnet1_clouds_noise1 = `run("opadd -e -n -v arnold::noise noise1")`
oplocate -x `$arg2 + -7.9053199999999997` -y `$arg3 + -1.1073500000000001` $_obj_clouds_clouds_shopnet1_clouds_noise1
opparm -V 17.0.352 $_obj_clouds_clouds_shopnet1_clouds_noise1 octaves ( 4 ) amplitude ( 5 ) coord_space ( Pref ) scale ( 0.5 0.5 0.5 ) offset ( 17 17 17 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_shopnet1_clouds_noise1
opexprlanguage -s hscript $_obj_clouds_clouds_shopnet1_clouds_noise1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_shopnet1_clouds_noise1
opcf ..
opcf ..

# Node $_obj_clouds_clouds_randomize1 (Sop/attribvop)
set _obj_clouds_clouds_randomize1 = `run("opadd -e -n -v attribvop randomize1")`
oplocate -x `$arg2 + -1.6895199999999999` -y `$arg3 + 0.24227199999999999` $_obj_clouds_clouds_randomize1
opspareds '    parm {         name    "bindgroup"         baseparm         label   "Group"         export  none         bindselector uvselect "Modify Points"             "Select the points to affect and press Enter to complete."             0 1 0xffffffff 0 bindgrouptype 0     }     parm {         name    "bindgrouptype"         baseparm         label   "Group Type"         export  none     }     parm {         name    "bindclass"         baseparm         label   "Run Over"         export  none     }     parm {         name    "vex_numcount"         baseparm         label   "Number Count"         export  none     }     parm {         name    "vex_threadjobsize"         baseparm         label   "Thread Job Size"         export  none     }     group {         name    "stdswitcher3"         label   "Vex Setup"          parm {             name    "vexsrc"             baseparm             label   "Vex Source"             export  all         }         parm {             name    "shoppath"             baseparm             label   "Shop Path"             export  all         }         parm {             name    "script"             baseparm             label   "Script"             export  all         }         parm {             name    "clear"             baseparm             label   "Re-load VEX Functions"             export  all         }         parm {             name    "vop_compiler"             baseparm             label   "Compiler"             export  none         }         parm {             name    "vop_forcecompile"             baseparm             label   "Force Compile"             export  none         }         parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_multithread"             baseparm             label   "Enable Multithreading"             export  none         }     }      group {         name    "stdswitcher3_1"         label   "Attribute Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "ptnum"         label   "Point Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "vtxnum"         label   "Vertex Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "primnum"         label   "Primitive Number"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "id"         label   "Id"         type    integer         invisible         default { "-1" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numpt"         label   "Number of Points"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numvtx"         label   "Number of Vertices"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "numprim"         label   "Number of Prims"         type    integer         invisible         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Time"         label   "Time"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "TimeInc"         label   "Time Inc"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Frame"         label   "Frame"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "life"         label   "Life"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "age"         label   "Age"         type    float         invisible         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput2"         label   "Second Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput3"         label   "Third Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput4"         label   "Fourth Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "OpInput1"         label   "First Input"         type    string         invisible         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "uv"         label   "UV"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "P"         label   "P"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "v"         label   "Velocity"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "force"         label   "Force"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Cd"         label   "Cd"         type    float         invisible         size    3         default { "1" "1" "1" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "N"         label   "N"         type    float         invisible         size    3         default { "0" "0" "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_clouds_clouds_randomize1
opparm $_obj_clouds_clouds_randomize1  bindings ( 0 ) groupbindings ( 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_randomize1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1
opcf $_obj_clouds_clouds_randomize1

# Node $_obj_clouds_clouds_randomize1_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_clouds_clouds_randomize1_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + -2.2312099999999999` -y `$arg3 + 6.0254700000000003` $_obj_clouds_clouds_randomize1_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_geometryvopglobal1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_geometryvopglobal1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_geometryvopglobal1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_geometryvopglobal1

# Node $_obj_clouds_clouds_randomize1_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_clouds_clouds_randomize1_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 27.8917` -y `$arg3 + 4.9939999999999998` $_obj_clouds_clouds_randomize1_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_geometryvopoutput1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_geometryvopoutput1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_geometryvopoutput1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_geometryvopoutput1

# Node $_obj_clouds_clouds_randomize1_const1 (Vop/constant)
set _obj_clouds_clouds_randomize1_const1 = `run("opadd -e -n -v constant const1")`
oplocate -x `$arg2 + 2.3395299999999999` -y `$arg3 + 8.6797799999999992` $_obj_clouds_clouds_randomize1_const1
opparm -V 17.0.352 $_obj_clouds_clouds_randomize1_const1 consttype ( vector ) vectordef ( 0 1 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_const1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_const1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize1_const1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_const1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_const1

# Node $_obj_clouds_clouds_randomize1_bind1 (Vop/bind)
set _obj_clouds_clouds_randomize1_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 5.1436099999999998` -y `$arg3 + 8.6797799999999992` $_obj_clouds_clouds_randomize1_bind1
opparm -V 17.0.352 $_obj_clouds_clouds_randomize1_bind1 parmname ( Up ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_bind1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_bind1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize1_bind1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_bind1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_bind1

# Node $_obj_clouds_clouds_randomize1_align1 (Vop/align)
set _obj_clouds_clouds_randomize1_align1 = `run("opadd -e -n -v align align1")`
oplocate -x `$arg2 + 7.8916899999999996` -y `$arg3 + 7.0862999999999996` $_obj_clouds_clouds_randomize1_align1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_align1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_align1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_align1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_align1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_align1

# Node $_obj_clouds_clouds_randomize1_rotate1 (Vop/rotate)
set _obj_clouds_clouds_randomize1_rotate1 = `run("opadd -e -n -v rotate rotate1")`
oplocate -x `$arg2 + 17.435300000000002` -y `$arg3 + 5.2468300000000001` $_obj_clouds_clouds_randomize1_rotate1
opparm $_obj_clouds_clouds_randomize1_rotate1 signature ( m3 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_rotate1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_rotate1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_rotate1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_rotate1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_rotate1

# Node $_obj_clouds_clouds_randomize1_degtorad1 (Vop/degtorad)
set _obj_clouds_clouds_randomize1_degtorad1 = `run("opadd -e -n -v degtorad degtorad1")`
oplocate -x `$arg2 + 7.0212700000000003` -y `$arg3 + 3.7567499999999998` $_obj_clouds_clouds_randomize1_degtorad1
opparm $_obj_clouds_clouds_randomize1_degtorad1 deg ( 360 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_degtorad1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_degtorad1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_degtorad1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_degtorad1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_degtorad1

# Node $_obj_clouds_clouds_randomize1_random1 (Vop/random)
set _obj_clouds_clouds_randomize1_random1 = `run("opadd -e -n -v random random1")`
oplocate -x `$arg2 + 4.0547500000000003` -y `$arg3 + 1.8214600000000001` $_obj_clouds_clouds_randomize1_random1
opparm $_obj_clouds_clouds_randomize1_random1 signature ( i )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_random1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_random1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_random1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_random1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_random1

# Node $_obj_clouds_clouds_randomize1_fit1 (Vop/fit)
set _obj_clouds_clouds_randomize1_fit1 = `run("opadd -e -n -v fit fit1")`
oplocate -x `$arg2 + 7.0212700000000003` -y `$arg3 + 1.8214600000000001` $_obj_clouds_clouds_randomize1_fit1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_fit1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_fit1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_fit1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_fit1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_fit1

# Node $_obj_clouds_clouds_randomize1_multiply1 (Vop/multiply)
set _obj_clouds_clouds_randomize1_multiply1 = `run("opadd -e -n -v multiply multiply1")`
oplocate -x `$arg2 + 10.9346` -y `$arg3 + 2.6272799999999998` $_obj_clouds_clouds_randomize1_multiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_multiply1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_multiply1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize1_multiply1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_multiply1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_multiply1

# Node $_obj_clouds_clouds_randomize1_matxtoquat1 (Vop/matxtoquat)
set _obj_clouds_clouds_randomize1_matxtoquat1 = `run("opadd -e -n -v matxtoquat matxtoquat1")`
oplocate -x `$arg2 + 20.825199999999999` -y `$arg3 + 5.2468300000000001` $_obj_clouds_clouds_randomize1_matxtoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_matxtoquat1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_matxtoquat1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_matxtoquat1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_matxtoquat1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_matxtoquat1

# Node $_obj_clouds_clouds_randomize1_bind2 (Vop/bind)
set _obj_clouds_clouds_randomize1_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 24.556999999999999` -y `$arg3 + 5.2468300000000001` $_obj_clouds_clouds_randomize1_bind2
opparm -V 17.0.352 $_obj_clouds_clouds_randomize1_bind2 parmname ( orient ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_bind2
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_bind2
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize1_bind2
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_bind2
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_bind2

# Node $_obj_clouds_clouds_randomize1_fit2 (Vop/fit)
set _obj_clouds_clouds_randomize1_fit2 = `run("opadd -e -n -v fit fit2")`
oplocate -x `$arg2 + 7.0212700000000003` -y `$arg3 + -1.3475900000000001` $_obj_clouds_clouds_randomize1_fit2
opparm $_obj_clouds_clouds_randomize1_fit2 destmin ( 0.5 ) destmax ( 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_fit2
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_fit2
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_fit2
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_fit2
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_fit2

# Node $_obj_clouds_clouds_randomize1_bind3 (Vop/bind)
set _obj_clouds_clouds_randomize1_bind3 = `run("opadd -e -n -v bind bind3")`
oplocate -x `$arg2 + 10.427099999999999` -y `$arg3 + -1.3475900000000001` $_obj_clouds_clouds_randomize1_bind3
opparm -V 17.0.352 $_obj_clouds_clouds_randomize1_bind3 parmname ( pscale ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_bind3
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_bind3
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_randomize1_bind3
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_bind3
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_bind3

# Node $_obj_clouds_clouds_randomize1_mulconst1 (Vop/mulconst)
set _obj_clouds_clouds_randomize1_mulconst1 = `run("opadd -e -n -v mulconst mulconst1")`
oplocate -x `$arg2 + 13.417` -y `$arg3 + 2.6272799999999998` $_obj_clouds_clouds_randomize1_mulconst1
opparm $_obj_clouds_clouds_randomize1_mulconst1 mulconst ( 10 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_clouds_clouds_randomize1_mulconst1
opexprlanguage -s hscript $_obj_clouds_clouds_randomize1_mulconst1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_randomize1_mulconst1
opuserdata -n '___toolcount___' -v '1' $_obj_clouds_clouds_randomize1_mulconst1
opuserdata -n '___toolid___' -v 'poly_instancer' $_obj_clouds_clouds_randomize1_mulconst1
opcf ..
opcf ..
opcf $_obj_clouds_clouds

# Node $_obj_clouds_clouds_sphere1 (Sop/sphere)
set _obj_clouds_clouds_sphere1 = `run("opadd -e -n -v sphere sphere1")`
oplocate -x `$arg2 + -5.2095900000000004` -y `$arg3 + 1.6812199999999999` $_obj_clouds_clouds_sphere1
opparm -V 17.0.352 $_obj_clouds_clouds_sphere1 type ( polymesh ) rad ( 2 0.5 1 ) scale ( 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_sphere1
opexprlanguage -s hscript $_obj_clouds_clouds_sphere1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_sphere1

# Node $_obj_clouds_clouds_scatter1 (Sop/scatter::2.0)
set _obj_clouds_clouds_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + -3.8708999999999998` -y `$arg3 + -2.4138099999999998` $_obj_clouds_clouds_scatter1
opparm -V 17.0.352 $_obj_clouds_clouds_scatter1 npts ( 100 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_scatter1
opexprlanguage -s hscript $_obj_clouds_clouds_scatter1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_scatter1

# Node $_obj_clouds_clouds_copy1 (Sop/copy)
set _obj_clouds_clouds_copy1 = `run("opadd -e -n -v copy copy1")`
oplocate -x `$arg2 + -4.9599000000000002` -y `$arg3 + -5.2015099999999999` $_obj_clouds_clouds_copy1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_copy1
opexprlanguage -s hscript $_obj_clouds_clouds_copy1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_copy1
opcf $_obj_clouds_clouds_randomize
oporder -e geometryvopglobal1 geometryvopoutput1 const1 bind1 align1 rotate1 degtorad1 random1 fit1 multiply1 matxtoquat1 bind2 fit2 bind3 mulconst1 
opcf ..

# Node $_obj_clouds_clouds_sphere3 (Sop/sphere)
set _obj_clouds_clouds_sphere3 = `run("opadd -e -n -v sphere sphere3")`
oplocate -x `$arg2 + -6.7979599999999998` -y `$arg3 + -0.21814700000000001` $_obj_clouds_clouds_sphere3
opparm -V 17.0.352 $_obj_clouds_clouds_sphere3 type ( polymesh ) rad ( 2 1 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_sphere3
opexprlanguage -s hscript $_obj_clouds_clouds_sphere3
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_sphere3

# Node $_obj_clouds_clouds_facet2 (Sop/facet)
set _obj_clouds_clouds_facet2 = `run("opadd -e -n -v facet facet2")`
oplocate -x `$arg2 + -6.7979599999999998` -y `$arg3 + -1.48638` $_obj_clouds_clouds_facet2
opparm -V 17.0.352 $_obj_clouds_clouds_facet2 postnml ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_facet2
opexprlanguage -s hscript $_obj_clouds_clouds_facet2
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_facet2

# Node $_obj_clouds_clouds_transform1 (Sop/xform)
set _obj_clouds_clouds_transform1 = `run("opadd -e -n -v xform transform1")`
oplocate -x `$arg2 + -4.9599000000000002` -y `$arg3 + -7.0413699999999997` $_obj_clouds_clouds_transform1
chblockbegin
chadd -t 4.166666666666667 4.166666666666667 $_obj_clouds_clouds_transform1 tx
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '-$T/2' $_obj_clouds_clouds_transform1/tx
chadd -t 0 0 $_obj_clouds_clouds_transform1 px
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$CEX' $_obj_clouds_clouds_transform1/px
chadd -t 0 0 $_obj_clouds_clouds_transform1 py
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$CEY' $_obj_clouds_clouds_transform1/py
chadd -t 0 0 $_obj_clouds_clouds_transform1 pz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$CEZ' $_obj_clouds_clouds_transform1/pz
chblockend
opparm -V 17.0.352 $_obj_clouds_clouds_transform1 t ( tx 0 0 ) p ( px py pz )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_clouds_clouds_transform1
opexprlanguage -s hscript $_obj_clouds_clouds_transform1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_transform1

# Node $_obj_clouds_clouds_vdbfrompolygons1 (Sop/vdbfrompolygons)
set _obj_clouds_clouds_vdbfrompolygons1 = `run("opadd -e -n -v vdbfrompolygons vdbfrompolygons1")`
oplocate -x `$arg2 + -4.9611500335395338` -y `$arg3 + -9.023791410847144` $_obj_clouds_clouds_vdbfrompolygons1
opparm $_obj_clouds_clouds_vdbfrompolygons1  numattrib ( 0 )
opparm -V 17.0.352 $_obj_clouds_clouds_vdbfrompolygons1 builddistance ( off ) buildfog ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_vdbfrompolygons1
opexprlanguage -s hscript $_obj_clouds_clouds_vdbfrompolygons1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_vdbfrompolygons1
opcf $_obj_clouds_clouds_pointvop1
oporder -e geometryvopglobal1 geometryvopoutput1 turbnoise1 add1 
opcf ..

# Node $_obj_clouds_clouds_material1 (Sop/material)
set _obj_clouds_clouds_material1 = `run("opadd -e -n -v material material1")`
oplocate -x `$arg2 + -4.9599000049293043` -y `$arg3 + -10.257700335915986` $_obj_clouds_clouds_material1
opparm $_obj_clouds_clouds_material1  num_materials ( 1 ) num_local1 ( 0 )
opparm -V 17.0.352 $_obj_clouds_clouds_material1 shop_materialpath1 ( ../shopnet1/clouds )
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_material1
opexprlanguage -s hscript $_obj_clouds_clouds_material1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_material1
opcf $_obj_clouds_clouds_shopnet1
opcf $_obj_clouds_clouds_shopnet1_clouds
oporder -e OUT_material standard_volume1 noise1 
opcf ..
opcf ..

# Node $_obj_clouds_clouds_box1 (Sop/box)
set _obj_clouds_clouds_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + -1.68607` -y `$arg3 + 2.9950800000000002` $_obj_clouds_clouds_box1
opparm -V 17.0.352 $_obj_clouds_clouds_box1 size ( 10 1.5 10 ) t ( -18.338069929685492 23.2789 -34.980783462524414 ) scale ( 10 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_box1
opexprlanguage -s hscript $_obj_clouds_clouds_box1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_box1

# Node $_obj_clouds_clouds_isooffset1 (Sop/isooffset)
set _obj_clouds_clouds_isooffset1 = `run("opadd -e -n -v isooffset isooffset1")`
oplocate -x `$arg2 + -1.68607` -y `$arg3 + 2.0850599999999999` $_obj_clouds_clouds_isooffset1
opparm -V 17.0.352 $_obj_clouds_clouds_isooffset1 samplediv ( 50 ) tol ( 0.0019144819761699576 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_isooffset1
opexprlanguage -s hscript $_obj_clouds_clouds_isooffset1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_isooffset1

# Node $_obj_clouds_clouds_scatter2 (Sop/scatter::2.0)
set _obj_clouds_clouds_scatter2 = `run("opadd -e -n -v scatter::2.0 scatter2")`
oplocate -x `$arg2 + -1.68607` -y `$arg3 + 1.3275300000000001` $_obj_clouds_clouds_scatter2
opparm -V 17.0.352 $_obj_clouds_clouds_scatter2 npts ( 10 ) seed ( 0.73999999999999999 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_scatter2
opexprlanguage -s hscript $_obj_clouds_clouds_scatter2
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_scatter2

# Node $_obj_clouds_clouds_copy2 (Sop/copy)
set _obj_clouds_clouds_copy2 = `run("opadd -e -n -v copy copy2")`
oplocate -x `$arg2 + -3.8708999999999998` -y `$arg3 + -0.93481199999999998` $_obj_clouds_clouds_copy2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_copy2
opexprlanguage -s hscript $_obj_clouds_clouds_copy2
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_copy2
opcf $_obj_clouds_clouds_randomize1
oporder -e geometryvopglobal1 geometryvopoutput1 const1 bind1 align1 rotate1 degtorad1 random1 fit1 multiply1 matxtoquat1 bind2 fit2 bind3 mulconst1 
opcf ..

# Node $_obj_clouds_clouds_poly_rest_pref1 (Sop/poly_rest_pref)
set _obj_clouds_clouds_poly_rest_pref1 = `run("opadd -e -n -v poly_rest_pref poly_rest_pref1")`
oplocate -x `$arg2 + -4.9599000000000002` -y `$arg3 + -6.0725300000000004` $_obj_clouds_clouds_poly_rest_pref1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_poly_rest_pref1
opexprlanguage -s hscript $_obj_clouds_clouds_poly_rest_pref1
opuserdata -n '___Version___' -v '' $_obj_clouds_clouds_poly_rest_pref1

# Node $_obj_clouds_clouds_null1 (Sop/null)
set _obj_clouds_clouds_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -1.9514499999999999` -y `$arg3 + -8.04176` $_obj_clouds_clouds_null1
opset -d off -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_clouds_clouds_null1
opexprlanguage -s hscript $_obj_clouds_clouds_null1
opuserdata -n '___Version___' -v '17.0.352' $_obj_clouds_clouds_null1
oporder -e sphere1 scatter1 copy1 randomize sphere3 facet2 transform1 vdbfrompolygons1 pointvop1 material1 shopnet1 box1 isooffset1 scatter2 copy2 randomize1 poly_rest_pref1 null1 
opcf ..
opset -p on $_obj_clouds_clouds

opcf $arg1
opcf $_obj_clouds_clouds
opwire -n $_obj_clouds_clouds_copy2 -0 $_obj_clouds_clouds_scatter1
opwire -n $_obj_clouds_clouds_facet2 -0 $_obj_clouds_clouds_copy1
opwire -n $_obj_clouds_clouds_randomize -1 $_obj_clouds_clouds_copy1
opwire -n $_obj_clouds_clouds_scatter1 -0 $_obj_clouds_clouds_randomize
opcf $_obj_clouds_clouds_randomize
opwire -n $_obj_clouds_clouds_randomize_const1 -0 $_obj_clouds_clouds_randomize_bind1
opwire -n $_obj_clouds_clouds_randomize_bind1 -0 $_obj_clouds_clouds_randomize_align1
opwire -n -o 8 $_obj_clouds_clouds_randomize_geometryvopglobal1 -1 $_obj_clouds_clouds_randomize_align1
opwire -n $_obj_clouds_clouds_randomize_align1 -0 $_obj_clouds_clouds_randomize_rotate1
opwire -n $_obj_clouds_clouds_randomize_mulconst1 -1 $_obj_clouds_clouds_randomize_rotate1
opwire -n -o 8 $_obj_clouds_clouds_randomize_geometryvopglobal1 -2 $_obj_clouds_clouds_randomize_rotate1
opwire -n -o 12 $_obj_clouds_clouds_randomize_geometryvopglobal1 -0 $_obj_clouds_clouds_randomize_random1
opwire -n $_obj_clouds_clouds_randomize_random1 -0 $_obj_clouds_clouds_randomize_fit1
opwire -n $_obj_clouds_clouds_randomize_degtorad1 -0 $_obj_clouds_clouds_randomize_multiply1
opwire -n $_obj_clouds_clouds_randomize_fit1 -1 $_obj_clouds_clouds_randomize_multiply1
opwire -n $_obj_clouds_clouds_randomize_rotate1 -0 $_obj_clouds_clouds_randomize_matxtoquat1
opwire -n $_obj_clouds_clouds_randomize_random1 -0 $_obj_clouds_clouds_randomize_fit2
opwire -n $_obj_clouds_clouds_randomize_fit2 -0 $_obj_clouds_clouds_randomize_bind3
opwire -n $_obj_clouds_clouds_randomize_multiply1 -0 $_obj_clouds_clouds_randomize_mulconst1
opcf ..
opwire -n $_obj_clouds_clouds_sphere3 -0 $_obj_clouds_clouds_facet2
opwire -n $_obj_clouds_clouds_poly_rest_pref1 -0 $_obj_clouds_clouds_transform1
opwire -n $_obj_clouds_clouds_pointvop1 -0 $_obj_clouds_clouds_vdbfrompolygons1
opwire -n $_obj_clouds_clouds_transform1 -0 $_obj_clouds_clouds_pointvop1
opcf $_obj_clouds_clouds_pointvop1
opwire -n $_obj_clouds_clouds_pointvop1_add1 -0 $_obj_clouds_clouds_pointvop1_geometryvopoutput1
opwire -n $_obj_clouds_clouds_pointvop1_geometryvopglobal1 -1 $_obj_clouds_clouds_pointvop1_turbnoise1
opwire -n $_obj_clouds_clouds_pointvop1_turbnoise1 -0 $_obj_clouds_clouds_pointvop1_add1
opwire -n $_obj_clouds_clouds_pointvop1_geometryvopglobal1 -1 $_obj_clouds_clouds_pointvop1_add1
opcf ..
opwire -n $_obj_clouds_clouds_vdbfrompolygons1 -0 $_obj_clouds_clouds_material1
opcf $_obj_clouds_clouds_shopnet1
opcf $_obj_clouds_clouds_shopnet1_clouds
opwire -n $_obj_clouds_clouds_shopnet1_clouds_standard_volume1 -2 $_obj_clouds_clouds_shopnet1_clouds_OUT_material
opwire -n $_obj_clouds_clouds_shopnet1_clouds_noise1 -0 $_obj_clouds_clouds_shopnet1_clouds_standard_volume1
opcf ..
opcf ..
opwire -n $_obj_clouds_clouds_box1 -0 $_obj_clouds_clouds_isooffset1
opwire -n $_obj_clouds_clouds_isooffset1 -0 $_obj_clouds_clouds_scatter2
opwire -n $_obj_clouds_clouds_sphere1 -0 $_obj_clouds_clouds_copy2
opwire -n $_obj_clouds_clouds_randomize1 -1 $_obj_clouds_clouds_copy2
opwire -n $_obj_clouds_clouds_scatter2 -0 $_obj_clouds_clouds_randomize1
opcf $_obj_clouds_clouds_randomize1
opwire -n $_obj_clouds_clouds_randomize1_const1 -0 $_obj_clouds_clouds_randomize1_bind1
opwire -n $_obj_clouds_clouds_randomize1_bind1 -0 $_obj_clouds_clouds_randomize1_align1
opwire -n -o 8 $_obj_clouds_clouds_randomize1_geometryvopglobal1 -1 $_obj_clouds_clouds_randomize1_align1
opwire -n $_obj_clouds_clouds_randomize1_align1 -0 $_obj_clouds_clouds_randomize1_rotate1
opwire -n $_obj_clouds_clouds_randomize1_mulconst1 -1 $_obj_clouds_clouds_randomize1_rotate1
opwire -n -o 8 $_obj_clouds_clouds_randomize1_geometryvopglobal1 -2 $_obj_clouds_clouds_randomize1_rotate1
opwire -n -o 12 $_obj_clouds_clouds_randomize1_geometryvopglobal1 -0 $_obj_clouds_clouds_randomize1_random1
opwire -n $_obj_clouds_clouds_randomize1_random1 -0 $_obj_clouds_clouds_randomize1_fit1
opwire -n $_obj_clouds_clouds_randomize1_degtorad1 -0 $_obj_clouds_clouds_randomize1_multiply1
opwire -n $_obj_clouds_clouds_randomize1_fit1 -1 $_obj_clouds_clouds_randomize1_multiply1
opwire -n $_obj_clouds_clouds_randomize1_rotate1 -0 $_obj_clouds_clouds_randomize1_matxtoquat1
opwire -n $_obj_clouds_clouds_randomize1_random1 -0 $_obj_clouds_clouds_randomize1_fit2
opwire -n $_obj_clouds_clouds_randomize1_fit2 -0 $_obj_clouds_clouds_randomize1_bind3
opwire -n $_obj_clouds_clouds_randomize1_multiply1 -0 $_obj_clouds_clouds_randomize1_mulconst1
opcf ..
opwire -n $_obj_clouds_clouds_copy1 -0 $_obj_clouds_clouds_poly_rest_pref1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_clouds_clouds
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_clouds_clouds
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pc scene start" label="Pc scene start" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Object/cam</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_cam1 (Object/cam)
set _obj_cam1 = `run("opadd -e -n -v cam cam1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_cam1
opspareds '    group {         name    "stdswitcher3"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             invisible             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             invisible             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher3_1"         label   "Render"          parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }     }      group {         name    "stdswitcher3_2"         label   "View"          parm {             name    "iconscale"             label   "Icon Scale"             type    float             default { "1" }             range   { 0.001 10 }             parmtag { "spare_category" "View" }         }         parm {             name    "res"             label   "Resolution"             type    intvector2             joinnext             size    2             default { "1280" "720" }             range   { -1 1 }             parmtag { "cook_dependent" "1" }             parmtag { "spare_category" "View" }         }         parm {             name    "resMenu"             label   "Choose Resolution"             type    ordinal             nolabel             default { "0" }             menumini {                 [ "echo `pythonexprs(\\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBres\')\\")`" ]             }             parmtag { "script_callback" "opparm . res ( `arg(\\"$script_value\\", 0)` `arg(\\"$script_value\\", 1)` aspect ( `arg(\\"$script_value\\", 2)` )" }             parmtag { "spare_category" "View" }         }         parm {             name    "aspect"             label   "Pixel Aspect Ratio"             type    float             default { "1" }             range   { 0.05 2 }             parmtag { "spare_category" "View" }         }         parm {             name    "projection"             label   "Projection"             type    ordinal             default { "perspective" }             menu {                 "perspective"   "Perspective"                 "ortho"         "Orthographic"                 "sphere"        "Polar (panoramic)"                 "cylinder"      "Cylindrical (panoramic)"                 "lens"          "Lens Shader"             }             parmtag { "spare_category" "View" }         }         parm {             name    "vm_lensshader"             label   "Lens Shader"             type    oppath             default { "" }             disablewhen "{ projection != lens }"             parmtag { "oprelative" "." }             parmtag { "spare_category" "View" }         }         parm {             name    "focal"             label   "Focal Length"             type    float             joinnext             default { "50" }             range   { 1 100 }         }         parm {             name    "focalunits"             label   "Focal Units"             type    string             default { "mm" }             menu {                 "mm"    "millimeters"                 "m"     "meters"                 "nm"    "nanometers"                 "in"    "inches"                 "ft"    "feet"             }         }         parm {             name    "aperture"             label   "Aperture"             type    float             default { "41.4214" }             range   { 1 100 }             parmtag { "spare_category" "View" }         }         parm {             name    "orthowidth"             label   "Ortho Width"             type    float             default { "2" }             disablewhen "{ projection != ortho }"             range   { 0.001 10 }             parmtag { "spare_category" "View" }         }         parm {             name    "near"             label   "Near Clipping"             type    float             default { "0.001" }             range   { 0 10 }             parmtag { "spare_category" "View" }         }         parm {             name    "far"             label   "Far Clipping"             type    float             default { "10000" }             range   { 1 10000 }             parmtag { "spare_category" "View" }         }         parm {             name    "vm_bgenable"             label   "Enable Background Image"             type    toggle             default { "1" }             parmtag { "mantra_class" "image" }             parmtag { "mantra_name" "bgenable" }             parmtag { "spare_category" "View" }         }         parm {             name    "vm_background"             label   "Background Image"             type    file             default { "" }             disablewhen "{ vm_bgenable == 0 }"             parmtag { "filechooser_mode" "read" }             parmtag { "mantra_class" "image" }             parmtag { "mantra_name" "background" }             parmtag { "spare_category" "View" }         }         parm {             name    "win"             label   "Screen Window X/Y"             type    vector2             size    2             default { "0" "0" }             disablewhen "{ winmask != \\"\\" }"             range   { -1 1 }         }         parm {             name    "winsize"             label   "Screen Window Size"             type    vector2             size    2             default { "1" "1" }             disablewhen "{ winmask != \\"\\" }"             range   { 0.01 10 }         }         parm {             name    "winmask"             label   "Screen Window Mask"             type    oplist             default { "" }             disablewhen "{ projection != ortho projection != perspective }"             parmtag { "opexpand" "1" }             parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }             parmtag { "oprelative" "/obj" }         }         parm {             name    "cropl"             label   "Left Crop"             type    float             default { "0" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropr"             label   "Right Crop"             type    float             default { "1" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropb"             label   "Bottom Crop"             type    float             default { "0" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropt"             label   "Top Crop"             type    float             default { "1" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropmask"             label   "Crop Mask"             type    oplist             default { "" }             disablewhen "{ projection != ortho projection != perspective }"             parmtag { "opexpand" "1" }             parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }             parmtag { "oprelative" "/obj" }         }     }      group {         name    "stdswitcher3_3"         label   "Sampling"          parm {             name    "shutter"             label   "Shutter Time"             type    float             default { "0.5" }             disablewhen "{ allowmotionblur == 0 }"             range   { 0 1 }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "focus"             label   "Focus Distance"             type    float             default { "5" }             disablewhen "{ vm_dof == 0 }"             range   { 0.001 1000 }             parmtag { "mantra_class" "camera" }             parmtag { "mantra_name" "focus" }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "fstop"             label   "F-Stop"             type    float             default { "5.6" }             disablewhen "{ vm_dof == 0 }"             range   { 1.4 22 }             parmtag { "mantra_class" "camera" }             parmtag { "mantra_name" "fstop" }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "vm_bokeh"             label   "Bokeh"             type    string             default { "radial" }             menureplace {                 "radial"    "Radial Bokeh"                 "file"      "Image File Bokeh"                 "box"       "Box Filter Bokeh"                 "null"      "Disable Bokeh"             }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "vm_bokehfile"             label   "Bokeh Image File"             type    image             default { "default.pic" }             disablewhen "{ vm_bokeh != file }"             parmtag { "filechooser_mode" "read" }             parmtag { "mantra_class" "bokeh" }             parmtag { "mantra_name" "-f" }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "vm_bokehrotation"             label   "Bokeh Rotation"             type    float             default { "0" }             disablewhen "{ vm_bokeh != file }"             range   { 0 360 }             parmtag { "mantra_class" "bokeh" }             parmtag { "mantra_name" "-r" }             parmtag { "spare_category" "Sampling" }         }     }      group {         name    "stdswitcher3_4"         label   "Arnold"          parm {             name    "shop_propertiespath"             label   "Default Properties"             type    oppath             default { "" }             help    "Specifies a Property SHOP that is used to resolve rendering parameter values. At render time, this SHOP (if given) is used to resolve rendering parameter values first, before looking for then on the objects being rendered."             range   { 0 1 }             parmtag { "opfilter" "!!SHOP/PROPERTIES!!" }             parmtag { "oprelative" "." }             parmtag { "spare_category" "Shaders" }         }         parm {             name    "ar_user_options"             label   "User Options"             type    string             joinnext             default { "" }             help    "This string is passed to AiNodeSetAttributes() ont the Arnold node. It can contain any number of parameter/value pairs separated by whitespace (spaces, tabs, newlines) as found in .ass files."             disablewhen "{ ar_user_options_enable == 0 }"         }         parm {             name    "ar_user_options_enable"             label   "Enable"             type    toggle             default { "0" }             help    "Overrides the value of any parameter of the Arnold node."         }         group {             name    "folder0"             label   "Camera"              parm {                 name    "ar_camera_shader"                 label   "Camera Shader"                 type    oppath                 default { "" }                 help    "Shader path to specify a custom camera or a UV remap texture to distort the ray direction of a perspective camera."                 parmtag { "opfilter" "!!VOP!!" }                 parmtag { "oprelative" "." }             }             parm {                 name    "ar_exposure"                 label   "Exposure"                 type    float                 default { "0" }                 help    "Simulates the effect of camera exposure. Increasing this value by a value of one gives you one stop up (doubles the brightness)."                 range   { -10 10 }             }             parm {                 name    "ar_radial_distortion"                 label   "Radial Distortion"                 type    float                 default { "0" }                 help    "Specify the camera\'s first degree radial distortion, with negative and positive values resulting in pincushion and barrel distortion respectively."                 disablewhen "{ projection != perspective }"                 range   { -0.2 2 }             }             parm {                 name    "ar_horizontal_fov"                 label   "Horizontal FOV"                 type    angle                 default { "60" }                 help    "Controls the field of view in the horizontal axis. This is activated when the camera projection is set to \\"Cylindrical\\" in the View tab."                 disablewhen "{ projection != cylinder }"                 range   { 0 360 }             }             parm {                 name    "ar_vertical_fov"                 label   "Vertical FOV"                 type    angle                 default { "90" }                 help    "Controls the field of view in the vertical axis. This is activated when the camera projection is set to \\"Cylindrical\\" in the View tab."                 disablewhen "{ projection != cylinder }"                 range   { 0 180 }             }             parm {                 name    "ar_projective"                 label   "Vertical Mapping"                 type    ordinal                 default { "projective" }                 help    "Is activated when the camera Projection (In the View tab) is set to cylindrical. The Arnold cylindrical camera can operate in two modes. With Vertical Mapping set to Linear, all rays have a common origin - they are cast from the center of the cylinder. In the vertical direction the camera acts as a pinhole camera and in the horizontal direction it acts as a spherical camera. When set to Projective, the camera is more of a \'true\' cylindrical camera; in the vertical direction the camera acts as an orthographic view and in the horizontal direction it acts as a spherical camera."                 disablewhen "{ projection != cylinder }"                 menu {                     "linear"        "Linear (Lat./Long.)"                     "projective"    "Projective"                 }                 range   { 0 1 }             }             parm {                 name    "ar_camera_mantra_orientation"                 label   "Mantra Orientation"                 type    toggle                 default { "0" }                 help    "Match Mantra\'s default orientation (+X) for polar projection instead of matching the viewport default (-Z)."                 disablewhen "{ projection != sphere projection != cylinder }"                 range   { 0 1 }             }             parm {                 name    "ar_fisheye"                 label   "Fisheye Camera"                 type    toggle                 default { "0" }                 help    "Is activated when the camera Projection (In the View tab) is set to Perspective. Turns a Perspective camera into a fisheye camera.  It is controlled by the Focal Length and Aperture in the View tab."                 disablewhen "{ projection != perspective }"                 range   { 0 1 }             }             parm {                 name    "ar_autocrop"                 label   "Fisheye Autocrop"                 type    toggle                 default { "0" }                 help    "Is activated when the camera Projection (In the View tab) is set to Perspective and Fisheye Camera is turned on. Crops a full screen image from the centre of the fisheye image to remove any white border."                 disablewhen "{ projection != perspective } { ar_fisheye == 0 }"                 range   { 0 1 }             }             parm {                 name    "ar_uv_remap"                 label   "UV Remap"                 type    image                 invisible                 default { "" }                 help    "Is activated when the camera Projection (In the View tab) is set to Perspective. Takes a 2D displacement image and uses it to distort the rendered output of the camera\'s lens. Can be useful for replicating barrel and pincushion distortion camera lens effects."                 disablewhen "{ projection != perspective }"                 range   { 0 1 }                 parmtag { "filechooser_mode" "read" }             }             parm {                 name    "ar_filtermap"                 label   "Vignetting Map"                 type    image                 invisible                 default { "" }                 range   { 0 1 }                 parmtag { "filechooser_mode" "read" }             }         }          group {             name    "folder0_1"             label   "Motion Blur"              parm {                 name    "ar_mb_xform_keys_override"                 label   "Override Transform Keys"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_mb_xform_keys"                 label   "Transform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result, especially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."                 disablewhen "{ ar_mb_xform_keys_override == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_rolling_shutter"                 label   "Rolling Shutter"                 type    ordinal                 default { "off" }                 help    "Simulate the type of rolling shutter effect seen in footage shot with digital cameras that use CMOS-based sensors such as Blackmagics, Alexas, REDs, and even iPhones. Top-to-bottom is the most common scanning direction."                 menu {                     "off"       "Off"                     "top"       "Top"                     "bottom"    "Bottom"                     "left"      "Left"                     "right"     "Right"                 }                 range   { 0 1 }             }             parm {                 name    "ar_rolling_shutter_duration"                 label   "Roll. Shutter Duration"                 type    log                 default { "1 / 1080" }                 help    "The exposure duration of each scanline for rolling shutter motion blur. A value of 0 means no motion blur, and a value of 1 means no rolling shutter. Ideally, this should be set to 1/scanlines."                 hidewhen "{ ar_rolling_shutter == off }"                 range   { 0! 1! }             }             parm {                 name    "ar_mb_shutter"                 label   "Camera Shutter"                 type    ordinal                 default { "rop" }                 help    "Specifies at which point in the frame the shutter should open which allows you to change the motion blur trails. The Shutter position offsets the motion blur within the image."                 menu {                     "rop"       "Use ROP Shutter"                     "start"     "Start On Frame"                     "center"    "Center On Frame"                     "end"       "End On Frame"                     "custom"    "Custom Shutter"                 }                 range   { 0 1 }                 parmtag { "script_callback" "" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "ar_mb_shutter_length"                 label   "Shutter Length"                 type    float                 default { "ch(\\"shutter\\")" }                 help    "You can use this attribute to tweak the size and length of the motion blur trails. It simulates the effect of camera shutter speed."                 hidewhen "{ ar_mb_shutter == custom } { ar_mb_shutter == rop }"                 range   { 0 1 }             }             parm {                 name    "ar_mb_shutter_range"                 label   "Shutter Start/End"                 type    vector2                 size    2                 default { "-0.25" "0.25" }                 help    "Specifically sets the start and end times of the shutter. Can be used to create custom motion blur effects."                 hidewhen "{ ar_mb_shutter != custom }"                 range   { -1 1 }             }             parm {                 name    "ar_shutter_type"                 label   "Shutter Filter"                 type    ordinal                 default { "box" }                 help    "The type of filtering applied to time samples. By default, this is a box filter, with all time samples having the same weight."                 menu {                     "box"       "Box"                     "triangle"  "Triangle"                     "curve"     "Curve"                 }                 range   { 0 1 }             }             parm {                 name    "ar_shutter_curve"                 label   "Shutter Curve"                 type    ramp_flt                 default { "4" }                 help    "Define an arbitrary shape for the shutter filter. Only linear interpolation is implemented."                 hidewhen "{ ar_shutter_type != curve }"                 range   { 1! 10 }                 parmtag { "rampfloatdefault" "1pos ( 0 ) 1value ( 0 ) 1interp ( linear ) 2pos ( 0.10000000149011612 ) 2value ( 1 ) 2interp ( linear ) 3pos ( 0.89999997615814209 ) 3value ( 1 ) 3interp ( linear ) 4pos ( 1 ) 4value ( 0 ) 4interp ( linear )" }                 parmtag { "rampshowcontrolsdefault" "0" }             }         }          group {             name    "folder0_2"             label   "Depth of Field"              parm {                 name    "ar_dof_enable"                 label   "Enable Depth of Field"                 type    toggle                 default { "0" }                 help    "Enables depth of field effects."                 disablewhen "{ projection != perspective }"                 range   { 0 1 }                 parmtag { "spare_category" "Depth of Field" }             }             parm {                 name    "ar_focus_distance"                 label   "Focus Distance"                 type    float                 default { "ch(\\"focus\\")" }                 help    "This is the distance at which objects appear in perfect focus, for a non-zero aperture value."                 disablewhen "{ ar_dof_enable == 0 } { projection != perspective }"                 range   { 0.001 1000 }             }             parm {                 name    "ar_aperture_size"                 label   "Aperture Size"                 type    float                 default { "0" }                 help    "Controls the size of the Aperture. The smaller the aperture, the sharper the images (wider depth of field). In the limit, a size of zero produces no depth of field blurring."                 disablewhen "{ ar_dof_enable == 0 } { projection != perspective }"                 range   { 0 10 }                 parmtag { "units" "m1" }             }             parm {                 name    "ar_aperture_aspect_ratio"                 label   "Aspect Ratio"                 type    log                 default { "1" }                 help    "This is used to stretch the aperture vertically. A value of 2 produces an elongated defocusing effect reminiscent of an anamorphic lens, while a value less than one will squash it."                 disablewhen "{ ar_dof_enable == 0 } { projection != perspective }"                 range   { 0.05 20 }                 parmtag { "spare_category" "Depth of Field" }             }             parm {                 name    "ar_aperture_polygonal"                 label   "Polygonal Aperture"                 type    toggle                 nolabel                 joinnext                 default { "1" }                 help    "Whether the aperture will behave as a regular polygon of N-sides or as a perfect disk."                 disablewhen "{ ar_dof_enable == 0 } { projection != perspective }"                 range   { 0 1 }                 parmtag { "spare_category" "Depth of Field" }             }             parm {                 name    "ar_aperture_blades"                 label   "Aperture Blades"                 type    integer                 default { "5" }                 help    "Number of blades (or polygon sides) of the polygonal aperture."                 disablewhen "{ ar_dof_enable == 0 } { ar_aperture_polygonal == 0 } { projection != perspective }"                 range   { 3! 20 }                 parmtag { "spare_category" "Depth of Field" }             }             parm {                 name    "ar_aperture_blade_curvature"                 label   "Blade Curvature"                 type    float                 default { "0" }                 help    "Curvature of the polygonal aperture sides. A value of 0 means hard straight sides. Increasing this value results in progressively more curved edges, all the way to 1.0 which produces a perfect disk. Negative values produce a \\"pinched\\" or star-shaped aperture."                 disablewhen "{ ar_dof_enable == 0 } { ar_aperture_polygonal == 0 } { projection != perspective }"                 range   { -5 1 }                 parmtag { "spare_category" "Depth of Field" }             }             parm {                 name    "ar_aperture_rotation"                 label   "Aperture Rotation"                 type    float                 default { "0" }                 help    "Rotates the aperture by any number of degrees."                 disablewhen "{ ar_dof_enable == 0 } { ar_aperture_polygonal == 0 } { projection != perspective }"                 range   { -180 180 }                 parmtag { "spare_category" "Depth of Field" }             }             parm {                 name    "ar_flat_field_focus"                 label   "Flat Field"                 type    toggle                 default { "1" }                 help    "Enable a perfectly flat focus plane on the standard thin lens camera model. This prevents overblurring away from the optical axis. Some renders might change, specially with wide FOV angles or very shallow DOF. Set this parameter to false to revert to the previous behavior."                 disablewhen "{ ar_dof_enable == 0 } { projection != perspective }"                 range   { 0 1 }                 parmtag { "spare_category" "Depth of Field" }             }         }      }  ' $_obj_cam1
opparm $_obj_cam1  ar_shutter_curve ( 4 )
chblockbegin
chadd -t 0 0 $_obj_cam1 sx
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_cam1/sx
chadd -t 0 0 $_obj_cam1 sy
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_cam1/sy
chadd -t 0 0 $_obj_cam1 sz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_cam1/sz
chadd -t 0 0 $_obj_cam1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_cam1/scale
chadd -t 0 0 $_obj_cam1 ar_rolling_shutter_duration
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1 / 1080' $_obj_cam1/ar_rolling_shutter_duration
chadd -t 0 0 $_obj_cam1 ar_mb_shutter_length
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("shutter")' $_obj_cam1/ar_mb_shutter_length
chadd -t 0 0 $_obj_cam1 ar_focus_distance
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("focus")' $_obj_cam1/ar_focus_distance
chblockend
opset -S on $_obj_cam1
opparm -V 17.0.352 $_obj_cam1 t ( 0 2.5578137497121864 4.3477330975424691 ) r ( -20.160000014587972 0 0 ) res ( 1920 1080 ) resMenu ( "1920 1080 1" ) orthowidth ( 3.6749699515247132 ) near ( 0.10000000149011612 ) far ( 3814.4436995062765 ) ar_shutter_curve2pos ( 0.10000000149011612 ) ar_shutter_curve2value ( 1 ) ar_shutter_curve3pos ( 0.89999997615814209 ) ar_shutter_curve3value ( 1 ) ar_shutter_curve4pos ( 1 )
chautoscope $_obj_cam1 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_cam1
opexprlanguage -s hscript $_obj_cam1
opuserdata -n '___Version___' -v '17.0.352' $_obj_cam1
opuserdata -n '___toolcount___' -v '1' $_obj_cam1
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_cam1
opcf $_obj_cam1

# Node $_obj_cam1_camOrigin (Sop/add)
set _obj_cam1_camOrigin = `run("opadd -e -n -v add camOrigin")`
oplocate -x `$arg2 + 2` -y `$arg3 + 3` $_obj_cam1_camOrigin
opparm $_obj_cam1_camOrigin  points ( 1 ) prims ( 1 )
opparm -V 17.0.352 $_obj_cam1_camOrigin usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_cam1_camOrigin
opexprlanguage -s hscript $_obj_cam1_camOrigin
opuserdata -n '___Version___' -v '17.0.352' $_obj_cam1_camOrigin
opuserdata -n '___toolcount___' -v '1' $_obj_cam1_camOrigin
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_cam1_camOrigin

# Node $_obj_cam1_file1 (Sop/file)
set _obj_cam1_file1 = `run("opadd -e -n -v file file1")`
oplocate -x `$arg2 + 0.17999999999999999` -y `$arg3 + 3` $_obj_cam1_file1
chblockbegin
chadd -t 0 0 $_obj_cam1_file1 index
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF-1' $_obj_cam1_file1/index
chblockend
opparm -V 17.0.352 $_obj_cam1_file1 file ( defcam.bgeo )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_cam1_file1
opexprlanguage -s hscript $_obj_cam1_file1
opuserdata -n '___Version___' -v '17.0.352' $_obj_cam1_file1
opuserdata -n '___toolcount___' -v '1' $_obj_cam1_file1
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_cam1_file1

# Node $_obj_cam1_xform1 (Sop/xform)
set _obj_cam1_xform1 = `run("opadd -e -n -v xform xform1")`
oplocate -x `$arg2 + 0.17999999999999999` -y `$arg3 + 1.5` $_obj_cam1_xform1
chblockbegin
chadd -t 0 0 $_obj_cam1_xform1 scale
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'property("../iconscale", 1)' $_obj_cam1_xform1/scale
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_cam1_xform1
opexprlanguage -s hscript $_obj_cam1_xform1
opuserdata -n '___Version___' -v '17.0.352' $_obj_cam1_xform1
opuserdata -n '___toolcount___' -v '1' $_obj_cam1_xform1
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_cam1_xform1
oporder -e camOrigin file1 xform1 
opcf ..
opset -p on $_obj_cam1
opcf $arg1

# Node $_obj_lights (Object/subnet)
set _obj_lights = `run("opadd -e -n -v subnet lights")`
oplocate -x `$arg2 + 6.9285048612652584` -y `$arg3 + -2.244516163522011` $_obj_lights
opset -S on $_obj_lights
chautoscope $_obj_lights +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_lights
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_lights
opexprlanguage -s hscript $_obj_lights
opuserdata -n '___toolcount___' -v '1' $_obj_lights
opuserdata -n '___toolid___' -v 'pc scene start' $_obj_lights
opcf $_obj_lights

# Node $_obj_lights_fill_light (Object/arnold_light)
set _obj_lights_fill_light = `run("opadd -e -n -v arnold_light fill_light")`
oplocate -x `$arg2 + -1.1175870853752379e-08` -y `$arg3 + -0.98533000000000159` $_obj_lights_fill_light
opparm $_obj_lights_fill_light  attenramp ( 3 )
chblockbegin
chadd -t 0 0 $_obj_lights_fill_light ar_color_family
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear_family' -l p $_obj_lights_fill_light/ar_color_family
chadd -t 0 0 $_obj_lights_fill_light normalizearea
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_normalize")' $_obj_lights_fill_light/normalizearea
chadd -t 0 0 $_obj_lights_fill_light shadow_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cast_shadows")' $_obj_lights_fill_light/shadow_type
chadd -t 0 0 $_obj_lights_fill_light shadow_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_shadow_density")' $_obj_lights_fill_light/shadow_intensity
chadd -t 0 0 $_obj_lights_fill_light projection
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(strcmp(chs(\'light_type\'), \'distant\') == 0, 1, 0)' $_obj_lights_fill_light/projection
chadd -t 0 0 $_obj_lights_fill_light areasize1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizex"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, ch("ar_height"),     if(ch("ar_light_type") == 6, 1,     if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_lights_fill_light/areasize1
chadd -t 0 0 $_obj_lights_fill_light areasize2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizey"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, 1,     if(ch("ar_light_type") == 6, 1, if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_lights_fill_light/areasize2
chadd -t 0 0 $_obj_lights_fill_light conedelta
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_penumbra_angle")' $_obj_lights_fill_light/conedelta
chadd -t 0 0 $_obj_lights_fill_light coneangle
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cone_angle")-(2*ch("ar_penumbra_angle"))' $_obj_lights_fill_light/coneangle
chadd -t 0 0 $_obj_lights_fill_light light_contribdiff
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_diffuse") != 0' $_obj_lights_fill_light/light_contribdiff
chadd -t 0 0 $_obj_lights_fill_light light_contribspec
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_specular") != 0' $_obj_lights_fill_light/light_contribspec
chadd -t 0 0 $_obj_lights_fill_light light_colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorr")' $_obj_lights_fill_light/light_colorr
chadd -t 0 0 $_obj_lights_fill_light light_colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorg")' $_obj_lights_fill_light/light_colorg
chadd -t 0 0 $_obj_lights_fill_light light_colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorb")' $_obj_lights_fill_light/light_colorb
chadd -t 0 0 $_obj_lights_fill_light light_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_intensity")*(2^ch("ar_exposure"))' $_obj_lights_fill_light/light_intensity
chadd -t 0 0 $_obj_lights_fill_light coneenable
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 2, 1, 0)' $_obj_lights_fill_light/coneenable
chadd -t 0 0 $_obj_lights_fill_light light_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, 4),      if(ch("ar_light_type") == 1, 6,      if(ch("ar_light_type") == 2, 0,    if(ch("ar_light_type") == 3, 2,      if(ch("ar_light_type") == 4, 3,      if(ch("ar_light_type") == 5, 1,      if(ch("ar_light_type") == 6, 8,      if(ch("ar_light_type") == 7, 8,     if(ch("ar_light_type") == 8, 5, 8)))))))))' $_obj_lights_fill_light/light_type
chblockend
opset -S on $_obj_lights_fill_light
opparm $_obj_lights_fill_light t ( -3.0507122079933136 2.0930144622790827 0.064317312314739986 ) r ( -27.331287129089546 -90.82822598999212 -2.7504375089683186e-14 ) s ( 1 1 1 ) scale ( 1 ) folder1 ( 1 1 1 1 1 1 1 1 1 1 ) ar_light_type ( quad ) ar_color ( 0.76499998569488525 0.90208333730697632 1 ) ar_light_color_texture_refresh ( 0 ) ar_exposure ( 5.5 ) categories ( lb:arnold_light2 ) ar_camera ( 0 ) orthowidth ( 1.481481393178304 ) attenramp1c ( 1 1 1 ) attenramp2pos ( 0.89999997600000003 ) attenramp2c ( 1 1 1 ) attenramp3pos ( 1 )
chautoscope $_obj_lights_fill_light +tx +ty +tz +rx +ry +rz +sx +sy +sz +dimmer
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_lights_fill_light
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_lights_fill_light
opexprlanguage -s hscript $_obj_lights_fill_light
opuserdata -n '___Version___' -v '' $_obj_lights_fill_light
opuserdata -n '___toolcount___' -v '4' $_obj_lights_fill_light
opuserdata -n '___toolid___' -v 'object_arnold_light' $_obj_lights_fill_light

# Node $_obj_lights_key_light (Object/arnold_light)
set _obj_lights_key_light = `run("opadd -e -n -v arnold_light key_light")`
oplocate -x `$arg2 + -1.1175870853752379e-08` -y `$arg3 + 0.92936999999999825` $_obj_lights_key_light
opparm $_obj_lights_key_light  attenramp ( 3 )
chblockbegin
chadd -t 0 0 $_obj_lights_key_light ar_color_family
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear_family' -l p $_obj_lights_key_light/ar_color_family
chadd -t 0 0 $_obj_lights_key_light normalizearea
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_normalize")' $_obj_lights_key_light/normalizearea
chadd -t 0 0 $_obj_lights_key_light shadow_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cast_shadows")' $_obj_lights_key_light/shadow_type
chadd -t 0 0 $_obj_lights_key_light shadow_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_shadow_density")' $_obj_lights_key_light/shadow_intensity
chadd -t 0 0 $_obj_lights_key_light projection
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(strcmp(chs(\'light_type\'), \'distant\') == 0, 1, 0)' $_obj_lights_key_light/projection
chadd -t 0 0 $_obj_lights_key_light areasize1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizex"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, ch("ar_height"),     if(ch("ar_light_type") == 6, 1,     if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_lights_key_light/areasize1
chadd -t 0 0 $_obj_lights_key_light areasize2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizey"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, 1,     if(ch("ar_light_type") == 6, 1, if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_lights_key_light/areasize2
chadd -t 0 0 $_obj_lights_key_light conedelta
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_penumbra_angle")' $_obj_lights_key_light/conedelta
chadd -t 0 0 $_obj_lights_key_light coneangle
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cone_angle")-(2*ch("ar_penumbra_angle"))' $_obj_lights_key_light/coneangle
chadd -t 0 0 $_obj_lights_key_light light_contribdiff
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_diffuse") != 0' $_obj_lights_key_light/light_contribdiff
chadd -t 0 0 $_obj_lights_key_light light_contribspec
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_specular") != 0' $_obj_lights_key_light/light_contribspec
chadd -t 0 0 $_obj_lights_key_light light_colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorr")' $_obj_lights_key_light/light_colorr
chadd -t 0 0 $_obj_lights_key_light light_colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorg")' $_obj_lights_key_light/light_colorg
chadd -t 0 0 $_obj_lights_key_light light_colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorb")' $_obj_lights_key_light/light_colorb
chadd -t 0 0 $_obj_lights_key_light light_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_intensity")*(2^ch("ar_exposure"))' $_obj_lights_key_light/light_intensity
chadd -t 0 0 $_obj_lights_key_light coneenable
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 2, 1, 0)' $_obj_lights_key_light/coneenable
chadd -t 0 0 $_obj_lights_key_light light_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, 4),      if(ch("ar_light_type") == 1, 6,      if(ch("ar_light_type") == 2, 0,    if(ch("ar_light_type") == 3, 2,      if(ch("ar_light_type") == 4, 3,      if(ch("ar_light_type") == 5, 1,      if(ch("ar_light_type") == 6, 8,      if(ch("ar_light_type") == 7, 8,     if(ch("ar_light_type") == 8, 5, 8)))))))))' $_obj_lights_key_light/light_type
chblockend
opset -S on $_obj_lights_key_light
opparm $_obj_lights_key_light t ( 2.8252229618870706 2.6003966599752579 0.8785719827521955 ) r ( -33.957056476734387 72.607358189185859 -2.1280432147480143e-14 ) s ( 1 1 1 ) scale ( 1 ) folder1 ( 1 1 1 1 1 1 1 1 1 1 ) ar_light_type ( quad ) ar_color ( 1 0.90450006723403931 0.80900001525878906 ) ar_light_color_texture_refresh ( 0 ) ar_exposure ( 6.75 ) categories ( lb:arnold_light2 ) ar_camera ( 0 ) orthowidth ( 1.481481393178304 ) attenramp1c ( 1 1 1 ) attenramp2pos ( 0.89999997600000003 ) attenramp2c ( 1 1 1 ) attenramp3pos ( 1 )
chautoscope $_obj_lights_key_light +tx +ty +tz +rx +ry +rz +sx +sy +sz +dimmer
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_lights_key_light
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_lights_key_light
opexprlanguage -s hscript $_obj_lights_key_light
opuserdata -n '___Version___' -v '' $_obj_lights_key_light
opuserdata -n '___toolcount___' -v '4' $_obj_lights_key_light
opuserdata -n '___toolid___' -v 'object_arnold_light' $_obj_lights_key_light

# Node $_obj_lights_env_light (Object/arnold_light)
set _obj_lights_env_light = `run("opadd -e -n -v arnold_light env_light")`
oplocate -x `$arg2 + -1.1175870853752379e-08` -y `$arg3 + 2.7983999999999987` $_obj_lights_env_light
opparm $_obj_lights_env_light  attenramp ( 3 )
chblockbegin
chadd -t 0 0 $_obj_lights_env_light ar_color_family
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear_family' -l p $_obj_lights_env_light/ar_color_family
chadd -t 0 0 $_obj_lights_env_light normalizearea
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_normalize")' $_obj_lights_env_light/normalizearea
chadd -t 0 0 $_obj_lights_env_light shadow_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cast_shadows")' $_obj_lights_env_light/shadow_type
chadd -t 0 0 $_obj_lights_env_light shadow_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_shadow_density")' $_obj_lights_env_light/shadow_intensity
chadd -t 0 0 $_obj_lights_env_light projection
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(strcmp(chs(\'light_type\'), \'distant\') == 0, 1, 0)' $_obj_lights_env_light/projection
chadd -t 0 0 $_obj_lights_env_light areasize1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizex"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, ch("ar_height"),     if(ch("ar_light_type") == 6, 1,     if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_lights_env_light/areasize1
chadd -t 0 0 $_obj_lights_env_light areasize2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizey"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, 1,     if(ch("ar_light_type") == 6, 1, if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_lights_env_light/areasize2
chadd -t 0 0 $_obj_lights_env_light conedelta
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_penumbra_angle")' $_obj_lights_env_light/conedelta
chadd -t 0 0 $_obj_lights_env_light coneangle
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cone_angle")-(2*ch("ar_penumbra_angle"))' $_obj_lights_env_light/coneangle
chadd -t 0 0 $_obj_lights_env_light light_contribdiff
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_diffuse") != 0' $_obj_lights_env_light/light_contribdiff
chadd -t 0 0 $_obj_lights_env_light light_contribspec
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_specular") != 0' $_obj_lights_env_light/light_contribspec
chadd -t 0 0 $_obj_lights_env_light light_colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorr")' $_obj_lights_env_light/light_colorr
chadd -t 0 0 $_obj_lights_env_light light_colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorg")' $_obj_lights_env_light/light_colorg
chadd -t 0 0 $_obj_lights_env_light light_colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorb")' $_obj_lights_env_light/light_colorb
chadd -t 0 0 $_obj_lights_env_light light_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_intensity")*(2^ch("ar_exposure"))' $_obj_lights_env_light/light_intensity
chadd -t 0 0 $_obj_lights_env_light coneenable
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 2, 1, 0)' $_obj_lights_env_light/coneenable
chadd -t 0 0 $_obj_lights_env_light light_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, 4),      if(ch("ar_light_type") == 1, 6,      if(ch("ar_light_type") == 2, 0,    if(ch("ar_light_type") == 3, 2,      if(ch("ar_light_type") == 4, 3,      if(ch("ar_light_type") == 5, 1,      if(ch("ar_light_type") == 6, 8,      if(ch("ar_light_type") == 7, 8,     if(ch("ar_light_type") == 8, 5, 8)))))))))' $_obj_lights_env_light/light_type
chblockend
opset -S on $_obj_lights_env_light
opparm $_obj_lights_env_light r ( 0 71 0 ) s ( 1 1 1 ) scale ( 1 ) folder1 ( 1 1 1 1 1 1 1 1 1 1 ) ar_light_type ( skydome ) ar_light_color_type ( texture ) ar_format ( latlong ) ar_color ( 0.55259996652603149 0.72630000114440918 0.89999997615814209 ) ar_light_color_texture ( '$JOB/gen/hdri/290-hdri-skies-com.hdr' ) ar_light_color_texture_refresh ( 0 ) ar_intensity ( 0.5 ) categories ( lb:arnold_light1 ) ar_camera ( 0 ) attenramp1c ( 1 1 1 ) attenramp2pos ( 0.89999997600000003 ) attenramp2c ( 1 1 1 ) attenramp3pos ( 1 )
chautoscope $_obj_lights_env_light +tx +ty +tz +rx +ry +rz +sx +sy +sz +dimmer
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_lights_env_light
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_lights_env_light
opexprlanguage -s hscript $_obj_lights_env_light
opuserdata -n '___Version___' -v '' $_obj_lights_env_light
opuserdata -n '___toolcount___' -v '4' $_obj_lights_env_light
opuserdata -n '___toolid___' -v 'object_arnold_light' $_obj_lights_env_light

# Node $_obj_lights_rim_light (Object/arnold_light)
set _obj_lights_rim_light = `run("opadd -e -n -v arnold_light rim_light")`
oplocate -x `$arg2 + 2.6261999888241281` -y `$arg3 + 0.92936999999999825` $_obj_lights_rim_light
opparm $_obj_lights_rim_light  attenramp ( 3 )
chblockbegin
chadd -t 0 0 $_obj_lights_rim_light ar_color_family
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear_family' -l p $_obj_lights_rim_light/ar_color_family
chadd -t 0 0 $_obj_lights_rim_light normalizearea
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_normalize")' $_obj_lights_rim_light/normalizearea
chadd -t 0 0 $_obj_lights_rim_light shadow_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cast_shadows")' $_obj_lights_rim_light/shadow_type
chadd -t 0 0 $_obj_lights_rim_light shadow_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_shadow_density")' $_obj_lights_rim_light/shadow_intensity
chadd -t 0 0 $_obj_lights_rim_light projection
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(strcmp(chs(\'light_type\'), \'distant\') == 0, 1, 0)' $_obj_lights_rim_light/projection
chadd -t 0 0 $_obj_lights_rim_light areasize1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizex"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, ch("ar_height"),     if(ch("ar_light_type") == 6, 1,     if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_lights_rim_light/areasize1
chadd -t 0 0 $_obj_lights_rim_light areasize2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, ch("ar_point_radius")),     if(ch("ar_light_type") == 1, 1,     if(ch("ar_light_type") == 2, if(ch("ar_spot_radius")==0, 0, ch("ar_spot_radius")), if(ch("ar_light_type") == 3, ch("ar_quad_sizey"),     if(ch("ar_light_type") == 4, ch("ar_disk_radius")*2,     if(ch("ar_light_type") == 5, 1,     if(ch("ar_light_type") == 6, 1, if(ch("ar_light_type") == 7, 1,    if(ch("ar_light_type") == 8, 1, 1)))))))))' $_obj_lights_rim_light/areasize2
chadd -t 0 0 $_obj_lights_rim_light conedelta
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_penumbra_angle")' $_obj_lights_rim_light/conedelta
chadd -t 0 0 $_obj_lights_rim_light coneangle
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_cone_angle")-(2*ch("ar_penumbra_angle"))' $_obj_lights_rim_light/coneangle
chadd -t 0 0 $_obj_lights_rim_light light_contribdiff
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_diffuse") != 0' $_obj_lights_rim_light/light_contribdiff
chadd -t 0 0 $_obj_lights_rim_light light_contribspec
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_specular") != 0' $_obj_lights_rim_light/light_contribspec
chadd -t 0 0 $_obj_lights_rim_light light_colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorr")' $_obj_lights_rim_light/light_colorr
chadd -t 0 0 $_obj_lights_rim_light light_colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorg")' $_obj_lights_rim_light/light_colorg
chadd -t 0 0 $_obj_lights_rim_light light_colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_colorb")' $_obj_lights_rim_light/light_colorb
chadd -t 0 0 $_obj_lights_rim_light light_intensity
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_intensity")*(2^ch("ar_exposure"))' $_obj_lights_rim_light/light_intensity
chadd -t 0 0 $_obj_lights_rim_light coneenable
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 2, 1, 0)' $_obj_lights_rim_light/coneenable
chadd -t 0 0 $_obj_lights_rim_light light_type
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_light_type") == 0, if(ch("ar_point_radius")==0, 0, 4),      if(ch("ar_light_type") == 1, 6,      if(ch("ar_light_type") == 2, 0,    if(ch("ar_light_type") == 3, 2,      if(ch("ar_light_type") == 4, 3,      if(ch("ar_light_type") == 5, 1,      if(ch("ar_light_type") == 6, 8,      if(ch("ar_light_type") == 7, 8,     if(ch("ar_light_type") == 8, 5, 8)))))))))' $_obj_lights_rim_light/light_type
chblockend
opset -S on $_obj_lights_rim_light
opparm $_obj_lights_rim_light t ( -2.0864834736483169 2.268381619366826 -2.5006375378833572 ) r ( -24.570555397535987 218.92637688234859 0 ) s ( 1 1 1 ) scale ( 1 ) folder1 ( 1 1 1 1 1 1 1 1 1 1 ) ar_light_type ( quad ) ar_color ( 0.38069996237754822 0.72689998149871826 0.89999997615814209 ) ar_light_color_texture_refresh ( 0 ) ar_exposure ( 5 ) ar_spread ( 0.48699999999999999 ) ar_quad_size ( 0.25 0.25 ) categories ( lb:arnold_light2 ) ar_camera ( 0 ) orthowidth ( 1.481481393178304 ) attenramp1c ( 1 1 1 ) attenramp2pos ( 0.89999997600000003 ) attenramp2c ( 1 1 1 ) attenramp3pos ( 1 )
chautoscope $_obj_lights_rim_light +tx +ty +tz +rx +ry +rz +sx +sy +sz +dimmer
opcolor -c 0.97600001096725464 0.77999997138977051 0.2630000114440918 $_obj_lights_rim_light
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_lights_rim_light
opexprlanguage -s hscript $_obj_lights_rim_light
opuserdata -n '___Version___' -v '' $_obj_lights_rim_light
opuserdata -n '___toolcount___' -v '4' $_obj_lights_rim_light
opuserdata -n '___toolid___' -v 'object_arnold_light' $_obj_lights_rim_light
opcf ..
opcf $_obj_lights
oporder -e fill_light key_light env_light rim_light 
opcf ..
opset -p on $_obj_lights
opcf $arg1

# Node $_obj_ropnet1 (Object/ropnet)
set _obj_ropnet1 = `run("opadd -e -n -v ropnet ropnet1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 3.3857787199408031` $_obj_ropnet1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ropnet1
opexprlanguage -s hscript $_obj_ropnet1
opuserdata -n '___Version___' -v '17.0.352' $_obj_ropnet1
opuserdata -n '___toolcount___' -v '1' $_obj_ropnet1
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_ropnet1
opcf $_obj_ropnet1

# Node $_obj_ropnet1_pc_bake_rop1 (Driver/pc_bake_rop)
set _obj_ropnet1_pc_bake_rop1 = `run("opadd -e -n -v pc_bake_rop pc_bake_rop1")`
oplocate -x `$arg2 + 1.9416773504362215` -y `$arg3 + 6.5522367103424237` $_obj_ropnet1_pc_bake_rop1
chblockbegin
chadd -t 0 0 $_obj_ropnet1_pc_bake_rop1 f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_ropnet1_pc_bake_rop1/f1
chadd -t 0 0 $_obj_ropnet1_pc_bake_rop1 f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_ropnet1_pc_bake_rop1/f2
chblockend
opparm $_obj_ropnet1_pc_bake_rop1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ropnet1_pc_bake_rop1
opexprlanguage -s hscript $_obj_ropnet1_pc_bake_rop1
opuserdata -n '___Version___' -v '' $_obj_ropnet1_pc_bake_rop1
opuserdata -n '___toolcount___' -v '3' $_obj_ropnet1_pc_bake_rop1
opuserdata -n '___toolid___' -v 'object_cam' $_obj_ropnet1_pc_bake_rop1

# Node $_obj_ropnet1_pc_render_rop1 (Driver/pc_render_rop)
set _obj_ropnet1_pc_render_rop1 = `run("opadd -e -n -v pc_render_rop pc_render_rop1")`
oplocate -x `$arg2 + -2.8042050025049541` -y `$arg3 + 6.5522367103424237` $_obj_ropnet1_pc_render_rop1
opparm $_obj_ropnet1_pc_render_rop1  ar_aovs ( 0 )
chblockbegin
chadd -t 0 0 $_obj_ropnet1_pc_render_rop1 f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_ropnet1_pc_render_rop1/f1
chadd -t 0 0 $_obj_ropnet1_pc_render_rop1 f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_ropnet1_pc_render_rop1/f2
chblockend
opparm $_obj_ropnet1_pc_render_rop1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ropnet1_pc_render_rop1
opexprlanguage -s hscript $_obj_ropnet1_pc_render_rop1
opuserdata -n '___Version___' -v '' $_obj_ropnet1_pc_render_rop1
opuserdata -n '___toolcount___' -v '3' $_obj_ropnet1_pc_render_rop1
opuserdata -n '___toolid___' -v 'object_cam' $_obj_ropnet1_pc_render_rop1
opcf $_obj_ropnet1_pc_render_rop1

# Node $_obj_ropnet1_pc_render_rop1_arnold1 (Driver/arnold)
set _obj_ropnet1_pc_render_rop1_arnold1 = `run("opadd -e -n -v arnold arnold1")`
oplocate -x `$arg2 + 0.12031699999999999` -y `$arg3 + 4.4269400000000001` $_obj_ropnet1_pc_render_rop1_arnold1
opspareds '    parm {         name    "execute"         baseparm         label   "Render to Disk"         joinnext         export  none     }     parm {         name    "renderdialog"         baseparm         label   "Controls..."         nolabel         export  none     }     parm {         name    "trange"         baseparm         label   "Valid Frame Range"         export  none     }     parm {         name    "f"         baseparm         label   "Start/End/Inc"         export  none     }     parm {         name    "take"         baseparm         label   "Render with Take"         export  none     }     group {         name    "main6"         label   " Main "          groupsimple {             name    "folder_camera2"             label   "Camera"              parm {                 name    "camera"                 baseparm                 label   "Camera"                 export  none             }             groupsimple {                 name    "folder_subdivision2"                 label   "Subdivision"                  parm {                     name    "ar_subdiv_dicing_camera_enable"                     baseparm                     label   "Use Alternate Dicing Camera"                     nolabel                     joinnext                     export  none                 }                 parm {                     name    "ar_subdiv_dicing_camera"                     baseparm                     label   "Dicing Camera"                     export  none                 }                 parm {                     name    "ar_subdiv_frustum_culling"                     baseparm                     label   "Enable"                     nolabel                     joinnext                     export  none                 }                 parm {                     name    "ar_subdiv_frustum_padding"                     baseparm                     label   "Frustum Culling"                     export  none                 }             }          }          parm {             name    "target"             baseparm             label   "Render Target"             invisible             export  none         }         parm {             name    "sepparm"             baseparm             label   "Separator"             invisible             export  none         }         groupsimple {             name    "folder_objects2"             label   "Objects"              parm {                 name    "vobject"                 baseparm                 label   "Candidate Objects"                 export  none             }             parm {                 name    "forceobject"                 baseparm                 label   "Force Objects"                 export  none             }             parm {                 name    "excludeobject"                 baseparm                 label   "Exclude Objects"                 export  none             }             parm {                 name    "phantom_objects"                 baseparm                 label   "Forced Phantom"                 export  none             }             parm {                 name    "matte_objects"                 baseparm                 label   "Forced Matte"                 export  none             }         }          groupsimple {             name    "folder_shaders2"             label   "Shaders"              parm {                 name    "ar_environment"                 baseparm                 label   "Environment"                 export  none             }             parm {                 name    "ar_forced_materials"                 baseparm                 label   "Forced Materials"                 export  none             }             parm {                 name    "ar_shader_override"                 baseparm                 label   "Shader Override"                 export  none             }         }          parm {             name    "obj_light_sep"             baseparm             label   "Separator"             invisible             export  none         }         groupsimple {             name    "folder_lights2"             label   "Lights"              parm {                 name    "sololight"                 baseparm                 label   "Solo Light"                 export  none             }             parm {                 name    "alights"                 baseparm                 label   "Candidate Lights"                 export  none             }             parm {                 name    "forcelights"                 baseparm                 label   "Force Lights"                 export  none             }             parm {                 name    "excludelights"                 baseparm                 label   "Exclude Lights"                 export  none             }             parm {                 name    "soho_autoheadlight"                 baseparm                 label   "Headlight Creation"                 invisible                 export  none             }             parm {                 name    "light_fog_sep"                 baseparm                 label   "Separator"                 invisible                 export  none             }         }          parm {             name    "vfog"             baseparm             label   "Visible Fog"             invisible             export  none         }         parm {             name    "soho_viewport_menu"             baseparm             label   "Show in Viewport Menu"             export  none         }         parm {             name    "soho_initsim"             baseparm             label   "Initialize Simulation OPs"             export  none         }         parm {             name    "ar_render_selection_only"             baseparm             label   "Render Selection Only"             export  none         }         parm {             name    "ar_render_selection_others"             baseparm             label   "Render Others As"             export  none         }     }      group {         name    "main6_1"         label   "Properties"          parm {             name    "shop_propertiespath"             baseparm             label   "Default Properties"             export  none         }         parm {             name    "ar_user_options"             baseparm             label   "User Options"             joinnext             export  none         }         parm {             name    "ar_user_options_enable"             baseparm             label   "Enable"             export  none         }         group {             name    "folder0"             label   "Output"              parm {                 name    "ar_picture"                 label   "Output Picture"                 type    file                 default { "ip" }                 menureplace {                     [ "echo `pythonexprs(\\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBrender\')\\")`" ]                 }                 parmtag { "filechooser_mode" "write" }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "vm_picture"                 label   "Compat. Output Picture"                 type    string                 invisible                 default { [ "chs(\\"ar_picture\\")" hscript-expr ] }                 range   { 0 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "override_camerares"                 label   "Override Camera Resolution"                 type    toggle                 default { "0" }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "res_fraction"                 label   "Resolution Scale"                 type    string                 default { "specific" }                 hidewhen "{ override_camerares == 0 }"                 menu {                     "0.1"       "1/10 (One Tenth Resolution)"                     "0.2"       "1/5 (One Fifth Resolution)"                     "0.25"      "1/4 (Quarter Resolution)"                     "0.3333333" "1/3 (One Third Resolution)"                     "0.5"       "1/2 (Half Resolution)"                     "0.6666666" "2/3 (Two Thirds Resolution)"                     "0.75"      "3/4 (Three Quarter Resolution)"                     "specific"  "User Specified Resolution"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "res_override"                 label   "Resolution"                 type    intvector2                 joinnext                 size    2                 default { "640" "480" }                 hidewhen "{ override_camerares == 0 } { res_fraction != specific }"                 range   { -1 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "res_overrideMenu"                 label   "Choose Resolution"                 type    button                 nolabel                 default { "0" }                 hidewhen "{ override_camerares == 0 } { res_fraction != specific }"                 menumini {                     [ "echo `pythonexprs(\\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBres\')\\")`" ]                 }                 parmtag { "script_callback" "opparm . res_override ( `arg(\\"$script_value\\", 0)` `arg(\\"$script_value\\", 1)` aspect_override ( `arg(\\"$script_value\\", 2)` )" }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "aspect_override"                 label   "Pixel Aspect Ratio"                 type    float                 default { "1" }                 hidewhen "{ override_camerares == 0 }"                 range   { 0.05 2 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "my_sep"                 label   "Separator"                 type    separator                 default { "" }                 hidewhen "{ override_camerares == 0 }"             }             parm {                 name    "ar_overscan_enable"                 label   "Overscan"                 type    toggle                 default { "0" }                 help    "Enable rendered image overscan."             }             parm {                 name    "ar_denoise"                 label   "Denoise"                 type    toggle                 default { "0" }                 help    "Enable optix denoising on beauty AOV"                 hidewhen "{ ar_platform == darwin }"             }             parm {                 name    "ar_denoise_display"                 label   "Display denoised AOVs"                 type    toggle                 default { "0" }                 help    "Enable optix denoising AOV display.  Only original or denoised AOVs may be displayed together"                 hidewhen "{ ar_platform == darwin }"             }             parm {                 name    "ar_output_variance"                 label   "Output Variance AOV"                 type    toggle                 default { "0" }                 help    "Add an extra variance AOV to the beauty for arnold denoising.  If the AOVs N, Z, diffuse_albedo then they will be used to enhance the denoising."                 disablewhen "{ ar_picture_format != exr }"             }             parm {                 name    "ar_overscan"                 label   "Overscan Margins"                 type    intvector4                 size    4                 default { "0" "ch(\\"ar_overscanx\\")" "ch(\\"ar_overscanx\\")" "ch(\\"ar_overscanx\\")" }                 help    "Extend the render region by those amounts in pixels. EXR output will fully respect  the overscan region with differing data and display windows, but the other  image formats will simply enlarge the final image resolution to incorporate overscan since they cannot accommodate data outside the display area of the image."                 hidewhen "{ ar_overscan_enable == 0 }"                 range   { 0! 100 }             }             parm {                 name    "ar_overscan_label"                 label   " "                 type    label                 size    4                 default { "Top" "Bottom" "Left" "Right" }                 hidewhen "{ ar_overscan_enable == 0 }"             }             parm {                 name    "ar_overscan_separator"                 label   "Separator"                 type    separator                 default { "" }                 hidewhen "{ ar_overscan_enable == 0 }"             }             parm {                 name    "ar_picture_format"                 label   "Image Format"                 type    string                 joinnext                 default { "exr" }                 help    "Output image file format."                 menu {                     "exr"       "OpenEXR"                     "deepexr"   "Deep OpenEXR"                     "tiff"      "TIFF"                     "png"       "PNG"                     "jpeg"      "JPEG"                 }                 parmtag { "script_callback" "kwargs[\'node\'].parm(\'ar_exr_metadata\').hide(kwargs[\'script_value\'] not in (\'exr\', \'deepexr\'))" }                 parmtag { "script_callback_language" "python" }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_picture_tiling"                 label   "                Tiling"                 type    integer                 default { "0" }                 help    "Allows to save the image in scanline or tiled mode. It seems Scanline works better with composition packages like Nuke or Fusion."                 hidewhen "{ ar_picture_format != exr ar_picture_format != deepexr ar_picture_format != tiff }"                 menu {                     "0" "Scanline  "                     "1" "Tiled"                 }                 range   { 0 10 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_format"                 label   "Pixel Format"                 type    string                 joinnext                 default { "0" }                 help    "TIFF bit depth."                 hidewhen "{ ar_picture_format != tiff }"                 menu {                     "int8"      "Integer 8 bit "                     "int16"     "Integer 16 bit"                     "int32"     "Integer 32 bit"                     "float32"   "Float 32 bit"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_compression"                 label   " Compression"                 type    string                 default { "lzw" }                 help    "Specifies the compression mode of the TIFF file."                 hidewhen "{ ar_picture_format != tiff }"                 menu {                     "none"      "None"                     "lzw"       "LZW"                     "ccittrle"  "CCITT RLE"                     "zip"       "Zip"                     "packbits"  "PackBits"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_color_family"                 label   "Color Space"                 type    string                 joinnext                 default { "All" }                 help    "The output color family."                 hidewhen "{ ar_picture_format != tiff }"                 menu {                     [ "import htoa.ocio" ]                     [ "color_family_menu = htoa.ocio.colorFamilyMenu()" ]                     [ "color_space_menu = htoa.ocio.outputColorSpaceMenu(kwargs[\'node\'].parm(\'ar_tiff_color_family\').eval())" ]                     [ "if kwargs[\'node\'].parm(\'ar_tiff_color_space\').eval() not in color_space_menu:" ]                     [ "    kwargs[\'node\'].parm(\'ar_tiff_color_space\').set(\'auto\')" ]                     [ "return color_family_menu" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_color_space"                 label   "Color Space"                 type    string                 nolabel                 default { "auto" }                 help    "The output color space."                 hidewhen "{ ar_picture_format != tiff }"                 menu {                     [ "import htoa.ocio" ]                     [ "family = kwargs[\'node\'].parm(\'ar_tiff_color_family\').eval()" ]                     [ "return htoa.ocio.outputColorSpaceMenu(family)" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_png_format"                 label   "Pixel Format"                 type    string                 default { "0" }                 help    "PNG bit depth."                 hidewhen "{ ar_picture_format != png }"                 menu {                     "int8"  "Integer 8 bit "                     "int16" "Integer 16 bit"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_png_color_family"                 label   "Color Space"                 type    string                 joinnext                 default { "All" }                 help    "The output color family."                 hidewhen "{ ar_picture_format != png }"                 menu {                     [ "import htoa.ocio" ]                     [ "color_family_menu = htoa.ocio.colorFamilyMenu()" ]                     [ "color_space_menu = htoa.ocio.outputColorSpaceMenu(kwargs[\'node\'].parm(\'ar_png_color_family\').eval())" ]                     [ "if kwargs[\'node\'].parm(\'ar_png_color_space\').eval() not in color_space_menu:" ]                     [ "    kwargs[\'node\'].parm(\'ar_png_color_space\').set(\'auto\')" ]                     [ "return color_family_menu" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_png_color_space"                 label   "Color Space"                 type    string                 nolabel                 default { "auto" }                 help    "The output color space."                 hidewhen "{ ar_picture_format != png }"                 menu {                     [ "import htoa.ocio" ]                     [ "family = kwargs[\'node\'].parm(\'ar_png_color_family\').eval()" ]                     [ "return htoa.ocio.outputColorSpaceMenu(family)" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_compression"                 label   "Compression"                 type    string                 default { "zip" }                 help    "Specifies the compression mode of the EXR file:\\n\\n- None: Disables all compression.\\n\\n- Run Length Encoding (RLE): This is a basic form of compression that is comparable to that used by standard Targa files.\\n\\n- Zip (per scanline): Zip style compression applied to individual scanlines.\\n\\n- Zip (16 scanline blocks): Zip style compression applied to blocks of 16 scanlines at time. This tends to be the most effective style of compression to use with rendered images that do not have film grain applied.\\n\\n- PIZ: This uses a new combined wavelet / Huffman compression. This form of compression is quite effective when dealing with grainy images, and will often surpass any of the other options under grainy conditions.\\n\\n- PXR24: This form of compression from Pixar converts data to 24 bit then uses Zip compression. It is lossless for half and 32bit integer data and slightly lossy for 32bit float data.\\n\\n- B44: This form of compression is lossy for half data and stores 32bit data uncompressed.\\n\\n- B44A: An extension to B44 where areas of flat color are further compressed. Regular B44 compresses uniformly regardless of image content.\\n\\n- DWAA: JPEG-like lossy compression format contributed by DreamWorks Animation. Compresses 32 scanlines together.\\n\\n- DWAB: Same as DWAA, but compresses blocks of 256 scanlines."                 hidewhen "{ ar_picture_format != exr }"                 menu {                     "none"  "None                     "                     "rle"   "Run Length Encoding (RLE)"                     "zips"  "Zip (per scanline)"                     "zip"   "Zip (16 scanline blocks)"                     "piz"   "PIZ"                     "pxr24" "PXR24"                     "b44"   "B44"                     "b44a"  "B44A"                     "dwaa"  "DWAA"                     "dwab"  "DWAB"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_color_family"                 label   "Color Space"                 type    string                 joinnext                 default { "All" }                 help    "The output color family."                 hidewhen "{ ar_picture_format != exr }"                 menu {                     [ "import htoa.ocio" ]                     [ "color_family_menu = htoa.ocio.colorFamilyMenu(filter_linear=True)" ]                     [ "color_space_menu = htoa.ocio.outputColorSpaceMenu(kwargs[\'node\'].parm(\'ar_exr_color_family\').eval(), filter_linear=True)" ]                     [ "if kwargs[\'node\'].parm(\'ar_exr_color_space\').eval() not in color_space_menu:" ]                     [ "    kwargs[\'node\'].parm(\'ar_exr_color_space\').set(\'auto\')" ]                     [ "return color_family_menu" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_color_space"                 label   "Color Space"                 type    string                 nolabel                 default { "auto" }                 help    "The output color space."                 hidewhen "{ ar_picture_format != exr }"                 menu {                     [ "import htoa.ocio" ]                     [ "family = kwargs[\'node\'].parm(\'ar_exr_color_family\').eval()" ]                     [ "return htoa.ocio.outputColorSpaceMenu(family, filter_linear=True)" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_jpeg_color_family"                 label   "Color Space"                 type    string                 joinnext                 default { "All" }                 help    "The output color family."                 hidewhen "{ ar_picture_format != jpeg }"                 menu {                     [ "import htoa.ocio" ]                     [ "color_family_menu = htoa.ocio.colorFamilyMenu()" ]                     [ "color_space_menu = htoa.ocio.outputColorSpaceMenu(kwargs[\'node\'].parm(\'ar_jpeg_color_family\').eval())" ]                     [ "if kwargs[\'node\'].parm(\'ar_jpeg_color_space\').eval() not in color_space_menu:" ]                     [ "    kwargs[\'node\'].parm(\'ar_jpeg_color_space\').set(\'auto\')" ]                     [ "return color_family_menu" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_jpeg_color_space"                 label   "Color Space"                 type    string                 nolabel                 default { "auto" }                 help    "The output color space."                 hidewhen "{ ar_picture_format != jpeg }"                 menu {                     [ "import htoa.ocio" ]                     [ "family = kwargs[\'node\'].parm(\'ar_jpeg_color_family\').eval()" ]                     [ "return htoa.ocio.outputColorSpaceMenu(family)" ]                     language python                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_jpeg_quality"                 label   "JPEG Quality"                 type    integer                 default { "100" }                 help    "JPEG compression quality."                 hidewhen "{ ar_picture_format != jpeg }"                 range   { 1! 100! }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_half_precision"                 label   "Half Precision"                 type    toggle                 default { "0" }                 help    "Store pixels as half-floats instead of floats."                 hidewhen "{ ar_picture_format != exr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_preserve_layer_name"                 label   "Preserve Layer Name"                 type    toggle                 default { "0" }                 help    "If checked, will store the AOV in a layer different with the name of the AOV, and not the RGB."                 hidewhen "{ ar_picture_format != exr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_exr_autocrop"                 label   "Autocrop"                 type    toggle                 default { "0" }                 help    "Automatically crop uniform borders."                 disablewhen "{ ar_picture_tiling != 0 }"                 hidewhen "{ ar_picture_format != exr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_picture_output_padded"                 label   "Pad Crop Region"                 type    toggle                 default { "0" }                 help    "Defines a padding around the crop region."                 hidewhen "{ ar_picture_format == exr } { ar_picture_format == deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_picture_dither"                 label   "Dithering"                 type    toggle                 default { "1" }                 help    "Applies a small amount of noise to the final pixel values. This helps minimize banding artifacts apparent on 8-bit output image file formats such as TIFF8."                 hidewhen "{ ar_picture_format == exr } { ar_picture_format == deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_unpremult_alpha"                 label   "Unpremultiply Alpha"                 type    toggle                 default { "0" }                 help    "Specifies whether the main RGB channel is premultiplied with the alpha channel (the default) or not. It only works with 8-bit output images."                 hidewhen "{ ar_picture_format != tiff }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_tiff_skip_alpha"                 label   "Skip Alpha"                 type    toggle                 default { "0" }                 help    "Skip the alpha channel of RGBA outputs."                 hidewhen "{ ar_picture_format != tiff }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_subpixel_merge"                 label   "Merge Subpixel Samples"                 type    toggle                 default { "1" }                 help    "Nearby subpixel samples will be merged."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_beauty_tolerance"                 label   "Beauty Tolerance"                 type    log                 default { "0.01" }                 help    "Beauty tolerance over which samples will not be merged together."                 disablewhen "{ ar_deepexr_subpixel_merge == 0 }"                 hidewhen "{ ar_picture_format != deepexr }"                 range   { 0! 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_alpha_tolerance"                 label   "Alpha Tolerance"                 type    log                 default { "0.01" }                 help    "Alpha tolerance over which samples will not be merged together."                 disablewhen "{ ar_deepexr_subpixel_merge == 0 }"                 hidewhen "{ ar_picture_format != deepexr }"                 range   { 0! 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_depth_tolerance"                 label   "Depth Tolerance"                 type    log                 default { "0.01" }                 help    "Depth tolerance over which samples will not be merged together."                 disablewhen "{ ar_deepexr_subpixel_merge == 0 }"                 hidewhen "{ ar_picture_format != deepexr }"                 range   { 0! 10 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_beauty_half_precision"                 label   "Half Precision for Beauty"                 type    toggle                 default { "0" }                 help    "Store beauty layer as half-floats instead of floats."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_alpha_half_precision"                 label   "Half Precision for Alpha"                 type    toggle                 default { "0" }                 help    "Store alpha layer as half-floats instead of floats."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_depth_half_precision"                 label   "Half Precision for Depth"                 type    toggle                 default { "0" }                 help    "Store depth layer as half-floats instead of floats."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_use_RGB_opacity"                 label   "RGB Opacity"                 type    toggle                 default { "0" }                 help    "Write out RGB opacity, rather than just alpha. Nuke can read these images but cannot display them."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_deepexr_enable_filtering"                 label   "Filter Beauty"                 type    toggle                 default { "1" }                 help    "If set to false disable any filtering operation on this layer\'s raw data -- useful for normals or ID layers."                 hidewhen "{ ar_picture_format != deepexr }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_picture_append"                 label   "Append"                 type    toggle                 default { "0" }                 help    "Append to existing tiles when re-rendering the same image."                 disablewhen "{ ar_picture_tiling != 1 }"                 hidewhen "{ ar_picture_format != exr ar_picture_format != deepexr ar_picture_format != tiff }"                 parmtag { "spare_category" "Output" }             }             multiparm {                 name    "ar_exr_metadata"                 label    "Metadata"                 parmtag { "spare_category" "Output" }                  parm {                     name    "ar_exr_metadata_key#"                     label   "Key"                     type    string                     joinnext                     default { "metadata#" }                     help    "Metadata key name."                     range   { 0 1 }                 }                 parm {                     name    "ar_exr_metadata_type#"                     label   "   Type"                     type    ordinal                     default { "4" }                     help    "Metadata type."                     menu {                         "int"       "Integer"                         "float"     "Float"                         "point2"    "Point2"                         "matrix"    "Matrix"                         "string"    "String"                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_exr_metadata_int_value#"                     label   "Value"                     type    integer                     default { "0" }                     help    "Metadata integer value."                     hidewhen "{ ar_exr_metadata_type# != int }"                     range   { 0 10 }                 }                 parm {                     name    "ar_exr_metadata_float_value#"                     label   "Value"                     type    float                     default { "0" }                     help    "Metadata float value."                     hidewhen "{ ar_exr_metadata_type# != float }"                     range   { 0 10 }                 }                 parm {                     name    "ar_exr_metadata_point2_value#"                     label   "Value"                     type    vector2                     size    2                     default { "0" "0" }                     help    "Metadata Point2 value."                     hidewhen "{ ar_exr_metadata_type# != point2 }"                     range   { -1 1 }                 }                 parm {                     name    "ar_exr_metadata_matrix_value#"                     label   "Value"                     type    float                     size    16                     default { "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" }                     help    "Metadata matrix value."                     hidewhen "{ ar_exr_metadata_type# != matrix }"                     range   { 0 10 }                 }                 parm {                     name    "ar_exr_metadata_string_value#"                     label   "Value"                     type    string                     default { "" }                     help    "Metadata string value."                     hidewhen "{ ar_exr_metadata_type# != string }"                     range   { 0 1 }                 }             }              parm {                 name    "my_sep_output1"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_pixel_filter_type"                 label   "Pixel Filter"                 type    string                 default { "gaussian_filter" }                 help    "The filter type used for averaging individual subpixel samples into a final pixel color. The default gaussian-2.0 is an excellent filter, you will rarely need anything other than gaussian."                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 menu {                     "blackman_harris_filter"    "Blackman-Harris"                     "box_filter"                "Box"                     "catrom_filter"             "Catmull-Rom"                     "closest_filter"            "Closest"                     "farthest_filter"           "Farthest"                     "gaussian_filter"           "Gaussian"                     "heatmap_filter"            "Heatmap"                     "mitnet_filter"             "Mitchell-Netravali"                     "sinc_filter"               "Sinc"                     "triangle_filter"           "Triangle"                     "variance_filter"           "Variance"                     "contour_filter"            "Contour"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_variance_filter_weights"                 label   "Variance Filter Weights"                 type    string                 default { "box" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != variance_filter }"                 menu {                     "blackman_harris"   "Blackman-Harris"                     "box"               "Box"                     "catrom"            "Catmull-Rom"                     "gaussian"          "Gaussian"                     "mitnet"            "Mitchell-Netravali"                     "sinc"              "Sinc"                     "triangle"          "Triangle"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_width"                 label   "Filter Width"                 type    float                 default { "2" }                 help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type == blackman_harris_filter } { ar_pixel_filter_type == sinc_filter } { ar_pixel_filter_type == farthest_filter } { ar_pixel_filter_type == closest_filter } { ar_pixel_filter_type == box_filter } { ar_pixel_filter_type == catrom_filter } { ar_pixel_filter_type == heatmap_filter } { ar_pixel_filter_type == mitnet_filter }"                 range   { 0! 6 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_width_blackman_harris"                 label   "Filter Width"                 type    float                 default { "3" }                 help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != blackman_harris_filter }"                 range   { 0! 6 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_width_sinc"                 label   "Filter Width"                 type    float                 default { "6" }                 help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != sinc_filter }"                 range   { 0! 10 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_farthest_domain"                 label   "Farthest Domain"                 type    string                 default { "first_hit" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != farthest_filter }"                 menu {                     "first_hit" "First Hit                   "                     "all_hits"  "All Hits"                 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_variance_scalar_mode"                 label   "Variance Scalar Mode"                 type    toggle                 default { "0" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != variance_filter }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_heatmap_minimum"                 label   "Heatmap Minimum"                 type    float                 default { "0" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != heatmap_filter }"                 range   { 0 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_pixel_filter_heatmap_maximum"                 label   "Heatmap Maximum"                 type    float                 default { "1" }                 help    "TODO"                 disablewhen "{ ar_picture_format == deepexr ar_deepexr_enable_filtering == 0 }"                 hidewhen "{ ar_pixel_filter_type != heatmap_filter }"                 range   { 0 1 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "my_sep_output2"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_AA_sample_clamp_enable"                 label   "Clamp Camera Samples"                 type    toggle                 default { "0" }                 help    "When enabled, pixel samples will be clamped to the specified maximum value. This can make it easier to anti-alias certain high-dynamic range effects such as bright motion blurred specular streaks (at the cost of reduced contrast)."                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_AA_sample_clamp_affects_aovs"                 label   "Clamp Camera Samples in AOVs"                 type    toggle                 default { "0" }                 help    "When enabled, pixel samples will be clamped to the specified maximum value. This can make it easier to anti-alias certain high-dynamic range effects such as bright motion blurred specular streaks (at the cost of reduced contrast)."                 disablewhen "{ ar_AA_sample_clamp_enable != 1 }"                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_AA_sample_clamp"                 label   "Camera Sample Clamp"                 type    float                 default { "10" }                 help    "Enabling this control, pixel samples will be clamped to the specified maximum value. This can make it easier to anti-alias certain high-dynamic range effects such as bright motion blurred specular streaks (at the cost of reduced contrast)."                 disablewhen "{ ar_AA_sample_clamp_enable == 0 }"                 range   { 1e-05! 100 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_indirect_sample_clamp"                 label   "Indirect Sample Clamp"                 type    float                 default { "10" }                 help    "Works similarly to AA_sample_clamp, but only affects indirect light, so that specular highlights from direct lighting are preserved. This makes it possible to clamp fireflies more aggressively without affecting the final render significantly. It is set to 10.0 by default. Lower values result in more aggressive noise reduction, possibly at the expense of dynamic range."                 range   { 0! 20 }                 parmtag { "spare_category" "Output" }             }             parm {                 name    "my_sep_output3"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_enable_aov_composition"                 label   "Enable AOV Composition"                 type    toggle                 invisible                 default { "1" }                 help    "Globally control whether any capable AOVs will automatically compose through semi-opaque surfaces rendered using auto-transparency. AOVs which are composable (i.e., which have opacity-blending capability) are provided in the standard, lambert, and hair shaders."                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_multicam"                 label   "Enable Multicam"                 type    toggle                 invisible                 default { "1" }                 help    "Helper flag for HtoA to determine if muticam is supported in the render context. IPR contexts disable multicam."                 parmtag { "spare_category" "Output" }             }             parm {                 name    "ar_aov_shaders"                 label   "AOV Shaders"                 type    oppath                 default { "" }                 help    "AOV shader will be evaluated after the regular surface shader. With this it is possible to add shaders to set specific AOVs without modifying the original shader tree, such as the popular Cryptomatte automatic ID matte shader."                 parmtag { "opfilter" "!!SHOP!!" }                 parmtag { "oprelative" "." }                 parmtag { "spare_category" "Output" }             }             multiparm {                 name    "ar_aovs"                 label    "AOVs"                 parmtag { "spare_category" "Output" }                  parm {                     name    "ar_enable_aov#"                     label   "Enable AOV #"                     type    toggle                     nolabel                     joinnext                     default { "1" }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_label#"                     label   "AOV #"                     type    string                     default { "" }                     help    "The AOV name"                     disablewhen "{ ar_enable_aov# == 0 }"                     menureplace {                         [ "import htoa.properties" ]                         [ "return htoa.properties.aovMenu()" ]                         language python                     }                     parmtag { "script_callback" "opparm . vm_vextype_plane$script_multiparm_index ( `ifs(index(\\",Pz,Af,Render_Time,Op_Id,Prim_Id,level,specularlevel,diffuselevel,direct_samples,indirect_samples,\\", \\",$script_value,\\")>=0, \\"float\\", \\"vector\\")` )" }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_exr_enable_layer_name#"                     label   "Enable Layer Name #"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 1 ar_aov_picture_format# != beauty ar_aov_picture_format# != exr ar_aov_picture_format# != deepexr } { ar_aov_separate# == 0 ar_picture_format == tiff } { ar_aov_separate# == 0 ar_picture_format == jpg } { ar_aov_separate# == 0 ar_picture_format == png } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == tiff } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == jpg } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == png }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_exr_layer_name#"                     label   "Layer Name"                     type    string                     default { "" }                     help    "The EXR layer name.  If this is the empty string then the ar_aov_label is used as the exr layer name as usual."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_exr_enable_layer_name# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# != beauty ar_aov_picture_format# != exr ar_aov_picture_format# != deepexr } { ar_aov_separate# == 0 ar_picture_format == tiff } { ar_aov_separate# == 0 ar_picture_format == jpg } { ar_aov_separate# == 0 ar_picture_format == png } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == tiff } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == jpg } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == png }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_lpe_enable#"                     label   "Enable Light Path Expression"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Enable a custom light path expression for this AOV."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_lpe#"                     label   "Light Path Expr."                     type    string                     default { "" }                     help    "Custom light path expression for this AOV."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_lpe_enable# == 0 } { ar_aov_camera# == camera }"                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.lpeMenu()" ]                         language python                     }                     parmtag { "script_callback" "kwargs[\'parm\'].set(kwargs[\'script_value\'].replace(\' \', \'\'))" }                     parmtag { "script_callback_language" "python" }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_camera_enable#"                     label   "Enable AOV Camera"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Enable using a separable camera for this AOV."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_camera#"                     label   "Camera"                     type    oppath                     default { "" }                     help    "The camera to use for this AOV. When the camera is different from the main camera, you need to specify a separate file to render the AOV to. Also, the AOV will be ignored in interactive rendering contexts."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_camera_enable# == 0 }"                     parmtag { "opfilter" "!!OBJ/CAMERA!!" }                     parmtag { "oprelative" "." }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_separate#"                     label   "Output to Separate File"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Save this deep raster plane to a different disk file than the main image."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_separate_file#"                     label   "Separate File"                     type    file                     default { "" }                     help    "Save this deep raster plane to a different disk file than the main image.\\nThis does *not* work when rendering to mplay."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 } { ar_aov_camera# == camera }"                     menureplace {                         [ "echo `pythonexprs(\\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBrender\')\\")`" ]                     }                     parmtag { "filechooser_mode" "write" }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_denoise_enable#"                     label   "Denoise"                     type    toggle                     default { "0" }                     help    "Enable optix denoiser for this AOV."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" }"                     hidewhen "{ ar_platform == darwin }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_picture_format#"                     label   "Image Format"                     type    string                     joinnext                     default { "beauty" }                     help    "AOV image file format."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 }"                     menu {                         "beauty"    "Same as Beauty "                         "exr"       "OpenEXR"                         "deepexr"   "Deep OpenEXR"                         "tiff"      "TIFF"                         "png"       "PNG"                         "jpeg"      "JPEG"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_type#"                     label   "  Type"                     type    string                     default { "RGB" }                     help    "The type associated with the AOV"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" }"                     menu {                         "RGB"       "RGB"                         "RGBA"      "RGBA"                         "BOOL"      "Boolean"                         "INT"       "Integer"                         "UINT"      "Unsigned Integer"                         "FLOAT"     "Float"                         "VECTOR"    "Vector"                         "VECTOR2"   "Vector 2D"                         "NODE"      "Node Pointer"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_exr_precision#"                     label   "Precision"                     type    string                     default { "beauty" }                     help    "EXR precision."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# != beauty ar_aov_picture_format# != exr ar_aov_picture_format# != deepexr } { ar_aov_separate# == 0 ar_picture_format == tiff } { ar_aov_separate# == 0 ar_picture_format == jpg } { ar_aov_separate# == 0 ar_picture_format == png } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == tiff } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == jpg } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == png }"                     menu {                         "beauty"    "Same as Beauty  "                         "half"      "Float 16 bit"                         "float"     "Float 32 bit"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_tiff_format#"                     label   "Pixel Format"                     type    string                     default { "beauty" }                     help    "TIFF bit depth."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 }"                     hidewhen "{ ar_aov_picture_format# != tiff }"                     menu {                         "beauty"    "Same as Beauty "                         "int8"      "Integer 8 bit "                         "int16"     "Integer 16 bit"                         "int32"     "Integer 32 bit"                         "float32"   "Float 32 bit"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_png_format#"                     label   "Pixel Format"                     type    string                     default { "beauty" }                     help    "PNG bit depth."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 }"                     hidewhen "{ ar_aov_picture_format# != png }"                     menu {                         "beauty"    "Same as Beauty "                         "int8"      "Integer 8 bit "                         "int16"     "Integer 16 bit"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter#"                     label   "Pixel Filter"                     type    string                     joinnext                     default { "beauty" }                     help    "The filter type used for averaging individual subpixel samples into a final pixel color. The default gaussian-2.0 is an excellent filter, you will rarely need anything other than gaussian."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     menu {                         "beauty"                    "Same as Beauty "                         "blackman_harris_filter"    "Blackman-Harris"                         "box_filter"                "Box"                         "catrom_filter"             "Catmull-Rom"                         "closest_filter"            "Closest"                         "farthest_filter"           "Farthest"                         "gaussian_filter"           "Gaussian"                         "heatmap_filter"            "Heatmap"                         "mitnet_filter"             "Mitchell-Netravali"                         "sinc_filter"               "Sinc"                         "triangle_filter"           "Triangle"                         "variance_filter"           "Variance"                         "contour_filter"            "Contour"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_deep_enable_filtering#"                     label   "Filter Deep AOV"                     type    toggle                     default { "1" }                     help    "If set to false disable any filtering operation on this layer\'s raw data -- useful for normals or ID layers."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format != deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# != deepexr ar_aov_picture_format# != beauty } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format != deepexr }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_variance_filter_weights#"                     label   "Variance Filter Weights"                     type    string                     default { "box" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != variance_filter }"                     menu {                         "blackman_harris"   "Blackman-Harris"                         "box"               "Box"                         "catrom"            "Catmull-Rom"                         "gaussian"          "Gaussian"                         "mitnet"            "Mitchell-Netravali"                         "sinc"              "Sinc"                         "triangle"          "Triangle"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_width#"                     label   "Width"                     type    float                     default { "2" }                     help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_enable_aov# == 0 } { ar_aov_pixel_filter# == beauty } { ar_aov_pixel_filter# == blackman_harris_filter } { ar_aov_pixel_filter# == sinc_filter } { ar_aov_pixel_filter# == farthest_filter } { ar_aov_pixel_filter# == closest_filter } { ar_aov_pixel_filter# == box_filter } { ar_aov_pixel_filter# == catrom_filter } { ar_aov_pixel_filter# == heatmap_filter } { ar_aov_pixel_filter# == mitnet_filter }"                     range   { 0! 6 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_width_blackman_harris#"                     label   "Width"                     type    float                     default { "3" }                     help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != blackman_harris_filter }"                     range   { 0! 6 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_width_sinc#"                     label   "Width"                     type    float                     default { "6" }                     help    "The width of the subpixel sample averaging filter, in pixels. For circularly symmetric filters, this is the diameter of the filter\'s support."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != sinc_filter }"                     range   { 0! 10 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_farthest_domain#"                     label   "Farthest Domain"                     type    string                     default { "first_hit" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != farthest_filter }"                     menu {                         "first_hit" "First Hit                   "                         "all_hits"  "All Hits"                     }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_variance_scalar_mode#"                     label   "Variance Scalar Mode"                     type    toggle                     default { "0" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != variance_filter }"                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_heatmap_minimum#"                     label   "Heatmap Minimum"                     type    float                     default { "0" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != heatmap_filter }"                     range   { 0 1 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_pixel_filter_heatmap_maximum#"                     label   "Heatmap Maximum"                     type    float                     default { "1" }                     help    "TODO"                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format == deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# == deepexr ar_aov_deep_enable_filtering# == 0 } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format == deepexr ar_aov_deep_enable_filtering# == 0 }"                     hidewhen "{ ar_aov_pixel_filter# != heatmap_filter }"                     range   { 0 1 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_deep_merge_tolerance#"                     label   "Deep AOV Tolerance"                     type    log                     default { "0.01" }                     help    "Tolerance over which the AOV samples will not be merged together."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_deepexr_subpixel_merge == 0 } { ar_aov_separate# == 0 ar_picture_format != deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# != deepexr ar_aov_picture_format# != beauty } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format != deepexr }"                     range   { 0! 10 }                     parmtag { "spare_category" "Output" }                 }                 parm {                     name    "ar_aov_deep_half_precision#"                     label   "Half Precision for Deep AOV"                     type    toggle                     default { "0" }                     help    "Use 16-bit floats for this AOV filtering."                     disablewhen "{ ar_enable_aov# == 0 } { ar_aov_label# == \\"\\" } { ar_aov_separate# == 0 ar_picture_format != deepexr } { ar_aov_separate# == 1 ar_aov_picture_format# != deepexr ar_aov_picture_format# != beauty } { ar_aov_separate# == 1 ar_aov_picture_format# == beauty ar_picture_format != deepexr }"                     parmtag { "spare_category" "Output" }                 }             }              parm {                 name    "ar_overridden"                 label   "Overridden Parameters"                 type    toggle                 invisible                 default { "0" }                 help    "Parameters have been overridden by one of the configuration files in $HH/soho/overrides."                 range   { 0 1 }                 parmtag { "spare_category" "Output" }             }         }          group {             name    "folder0_1"             label   "Sampling"              parm {                 name    "ar_AA_samples"                 label   "Camera (AA)"                 type    integer                 default { "3" }                 help    "Controls the amount of rays per pixel that will be traced from the camera. The higher the number of samples, the better the anti-aliasing quality, and the longer the render times. The exact number of rays per pixel is the square of this value. For example, an AA Samples value of 3 means 3x3 = 9 pixel samples."                 range   { 1 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_enable_adaptive_sampling"                 label   "Adaptive Sampling"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Enable adaptive AA samples based on the variance level, according to the minimum and maximum AA samples."                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_AA_samples_max"                 label   "Max. Camera (AA)"                 type    integer                 default { "8" }                 help    "When adaptive sampling is enabled, this control the maximum amount of rays per pixel that will be traced from the camera. The exact number of rays per pixel is the square of this value. Note that setting this parameter to a value lower or equal to AA samples will disable adaptive sampling."                 disablewhen "{ ar_enable_adaptive_sampling == 0 }"                 range   { 1 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_AA_samples_extra"                 label   "Extra AA"                 type    integer                 invisible                 default { [ "ch(\\"ar_AA_samples_max\\") - ch(\\"ar_AA_samples\\")" hscript-expr ] }                 help    "Maximum extra AA levels. For UI logic purposes only."                 range   { 0 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_AA_adaptive_threshold"                 label   "Adaptive Threshold"                 type    log                 default { "0.05" }                 help    "The variance-based threshold. Adapative sampling will stop if the variance is below this level."                 disablewhen "{ ar_enable_adaptive_sampling == 0 } { ar_AA_samples_extra <= 0 }"                 range   { 0.0001 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_diffuse_samples"                 label   "Diffuse"                 type    integer                 default { "2" }                 help    "The number of hemispherical rays fired for indirect diffuse GI shader evaluations. Increase this number to reduce the diffuse GI noise. The exact number of hemispherical rays is the square of this value."                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_specular_samples"                 label   "Specular"                 type    integer                 default { "2" }                 help    "The number of BRDF rays fired for indirect glossy specular shader evaluations. Increase this number to reduce the noise in soft/blurry reflections. The exact number of rays is the square of this value."                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_transmission_samples"                 label   "Transmission"                 type    integer                 default { "2" }                 help    "The number of samples used to simulate the microfacet-based glossy transmission evaluations."                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_sss_samples"                 label   "SSS"                 type    integer                 default { "2" }                 help    "The number of SSS lighting samples (direct and indirect) that will be taken to estimate lighting within a radius of the point being shaded. Higher values produce a cleaner solution, but will take longer to render."                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_GI_volume_samples"                 label   "Volume Indirect"                 type    integer                 default { "2" }                 help    "The number of indirect diffuse samples for volumes. Higher values reduce the noise, but will take longer to render."                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_indirect_specular_blur"                 label   "Indirect Specular Blur"                 type    integer                 default { "1" }                 help    "Sets indirect specular blurring to reduce caustic noise. Setting to zero gives the most accurate but also noisy renders, while higher values blur caustics to reduce noise."                 range   { 0! 10 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_AA_seed"                 label   "Noise Seed"                 type    integer                 default { "$F" }                 help    "The noise pattern seed for AA sampling."                 range   { 0 9999 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_enable_progressive_render"                 label   "Progressive Render"                 type    toggle                 default { "0" }                 help    "Enable progressive sampling."                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_sss_use_autobump"                 label   "Autobump for SSS"                 type    toggle                 default { "0" }                 help    "Take autobump into account for SSS calculations. This will result in more details in the SSS, at the cost of a slower render."                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "info_samples_spacer"                 label   " "                 type    label                 default { "" }                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "info_samples_header"                 label   " "                 type    label                 default { "Estimated Rays / Pixel" }                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_camera"                 label   "Camera (AA) Rays"                 type    string                 default { [ "__import__(\'htoa\').properties.sampleInfoCamera()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_diffuse"                 label   "Diffuse Rays"                 type    string                 size    2                 default { [ "__import__(\'htoa\').properties.sampleInfoDiffuse()" python ] [ "__import__(\'htoa\').properties.sampleInfoDiffuseDepth()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_specular"                 label   "Specular Rays"                 type    string                 size    2                 default { [ "__import__(\'htoa\').properties.sampleInfoSpecular()" python ] [ "__import__(\'htoa\').properties.sampleInfoSpecularDepth()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_transmission"                 label   "Transmission Rays"                 type    string                 size    2                 default { [ "__import__(\'htoa\').properties.sampleInfoTransmission()" python ] [ "__import__(\'htoa\').properties.sampleInfoTransmissionDepth()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }             parm {                 name    "ar_info_samples_total"                 label   "Total Rays (no lights)"                 type    string                 size    2                 default { [ "__import__(\'htoa\').properties.sampleInfoTotal()" python ] [ "__import__(\'htoa\').properties.sampleInfoTotalDepth()" python ] }                 disablewhen "{ 1 != 1 }"                 range   { 0 1 }                 parmtag { "spare_category" "Sampling" }             }         }          group {             name    "folder0_2"             label   "Ray Depth"              parm {                 name    "ar_GI_total_depth"                 label   "Total"                 type    integer                 default { "10" }                 help    "Specifies the total maximum recursion depth of any ray in the scene."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_GI_diffuse_depth"                 label   "Diffuse"                 type    integer                 default { "1" }                 help    "The maximum number of times a diffuse ray can bounce."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_GI_specular_depth"                 label   "Specular"                 type    integer                 default { "1" }                 help    "The maximum number of times a ray can be glossily reflected."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_GI_transmission_depth"                 label   "Transmission"                 type    integer                 default { "8" }                 help    "The maximum number of times a ray can be refracted."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_GI_volume_depth"                 label   "Volume"                 type    integer                 default { "0" }                 help    "The maximum number of times a ray can bounce for multiple scattering in a volume."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_auto_transparency_depth"                 label   "Transparency"                 type    integer                 default { "10" }                 help    "The number of allowed transparency hits. With 0 objects will be treated as opaque."                 range   { 0! 16 }                 parmtag { "spare_category" "Ray Depth" }             }             parm {                 name    "ar_low_light_threshold"                 label   "Low Light Threshold"                 type    float                 default { "0.001" }                 help    "Specify an illumination value below which Arnold will skip firing shadow rays to each light source, reducing rendering time."                 range   { 0! 0.1 }                 parmtag { "spare_category" "Ray Depth" }             }         }          group {             name    "folder0_3"             label   "Motion Blur"              parm {                 name    "ar_mb_xform_enable"                 label   "Enable Transformation Blur"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Enable motion blur."                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys"                 label   "Transform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result specially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."                 disablewhen "{ ar_mb_xform_enable == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_enable"                 label   "Enable Deformation Blur"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Motion blur will take into account geometry deformation. It should only be enabled when objects in the scene change shape quickly enough, since this option uses more memory and renders slower."                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys"                 label   "Deform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for object points. Just like with transformation motion keys, increasing this value allows curved motion paths to be rendered more accurately, at the expense of using more memory."                 disablewhen "{ ar_mb_dform_enable == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             groupsimple {                 name    "group_shutter"                 label   "Geometry Shutter"                  parm {                     name    "ar_mb_shutter"                     label   "Shutter Position"                     type    string                     default { "center" }                     help    "Decide where on the frame time the blur will be evaluated. The default is centered."                     disablewhen "{ ar_mb_xform_enable == 0 ar_mb_dform_enable == 0 }"                     menu {                         "start"     "Start On Frame"                         "center"    "Center On Frame"                         "end"       "End On Frame"                         "custom"    "Custom Shutter"                     }                     parmtag { "spare_category" "Motion Blur" }                 }                 parm {                     name    "ar_mb_shutter_length"                     label   "Shutter Length"                     type    float                     default { "0.5" }                     disablewhen "{ ar_mb_xform_enable == 0 ar_mb_dform_enable == 0 }"                     hidewhen "{ ar_mb_shutter == custom }"                     range   { 0 1 }                     parmtag { "spare_category" "Motion Blur" }                 }                 parm {                     name    "ar_mb_shutter_range"                     label   "Shutter Start/End"                     type    vector2                     size    2                     default { "-0.25" "0.25" }                     disablewhen "{ ar_mb_xform_enable == 0 ar_mb_dform_enable == 0 }"                     hidewhen "{ ar_mb_shutter != custom }"                     range   { -1 1 }                     parmtag { "spare_category" "Motion Blur" }                 }                 parm {                     name    "info_motion_vectors"                     label   "Label"                     type    label                     nolabel                     default { "To generate motion vectors, enable Instantaneous Shutter on the camera." }                     parmtag { "spare_category" "Motion Blur" }                 }             }          }          group {             name    "folder0_4"             label   "Textures"              parm {                 name    "ar_texture_max_sharpen"                 label   "Sharpness"                 type    float                 invisible                 default { "1.5" }                 help    "Sharpens textures at the expense of increased file I/O. The theoretical optimum setting for sharpest results is to set this to AA_samples, but under most practical situations where texture I/O must be controlled, setting this to around 1.5 already gives sharp results at a moderate cost."                 range   { 1 10 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_diffuse_blur"                 label   "Diffuse Blur"                 type    log                 default { "0.03125" }                 help    "Blurring of texture for lookups by diffuse rays."                 range   { 0! 1 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_specular_blur"                 label   "Specular Blur"                 type    log                 default { "0" }                 help    "Blurring of texture for lookups by specular rays. When using the Cook-Torrance BRDF, textures are automatically blurred and this parameter is ignored."                 range   { 0! 1 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_max_memory_MB"                 label   "Cache Size (MB)"                 type    float                 default { "2048" }                 help    "Texture cache size in MB."                 disablewhen "{ ar_texture_caching_enable == 0 }"                 range   { 0! 4096 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_max_open_files"                 label   "Max. Open Textures"                 type    integer                 default { "0" }                 help    "The maximum number of files that the texture system keeps open at any given time to avoid excessive closing and re-opening of files when caching individual texture tiles. A value of 0 means the number is automatically computed by Arnold. Increasing this number may result in slightly better texture caching performance. On the other hand, if this value is higher than the maximum number of concurrently open files supported by the operating system (e.g. Linux vs Windows), some texture lookups may fail and return red."                 disablewhen "{ ar_texture_max_memory_MB == 0 }"                 range   { 0! 4096 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_accept_untiled"                 label   "Accept Untiled"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "High-resolution untiled texture maps are very inefficient to render, because they must be loaded entirely into memory as soon as the renderer needs to access a single texel. For that reason, you may want to use this flag to enforce that all your texture maps are already tiled in advance (perhaps by using a preprocessing tool like maketx). When this flag is enabled, any attempt at loading an untiled file will produce an error and abort the renderer."                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_autotile"                 label   "Auto-tile"                 type    integer                 default { "64" }                 help    "This is the size of the tiles when using auto-tiling. Bigger values mean less frequent texture loads, but use more memory. Use existing Tiled files: If .tx file with the same name of the texture is found, the renderer will use it."                 disablewhen "{ ar_texture_accept_untiled == 0 }"                 range   { 2! 512 }                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_accept_unmipped"                 label   "Accept Unmipped"                 type    toggle                 default { "1" }                 help    "Unmipped texture maps are inefficient to render, because filtering to reduce aliasing has to be done on the fly. For that reason, you may want to use this flag to enforce that all your texture maps are already mipmapped in advance (perhaps by using a preprocessing tool like maketx). When this flag is enabled, any attempt at loading an unmipped file will produce an error and abort the renderer. By default this flag is enabled, because most of the popular image formats such as JPEG don\'t support tiling."                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_automip"                 label   "Auto-mipmap"                 type    toggle                 default { "1" }                 help    "If a texture map file is not natively mipmapped (e.g. a JPEG file), enabling this option will trigger the automatic generation of a mipmap that will be stored in memory for the duration of the render. This mipmap generation increases render time, specially for scenes with many high resolution textures. This is in contrast to file formats that natively support mipmapping, such as TIFF and EXR, where the mipmap is generated only once (with a preprocessing tool like maketx). Use with care."                 disablewhen "{ ar_texture_accept_unmipped == 0 }"                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_auto_maketx"                 label   "Auto-generate TX Textures"                 type    toggle                 default { "1" }                 help    "Automatically generate or update the .tx texture corresponding to the texture files. If an up to date version already exists, the generation will be skipped. The .tx textures will be linearized according to the colorspace selected on the image shader."                 parmtag { "spare_category" "Textures" }             }             parm {                 name    "ar_texture_use_existing_tx"                 label   "Use Existing TX Textures"                 type    toggle                 default { "1" }                 help    "If an untiled texture is requested (e.g. concrete.jpg) but a .tx file with the same filename is found (e.g. concrete.tx), the renderer will load the .tx file instead."                 parmtag { "spare_category" "Textures" }             }         }          group {             name    "folder0_5"             label   "Baking"              parm {                 name    "ar_baking_enable"                 label   "Enable Texture Baking"                 type    toggle                 default { "0" }                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_resolution"                 label   "Resolution"                 type    intlog                 default { "256" }                 help    "Texture baking resolution, we are using square textures."                 disablewhen "{ ar_baking_enable == 0 }"                 range   { 1 1024 }                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_extend_edges"                 label   "Extend Edges"                 type    toggle                 default { "1" }                 help    "Extend the edges"                 disablewhen "{ ar_baking_enable == 0 }"                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_normal_offset"                 label   "Surface Offset"                 type    float                 default { "0.001" }                 help    "Ray cast from the mesh with the given offset along the normal"                 disablewhen "{ ar_baking_enable == 0 }"                 range   { 0 10 }                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_uv_offset"                 label   "UV Offset"                 type    float                 size    2                 default { "0" "0" }                 disablewhen "{ ar_baking_enable == 0 }"                 range   { 0 10 }                 parmtag { "spare_category" "Baking" }             }             parm {                 name    "ar_baking_uv_scale"                 label   "UV Scale"                 type    float                 size    2                 default { "1" "1" }                 disablewhen "{ ar_baking_enable == 0 }"                 range   { 0 10 }                 parmtag { "spare_category" "Baking" }             }             multiparm {                 name    "ar_baking_meshes"                 label    "Meshes"                 disablewhen "{ ar_baking_enable == 0 }"                 parmtag { "spare_category" "Baking" }                  parm {                     name    "ar_enable_mesh#"                     label   "Enable Mesh #"                     type    toggle                     nolabel                     joinnext                     default { "1" }                     disablewhen "{ ar_baking_enable == 0 }"                     parmtag { "spare_category" "Baking" }                 }                 parm {                     name    "ar_baking_mesh#"                     label   "Mesh #"                     type    oppath                     default { "" }                     disablewhen "{ ar_baking_enable == 0 } { ar_enable_mesh# == 0 }"                     parmtag { "opfilter" "!!OBJ!!" }                     parmtag { "oprelative" "." }                     parmtag { "spare_category" "Baking" }                 }                 parm {                     name    "ar_baking_uvset#"                     label   "UV Set #"                     type    string                     default { "" }                     disablewhen "{ ar_baking_enable == 0 } { ar_enable_mesh# == 0 }"                     menureplace {                         [ "[\'\', \'Default  (uv)\', \'uv2\', \'UV Set 2\', \'uv3\', \'UV Set 3\', \'uv4\', \'UV Set 4\', \'uv5\', \'UV Set 5\', \'uv6\', \'UV Set 6\', \'uv7\', \'UV Set 7\', \'uv8\', \'UV Set 8\' ]" ]                         language python                     }                     parmtag { "spare_category" "Baking" }                 }             }          }          group {             name    "folder0_6"             label   "System"              parm {                 name    "ar_platform"                 label   "Platform"                 type    string                 invisible                 default { [ "__import__(\'sys\').platform" python ] }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_force_threads"                 label   "Force Threads"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Allow manual setting the number of render threads instead of using an optimal number based on the number of hardware processing cores."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_threads"                 label   "Render Threads"                 type    integer                 default { "0" }                 help    "If ar_force_threads is enabled, this will let you manually set the number of rendering threads. The default of 0 will use all processing cores and negative values mean use all but that many cores. For example, threads=-2 means use all but 2 cores, while threads=2 means only use 2 cores. This is useful when you want to leave one or two cores for other tasks. This parameter is never written in an .ass file by design, and will only affect interactive or batch renders."                 disablewhen "{ ar_force_threads == 0 }"                 range   { -255! 256! }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_thread_priority"                 label   "Thread Priority"                 type    string                 default { "lowest" }                 help    "Specifies the thread priority for rendering (Windows only)."                 menu {                     "lowest"    "Lowest"                     "low"       "Low"                     "medium"    "Medium"                     "high"      "High"                 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_pin_threads"                 label   "Pin Threads"                 type    string                 default { "auto" }                 help    "Arnold can pin threads on Linux, so they don\'t jump between multiple processors. This can improve scalability in modern machines, multiple processors. It can be set to off, on or auto. By default is set to auto, meaning that if the number of threads is more than half the number of logical cores on the machine, Arnold will pin the threads."                 menu {                     "off"   "Off"                     "on"    "On"                     "auto"  "Auto"                 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_bucket_scanning"                 label   "Bucket Scanning"                 type    string                 default { "spiral" }                 help    "Specifies the spatial order in which the image buckets (i.e. threads) will be processed. By default, buckets start in the center of the image and proceed outwards in a spiral pattern."                 menu {                     "top"       "Top"                     "left"      "Left"                     "random"    "Random"                     "spiral"    "Spiral"                     "hilbert"   "Hilbert"                 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_bucket_size"                 label   "Bucket Size"                 type    integer                 default { "64" }                 help    "The size of the image buckets. The default size is 64x64 pixels, which is a good compromise; bigger buckets use more memory, while smaller buckets may perform redundant computations and filtering and thus render slower but give initial faster feedback."                 range   { 16! 256 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive"                 label   "      Progressive AA  "                 type    toggle                 joinnext                 default { "1" }                 help    "Apply an iterative progressive render to the region tool, starting from the lowest selected AA until the current AA samples value."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive_AA_3"                 label   "8x8"                 type    toggle                 joinnext                 default { "1" }                 help    "One sample per 8x8 pixels (-3)."                 disablewhen "{ ar_progressive == 0 }"                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive_AA_2"                 label   "4x4"                 type    toggle                 joinnext                 default { "0" }                 help    "One sample per 4x4 pixels (-2)."                 disablewhen "{ ar_progressive == 0 }"                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive_AA_1"                 label   "2x2"                 type    toggle                 joinnext                 default { "1" }                 help    "One sample per 2x2 pixels (-1)."                 disablewhen "{ ar_progressive == 0 }"                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_progressive_AA_0"                 label   "1x1"                 type    toggle                 default { "0" }                 help    "One sample per pixel (0)."                 disablewhen "{ ar_progressive == 0 }"                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_plugin_searchpath"                 label   "Plugin Path"                 type    file                 default { "" }                 help    "Specifies the directory where to search for Arnold plugins such as shaders, procedurals, volumes, etc."                 parmtag { "filechooser_mode" "read" }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_procedural_searchpath"                 label   "Procedural Path"                 type    file                 default { "" }                 help    "Specifies the directory where to search for procedural files."                 parmtag { "filechooser_mode" "read" }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_texture_searchpath"                 label   "Texture Path"                 type    file                 default { "" }                 help    "Specifies the directory where to search for Arnold texture maps and IES files. This works in conjunction with the \\"Save Texture Paths\\" option in the ASS tab."                 parmtag { "filechooser_mode" "read" }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_mplay_label"                 label   "MPlay Session"                 type    string                 default { "" }                 help    "When an MPlay render is triggered, it will only output to MPlay sessions with that label. If none exist, it will create an MPlay session with that label. This is incredibly useful for users with multiple workspaces, to avoid constantly hunt for an open MPlay window and move it to their active workspace."                 menureplace {                     [ "__import__(\'htoa\').properties.mplayLabelMenu()" ]                     language python                 }                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_create_intermediate_directories"                 label   "Create Intermediate Directories"                 type    toggle                 default { "1" }                 help    "Create intermediate parent directories when rendering to image or ASS files."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_flush_sop_cache"                 label   "Flush SOP Cache"                 type    toggle                 default { "1" }                 help    "Flush SOP cache after each frame to reclaim memory."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_pick_material"                 label   "Pick Material in Render View"                 type    toggle                 default { "1" }                 help    "Generate the Op_Id AOV to enable material picking in the Render View with Ctrl+LMB. The ID built-in AOV will be repurposed for this and will not be available in the Render View context."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_inherit_properties"                 label   "Inherit Properties"                 type    toggle                 default { "0" }                 help    "Enable properties inheritance for geometry at the expense of translation time."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_parallel_node_init"                 label   "Parallel Node Initialization"                 type    toggle                 default { "1" }                 help    "Initialization and update of scene nodes can now be multi-threaded. This can significantly lower the scene preparation time in complex scenes with many objects, shaders or lights."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_enable_bucket_work_sharing"                 label   "Bucket Work Sharing"                 type    toggle                 default { "1" }                 help    "Share work among all threads for the last remaining buckets."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_abort_on_error"                 label   "Abort On Error"                 type    toggle                 default { "1" }                 help    "Aborts rendering as soon as an error is detected. This is the recommended setting. In general, you should not ignore important error messages, or you\'ll risk crashes, rendering artifacts and undefined behaviour."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_abort_on_license_fail"                 label   "Abort On License Fail"                 type    toggle                 default { "0" }                 help    "Aborts rendering if when the render starts the license is not detected. If not set and no license is found, images will be watermarked."                 parmtag { "spare_category" "System" }             }             parm {                 name    "ar_skip_license_check"                 label   "Render with Watermarks (Skip License Check)"                 type    toggle                 default { "0" }                 help    "Do not try to check out a license and thus render with watermarks."                 parmtag { "spare_category" "System" }             }             groupsimple {                 name    "group_cm"                 label   "Color Management"                  parm {                     name    "ar_color_space_singleton"                     label   "Color Space ROP"                     type    toggle                     default { "0" }                     help    "Specify that this ROP should be used to define the color spaces for TX conversion."                     parmtag { "script_callback" "__import__(\'htoa.colorspace\').colorspace.setColorSpaceRop(kwargs[\'node\'], kwargs[\'parm\'].eval())" }                     parmtag { "script_callback_language" "python" }                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_ocio_enabled"                     label   "OCIO Enabled"                     type    toggle                     invisible                     default { [ "bool(__import__(\'htoa.ocio\').ocio.has_config)" python ] }                     help    "If OCIO was enabled and successfully loaded this will be true."                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_color_family_narrow"                     label   "LDR Color Space"                     type    string                     joinnext                     default { [ "import htoa.ocio\\nreturn htoa.ocio.default_sRGB_family" python ] }                     help    "If it exists in the OCIO config, this should be set to the name of the `sRGB` color space. This is used internally for input and output color spaces in `auto` mode for low dynamic range images. If set by the user, this color space is also used as a reference to detect the rendering color space gamut and white point."                     menu {                         [ "import htoa.ocio" ]                         [ "color_family_menu = htoa.ocio.colorFamilyMenu(view_display=False, filter_non_linear=True)" ]                         [ "color_space_menu = htoa.ocio.narrowColorSpaceMenu(kwargs[\'node\'].parm(\'ar_color_family_narrow\').eval())" ]                         [ "if color_space_menu and kwargs[\'node\'].parm(\'ar_color_space_narrow\').eval() not in color_space_menu:" ]                         [ "    kwargs[\'node\'].parm(\'ar_color_space_narrow\').set(color_space_menu[0])" ]                         [ "return color_family_menu" ]                         language python                     }                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_color_space_narrow"                     label   "ar_color_space_narrow"                     type    string                     nolabel                     default { [ "import htoa.ocio\\nreturn htoa.ocio.default_sRGB" python ] }                     help    "If it exists in the OCIO config, this should be set to the name of the `sRGB` color space. This is used internally for input and output color spaces in `auto` mode for low dynamic range images. If set by the user, this color space is also used as a reference to detect the rendering color space gamut and white point."                     menu {                         [ "import htoa.ocio" ]                         [ "family = kwargs[\'node\'].parm(\'ar_color_family_narrow\').eval()" ]                         [ "return htoa.ocio.narrowColorSpaceMenu(family)" ]                         language python                     }                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_color_family_linear"                     label   "Rendering Color Space"                     type    string                     joinnext                     default { [ "import htoa.ocio\\nreturn htoa.ocio.default_linear_family" python ] }                     help    "This is the default linear color space that Arnold will use as its rendering color space. Arnold\'s default color space is `sRGB Linear` but this can correspond to any linear color space if needed. If chromaticities for this linear color space can be guessed or are user specified certain spectral effects will take them into account, but not other adaptations for albedos, transparencies, etc are applied."                     menu {                         [ "import htoa.ocio" ]                         [ "color_family_menu = htoa.ocio.colorFamilyMenu(view_display=False, filter_linear=True)" ]                         [ "color_space_menu = htoa.ocio.renderColorSpaceMenu(kwargs[\'node\'].parm(\'ar_color_family_linear\').eval())" ]                         [ "if color_space_menu and kwargs[\'node\'].parm(\'ar_color_space_linear\').eval() not in color_space_menu:" ]                         [ "    kwargs[\'node\'].parm(\'ar_color_space_linear\').set(color_space_menu[0])" ]                         [ "return color_family_menu" ]                         language python                     }                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_color_space_linear"                     label   "ar_color_space_linear"                     type    string                     nolabel                     default { [ "import htoa.ocio\\nreturn htoa.ocio.default_linear" python ] }                     help    "This is the default linear color space that Arnold will use as its rendering color space. Arnold\'s default color space is `sRGB Linear` but this can correspond to any linear color space if needed. If chromaticities for this linear color space can be guessed or are user specified certain spectral effects will take them into account, but not other adaptations for albedos, transparencies, etc are applied."                     menu {                         [ "import htoa.ocio" ]                         [ "family = kwargs[\'node\'].parm(\'ar_color_family_linear\').eval()" ]                         [ "return htoa.ocio.renderColorSpaceMenu(family)" ]                         language python                     }                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_linear_chromaticities"                     label   "Custom Chromaticities"                     type    toggle                     default { "0" }                     help    "Specify render color space chromaticities. If they are not specified they will be gathered from the OCIO configuration."                     hidewhen "{ ar_ocio_enabled == 0 }"                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_chromaticity_red"                     label   "Red Primary"                     type    float                     size    2                     default { "0.64" "0.33" }                     help    "Chromaticity (x,y) of the red primary."                     hidewhen "{ ar_linear_chromaticities == 0 } { ar_ocio_enabled == 0 }"                     range   { 0 10 }                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_chromaticity_green"                     label   "Green Primary"                     type    float                     size    2                     default { "0.3" "0.6" }                     help    "Chromaticity (x,y) of the green primary."                     hidewhen "{ ar_linear_chromaticities == 0 } { ar_ocio_enabled == 0 }"                     range   { 0 10 }                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_chromaticity_blue"                     label   "Blue Primary"                     type    float                     size    2                     default { "0.15" "0.06" }                     help    "Chromaticity (x,y) of the blue primary."                     hidewhen "{ ar_linear_chromaticities == 0 } { ar_ocio_enabled == 0 }"                     range   { 0 10 }                     parmtag { "spare_category" "System" }                 }                 parm {                     name    "ar_chromaticity_white"                     label   "White Point"                     type    float                     size    2                     default { "0.3127" "0.329" }                     help    "Chromaticity (x,y) of the white point."                     hidewhen "{ ar_linear_chromaticities == 0 } { ar_ocio_enabled == 0 }"                     range   { 0 10 }                     parmtag { "spare_category" "System" }                 }             }              groupsimple {                 name    "group_device"                 label   "OptiX Denoiser"                 hidewhen "{ ar_platform == darwin }"                  groupsimple {                     name    "group_auto_gpu"                     label   "Automatic Device Selection"                     hidewhen "{ ar_platform == darwin }"                      parm {                         name    "ar_gpu_default_names"                         label   "Device Names"                         type    string                         default { "*" }                         help    "Select GPU names with this filter"                         hidewhen "{ ar_platform == darwin }"                         parmtag { "spare_category" "System" }                     }                     parm {                         name    "ar_gpu_default_min_memory_MB"                         label   "Min. Memory (MB)"                         type    integer                         default { "512" }                         help    "Select GPU names with at least this amount of memory (MB)"                         hidewhen "{ ar_platform == darwin }"                         range   { 0! 2048 }                         parmtag { "spare_category" "System" }                     }                 }                  groupsimple {                     name    "group_manual_gpu"                     label   "Manual Device Selection"                     hidewhen "{ ar_platform == darwin }"                      parm {                         name    "ar_manual_device_selection"                         label   "Enable Manual Device Selection"                         type    toggle                         default { "0" }                         help    "Choose whether to select devices manually"                         hidewhen "{ ar_platform == darwin }"                         parmtag { "spare_category" "System" }                     }                     parm {                         name    "ar_device_selection"                         label   "Device Selection"                         type    string                         default { "" }                         help    "GPU device selection"                         hidewhen "{ ar_manual_device_selection == 0 } { ar_platform == darwin }"                         menutoggle {                             [ "import htoa.device" ]                             [ "return htoa.device.gpuDeviceMenu()" ]                             language python                         }                         parmtag { "spare_category" "System" }                     }                 }              }          }          group {             name    "folder0_7"             label   "Diagnostics"              parm {                 name    "ar_log_file_enable"                 label   "Log File"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Log to file"                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_file"                 label   "Log to File"                 type    file                 default { "" }                 help    "Specifies the output path for Arnold log files."                 disablewhen "{ ar_log_file_enable == 0 }"                 parmtag { "filechooser_mode" "write" }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_verbosity"                 label   "Log Verbosity"                 type    string                 joinnext                 default { "warnings" }                 help    "Specifies the verbosity level and whether log messages are sent to the console or written to a file."                 menu {                     "warnings"  "Warnings Only"                     "info"      "Info"                     "detailed"  "Detailed"                     "debug"     "Debug"                 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_max_warnings"                 label   "   Max. Warnings"                 type    integer                 default { "5" }                 help    "Limits the number of warning messages that are sent to the console."                 range   { 0! 1000 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_console_enable"                 label   "Log to Console"                 type    toggle                 default { "1" }                 help    "Log to console."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_stats_file_enable"                 label   "Stats File"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Log stats to file"                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_stats_file"                 label   "Stats File Path"                 type    file                 default { "$HIP/arnold_stats.json" }                 help    "Specifies the output path for the Arnold stats file."                 disablewhen "{ ar_stats_file_enable == 0 }"                 parmtag { "filechooser_mode" "write" }                 parmtag { "filechooser_pattern" "*.json" }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_stats_mode"                 label   "Stats Mode"                 type    integer                 default { "1" }                 menu {                     "0" "Overwrite"                     "1" "Append"                 }                 range   { 0 10 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_profile_file_enable"                 label   "Profile"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Log profile to file"                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_profile_file"                 label   "Profile File Path"                 type    file                 default { "$HIP/arnold_profile.json" }                 help    "Specifies the output path for the Arnold profile file."                 disablewhen "{ ar_profile_file_enable == 0 }"                 parmtag { "filechooser_mode" "write" }                 parmtag { "filechooser_pattern" "*.json" }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_texture_per_file_stats"                 label   "Detailed Texture Statistics"                 type    toggle                 default { "1" }                 help    "Enable per file texture statistics."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_log_plugins"                 label   "Detailed Plugins Information"                 type    toggle                 default { "0" }                 help    "Show details about plugins loaded."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "my_sep_diagnostics1"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_ignore_operators"                 label   "Ignore Operators"                 type    toggle                 default { "0" }                 help    "Ignore operator graph."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_textures"                 label   "Ignore Textures"                 type    toggle                 default { "0" }                 help    "Ignore all textures when rendering."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_shaders"                 label   "Ignore Shaders"                 type    toggle                 default { "0" }                 help    "Ignore all shaders when rendering. By default Arnold will render with a simple \\"N dot eye\\" shader."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_atmosphere"                 label   "Ignore Atmosphere"                 type    toggle                 default { "0" }                 help    "Ignore all atmospheric shaders."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_lights"                 label   "Ignore Lights"                 type    toggle                 default { "0" }                 help    "Ignore all light sources."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_shadows"                 label   "Ignore Shadows"                 type    toggle                 default { "0" }                 help    "Ignore shadows from all light sources."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_subdivision"                 label   "Ignore Subdivision"                 type    toggle                 default { "0" }                 help    "No objects will be subdivided."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_displacement"                 label   "Ignore Displacement"                 type    toggle                 default { "0" }                 help    "Displacements will be ignored."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_bump"                 label   "Ignore Bump"                 type    toggle                 default { "0" }                 help    "Bump mapping will be ignored."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_smoothing"                 label   "Ignore Normal Smoothing"                 type    toggle                 default { "0" }                 help    "Polygon normals will not be smoothed, resulting in a faceted appearance."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_dof"                 label   "Ignore Depth of Field"                 type    toggle                 default { "0" }                 help    "Ignore depth of field effects."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_sss"                 label   "Ignore Sub-Surface Scattering"                 type    toggle                 default { "0" }                 help    "Ignore Subsurface Scattering calculations."                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_ignore_motion_blur"                 label   "Ignore Motion Blur"                 type    toggle                 default { "0" }                 help    "Ignore motion blur effects."                 disablewhen "{ ar_mb_xform_enable == 0 ar_mb_dform_enable == 0 }"                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_reference_time"                 label   "Reference Time"                 type    float                 default { "0" }                 help    "When disabling motion blur with ignore_motion_blur, the frame-relative reference time will be used instead of the exact frame."                 disablewhen "{ ar_mb_xform_enable == 0 ar_mb_dform_enable == 0 } { ar_ignore_motion_blur == 0 }"                 range   { -1 1 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "my_sep_diagnostics2"                 label   "Separator"                 type    separator                 default { "" }             }             parm {                 name    "ar_error_color_bad_texture"                 label   "Bad Texture Color"                 type    color                 size    3                 default { "1" "0" "0" }                 help    "Color to use for bad textures."                 range   { 0 1 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_error_color_bad_pixel"                 label   "NaN Pixel Color"                 type    color                 size    3                 default { "0" "0" "1" }                 help    "Color to use for bad pixels (NaNs)."                 range   { 0 1 }                 parmtag { "spare_category" "Diagnostics" }             }             parm {                 name    "ar_error_color_bad_shader"                 label   "Bad Shader Color"                 type    color                 size    3                 default { "1" "0" "1" }                 help    "Color to use for bad shaders."                 range   { 0 1 }                 parmtag { "spare_category" "Diagnostics" }             }         }      }      group {         name    "main6_2"         label   "Archive"         hidewhentab "{ ar_ass_export_authorized == 0 }"          parm {             name    "ar_ass_export_enable"             baseparm             label   "Export ASS File"             nolabel             joinnext             export  none         }         parm {             name    "ar_ass_file"             baseparm             label   "Export ASS File"             export  none         }         parm {             name    "ar_node_prefix_enable"             baseparm             label   "Enable Node Prefix"             nolabel             joinnext             export  none         }         parm {             name    "ar_node_prefix"             baseparm             label   "Node Prefix"             export  none         }         parm {             name    "ar_node_suffix_enable"             baseparm             label   "Enable Node Suffix"             nolabel             joinnext             export  none         }         parm {             name    "ar_node_suffix"             baseparm             label   "Node Suffix"             export  none         }         parm {             name    "ar_ass_export_authorized"             baseparm             label   "Authorize Exporting ASS Files"             invisible             export  none         }         parm {             name    "ar_binary_ass"             baseparm             label   "Binary Encoding"             export  none         }         parm {             name    "ar_ass_export_options"             baseparm             label   "Export Options"             export  none         }         parm {             name    "ar_ass_export_color_managers"             baseparm             label   "Export Color Managers"             export  none         }         parm {             name    "ar_ass_export_cameras"             baseparm             label   "Export Cameras"             export  none         }         parm {             name    "ar_ass_export_lights"             baseparm             label   "Export Lights"             export  none         }         parm {             name    "ar_ass_export_shapes"             baseparm             label   "Export Shapes"             export  none         }         parm {             name    "ar_ass_export_shaders"             baseparm             label   "Export Shaders"             export  none         }         parm {             name    "ar_ass_export_shader_assignments"             baseparm             label   "Export Shader Assignments"             export  none         }         parm {             name    "ar_ass_export_operators"             baseparm             label   "Export Operators"             export  none         }         parm {             name    "ar_ass_export_overrides"             baseparm             label   "Export Overrides"             export  none         }         parm {             name    "ar_ass_export_drivers"             baseparm             label   "Export Output Drivers"             export  none         }         parm {             name    "ar_ass_export_filters"             baseparm             label   "Export Pixel Filters"             export  none         }         parm {             name    "ar_export_asstoc"             baseparm             label   "Export .asstoc File"             export  none         }         parm {             name    "ar_prepend_htoa_paths"             baseparm             label   "Prepend Plugin Paths"             export  none         }         parm {             name    "ar_ass_expand_procedurals"             baseparm             label   "Expand Procedurals"             export  none         }     }      group {         name    "main6_3"         label   "Scripts"          parm {             name    "tprerender"             baseparm             label   "tprerender"             nolabel             joinnext             export  none         }         parm {             name    "prerender"             baseparm             label   "Pre-Render"             joinnext             export  none         }         parm {             name    "lprerender"             baseparm             label   "lprerender"             nolabel             export  none         }         parm {             name    "tpreframe"             baseparm             label   "tpreframe"             nolabel             joinnext             export  none         }         parm {             name    "preframe"             baseparm             label   "Pre-Frame"             joinnext             export  none         }         parm {             name    "lpreframe"             baseparm             label   "lpreframe"             nolabel             export  none         }         parm {             name    "tpostframe"             baseparm             label   "tpostframe"             nolabel             joinnext             export  none         }         parm {             name    "postframe"             baseparm             label   "Post-Frame"             joinnext             export  none         }         parm {             name    "lpostframe"             baseparm             label   "lpostframe"             nolabel             export  none         }         parm {             name    "tpostrender"             baseparm             label   "tpostrender"             nolabel             joinnext             export  none         }         parm {             name    "postrender"             baseparm             label   "Post-Render"             joinnext             export  none         }         parm {             name    "lpostrender"             baseparm             label   "lpostrender"             nolabel             export  none         }     }      group {         name    "main6_4"         label   "SOHO"         invisibletab          parm {             name    "soho_program"             baseparm             label   "SOHO Program"             export  none         }         parm {             name    "soho_outputmode"             baseparm             label   "SOHO Output Mode"             export  none         }         parm {             name    "soho_pipecmd"             baseparm             label   "Command"             export  none         }         parm {             name    "soho_diskfile"             baseparm             label   "Script Disk File"             export  none         }         parm {             name    "soho_errormode"             baseparm             label   "Error Mode"             export  none         }         parm {             name    "soho_shopstyle"             baseparm             label   "SOHO SHOP Style"             export  none         }         parm {             name    "soho_precision"             baseparm             label   "Float Precision"             export  none         }         parm {             name    "soho_indentstep"             baseparm             label   "Indent Step"             export  none         }         parm {             name    "soho_almostzero"             baseparm             label   "Almost Zero"             export  none         }         parm {             name    "soho_multiframe"             baseparm             label   "Multi-frame mode"             export  none         }         parm {             name    "soho_safename"             baseparm             label   "Safe Object names"             export  none         }         parm {             name    "soho_ipr_support"             baseparm             label   "SOHO IPR Support"             export  none         }         parm {             name    "soho_foreground"             baseparm             label   "Block Until Render Completes"             export  none         }     }      parm {         name    "renderpreview"         baseparm         label   "Render to MPlay"         invisible         joinnext         export  none     }     parm {         name    "executebackground"         baseparm         label   "Render to Disk in Background"         invisible         export  none     }     parm {         name    "ar_ass_absolute_texture_paths"         baseparm         label   "Absolute Texture Paths"         export  none     }     parm {         name    "ar_ass_absolute_procedural_paths"         baseparm         label   "Absolute Procedural Paths"         export  none     } ' $_obj_ropnet1_pc_render_rop1_arnold1
opmultiparm $_obj_ropnet1_pc_render_rop1_arnold1 'ar_enable_aov#' '../ar_enable_aov#' 'ar_aov_label#' '../ar_aov_label#'
opparm $_obj_ropnet1_pc_render_rop1_arnold1  ar_exr_metadata ( 0 ) ar_aovs ( 0 ) ar_baking_meshes ( 0 )
chblockbegin
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 trange
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../trange")' $_obj_ropnet1_pc_render_rop1_arnold1/trange
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 f1
chkey -t 4.166666666666667 -v 101 -m 0 -a 0 -A 0 -T a  -F 'ch("../f1")' $_obj_ropnet1_pc_render_rop1_arnold1/f1
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 f2
chkey -t 4.166666666666667 -v 159 -m 0 -a 0 -A 0 -T a  -F 'ch("../f2")' $_obj_ropnet1_pc_render_rop1_arnold1/f2
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 f3
chkey -t 4.166666666666667 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../f3")' $_obj_ropnet1_pc_render_rop1_arnold1/f3
chadd -t 0 0 $_obj_ropnet1_pc_render_rop1_arnold1 take
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("../take")' $_obj_ropnet1_pc_render_rop1_arnold1/take
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 camera
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../camera")' $_obj_ropnet1_pc_render_rop1_arnold1/camera
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_subdiv_frustum_culling
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_subdiv_frustum_culling")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_subdiv_frustum_culling
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_subdiv_frustum_padding
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_subdiv_frustum_padding")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_subdiv_frustum_padding
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 vobject
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../vobject")' $_obj_ropnet1_pc_render_rop1_arnold1/vobject
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 forceobject
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../forceobject")' $_obj_ropnet1_pc_render_rop1_arnold1/forceobject
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 excludeobject
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../excludeobject")' $_obj_ropnet1_pc_render_rop1_arnold1/excludeobject
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 phantom_objects
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../phantom_objects")' $_obj_ropnet1_pc_render_rop1_arnold1/phantom_objects
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 matte_objects
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../matte_objects")' $_obj_ropnet1_pc_render_rop1_arnold1/matte_objects
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_environment
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../ar_environment")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_environment
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_forced_materials
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../ar_forced_materials")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_forced_materials
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_shader_override
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../ar_shader_override")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_shader_override
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 sololight
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../sololight")' $_obj_ropnet1_pc_render_rop1_arnold1/sololight
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 alights
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../alights")' $_obj_ropnet1_pc_render_rop1_arnold1/alights
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 forcelights
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../forcelights")' $_obj_ropnet1_pc_render_rop1_arnold1/forcelights
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 excludelights
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chsop("../excludelights")' $_obj_ropnet1_pc_render_rop1_arnold1/excludelights
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_ass_export_authorized
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'hou.licenseCategory() in (hou.licenseCategoryType.Commercial, hou.licenseCategoryType.Education)' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_ass_export_authorized
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 soho_outputmode
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if(ch("ar_ass_export_enable"), 2, 0)' $_obj_ropnet1_pc_render_rop1_arnold1/soho_outputmode
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 soho_pipecmd
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.searchpath\nreturn htoa.searchpath.hick' -l p $_obj_ropnet1_pc_render_rop1_arnold1/soho_pipecmd
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 vm_picture
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("ar_picture")' $_obj_ropnet1_pc_render_rop1_arnold1/vm_picture
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 override_camerares
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../override_camerares")' $_obj_ropnet1_pc_render_rop1_arnold1/override_camerares
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 res_fraction
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("../res_fraction")' $_obj_ropnet1_pc_render_rop1_arnold1/res_fraction
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 res_overridex
chkey -t 4.166666666666667 -v 640 -m 0 -a 0 -A 0 -T a  -F 'ch("../res_overridex")' $_obj_ropnet1_pc_render_rop1_arnold1/res_overridex
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 res_overridey
chkey -t 4.166666666666667 -v 480 -m 0 -a 0 -A 0 -T a  -F 'ch("../res_overridey")' $_obj_ropnet1_pc_render_rop1_arnold1/res_overridey
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 aspect_override
chkey -t 4.166666666666667 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../aspect_override")' $_obj_ropnet1_pc_render_rop1_arnold1/aspect_override
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_output_variance
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_output_variance")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_output_variance
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_overscany
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_overscanx")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_overscany
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_overscanz
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_overscanx")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_overscanz
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_overscanw
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_overscanx")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_overscanw
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_AA_sample_clamp_enable
chkey -t 4.166666666666667 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_AA_sample_clamp_enable")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_AA_sample_clamp_enable
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_AA_sample_clamp
chkey -t 4.166666666666667 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_AA_sample_clamp")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_AA_sample_clamp
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_aovs
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_aovs")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_aovs
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_AA_samples
chkey -t 4.166666666666667 -v 3 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_AA_samples")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_AA_samples
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_AA_samples_extra
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("ar_AA_samples_max") - ch("ar_AA_samples")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_AA_samples_extra
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_GI_diffuse_samples
chkey -t 4.166666666666667 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_GI_diffuse_samples")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_GI_diffuse_samples
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_GI_specular_samples
chkey -t 4.166666666666667 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_GI_specular_samples")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_GI_specular_samples
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_GI_transmission_samples
chkey -t 4.166666666666667 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_GI_transmission_samples")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_GI_transmission_samples
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_GI_sss_samples
chkey -t 4.166666666666667 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_GI_sss_samples")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_GI_sss_samples
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_GI_volume_samples
chkey -t 4.166666666666667 -v 2 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_GI_volume_samples")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_GI_volume_samples
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_indirect_specular_blur
chkey -t 4.166666666666667 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_indirect_specular_blur")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_indirect_specular_blur
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_AA_seed
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '$F' $_obj_ropnet1_pc_render_rop1_arnold1/ar_AA_seed
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_sss_use_autobump
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_sss_use_autobump")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_sss_use_autobump
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_info_samples_camera
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoCamera()' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_info_samples_camera
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_info_samples_diffuse1
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoDiffuse()' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_info_samples_diffuse1
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_info_samples_diffuse2
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoDiffuseDepth()' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_info_samples_diffuse2
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_info_samples_specular1
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoSpecular()' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_info_samples_specular1
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_info_samples_specular2
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoSpecularDepth()' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_info_samples_specular2
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_info_samples_transmission1
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoTransmission()' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_info_samples_transmission1
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_info_samples_transmission2
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoTransmissionDepth()' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_info_samples_transmission2
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_info_samples_total1
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoTotal()' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_info_samples_total1
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_info_samples_total2
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'htoa\').properties.sampleInfoTotalDepth()' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_info_samples_total2
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_mb_xform_enable
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../trange")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_mb_xform_enable
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_mb_dform_enable
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../trange")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_mb_dform_enable
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_platform
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F '__import__(\'sys\').platform' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_platform
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_ocio_enabled
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'bool(__import__(\'htoa.ocio\').ocio.has_config)' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_ocio_enabled
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_color_family_narrow
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_sRGB_family' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_color_family_narrow
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_color_space_narrow
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_sRGB' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_color_space_narrow
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_color_family_linear
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear_family' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_color_family_linear
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_color_space_linear
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import htoa.ocio\nreturn htoa.ocio.default_linear' -l p $_obj_ropnet1_pc_render_rop1_arnold1/ar_color_space_linear
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_ignore_subdivision
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_ignore_subdivision")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_ignore_subdivision
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_ignore_displacement
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_ignore_displacement")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_ignore_displacement
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_ignore_dof
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_ignore_dof")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_ignore_dof
chadd -t 4.166666666666667 4.166666666666667 $_obj_ropnet1_pc_render_rop1_arnold1 ar_ignore_motion_blur
chkey -t 4.166666666666667 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../ar_ignore_motion_blur")' $_obj_ropnet1_pc_render_rop1_arnold1/ar_ignore_motion_blur
chblockend
opparm $_obj_ropnet1_pc_render_rop1_arnold1 trange ( trange ) f ( f1 f2 f3 ) take ( take ) camera ( camera ) ar_subdiv_frustum_culling ( ar_subdiv_frustum_culling ) ar_subdiv_frustum_padding ( ar_subdiv_frustum_padding ) vobject ( vobject ) forceobject ( forceobject ) excludeobject ( excludeobject ) phantom_objects ( phantom_objects ) matte_objects ( matte_objects ) ar_environment ( ar_environment ) ar_forced_materials ( ar_forced_materials ) ar_shader_override ( ar_shader_override ) sololight ( sololight ) alights ( alights ) forcelights ( forcelights ) excludelights ( excludelights ) ar_ass_export_enable ( on ) ar_ass_file ( '$JOB/houdini/ass/`chs("../job")`/`chs("../cut")`/`chs("../file_name")`_$F3.ass.gz' ) main6 ( 1 1 1 1 1 ) ar_picture ( '$JOB/`chs("../job")`/`chs("../cut")`/0_Renders/`chs("../object_type")`/`chs("../file_name")`/`chs("../version")`/`chs("../cut")`_`chs("../file_name")`_`chs("../version")`_$F3.exr' ) override_camerares ( override_camerares ) res_fraction ( res_fraction ) res_override ( res_overridex res_overridey ) aspect_override ( aspect_override ) ar_output_variance ( ar_output_variance ) ar_exr_half_precision ( on ) ar_AA_sample_clamp_enable ( ar_AA_sample_clamp_enable ) ar_AA_sample_clamp_affects_aovs ( on ) ar_AA_sample_clamp ( ar_AA_sample_clamp ) ar_indirect_sample_clamp ( 1 ) ar_aovs ( ar_aovs ) ar_AA_samples ( ar_AA_samples ) ar_GI_diffuse_samples ( ar_GI_diffuse_samples ) ar_GI_specular_samples ( ar_GI_specular_samples ) ar_GI_transmission_samples ( ar_GI_transmission_samples ) ar_GI_sss_samples ( ar_GI_sss_samples ) ar_GI_volume_samples ( ar_GI_volume_samples ) ar_indirect_specular_blur ( ar_indirect_specular_blur ) ar_sss_use_autobump ( ar_sss_use_autobump ) ar_mb_xform_enable ( ar_mb_xform_enable ) ar_mb_dform_enable ( ar_mb_dform_enable ) ar_texture_accept_untiled ( on ) ar_ignore_subdivision ( ar_ignore_subdivision ) ar_ignore_displacement ( ar_ignore_displacement ) ar_ignore_dof ( ar_ignore_dof ) ar_ignore_motion_blur ( ar_ignore_motion_blur )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ropnet1_pc_render_rop1_arnold1
opexprlanguage -s hscript $_obj_ropnet1_pc_render_rop1_arnold1
opuserdata -n '___Version___' -v '' $_obj_ropnet1_pc_render_rop1_arnold1
opuserdata -n '___toolcount___' -v '3' $_obj_ropnet1_pc_render_rop1_arnold1
opuserdata -n '___toolid___' -v 'object_cam' $_obj_ropnet1_pc_render_rop1_arnold1
opcf ..
oporder -e pc_bake_rop1 pc_render_rop1 
opcf ..
opset -p on $_obj_ropnet1
opcf $arg1

# Node $_obj_pc_set_shot1 (pc::Object/pc_set_shot::001)
set _obj_pc_set_shot1 = `run("opadd -e -n -v pc::pc_set_shot::001 pc_set_shot1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 4.8770081183159411` $_obj_pc_set_shot1
chblockbegin
chadd -t 0 0 $_obj_pc_set_shot1 job
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'strcat(strcat(chs("client"),"/"),chs("project"))' $_obj_pc_set_shot1/job
chadd -t 0 0 $_obj_pc_set_shot1 cut
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("shot")' $_obj_pc_set_shot1/cut
chadd -t 0 0 $_obj_pc_set_shot1 frame_range1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_pc_set_shot1/frame_range1
chadd -t 0 0 $_obj_pc_set_shot1 frame_range2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_pc_set_shot1/frame_range2
chblockend
opset -S on $_obj_pc_set_shot1
opparm $_obj_pc_set_shot1 client ( ply ) project ( eos ) shot ( cut_001 ) job ( job ) cut ( cut )
chautoscope $_obj_pc_set_shot1 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 1 1 1 $_obj_pc_set_shot1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_pc_set_shot1
opexprlanguage -s hscript $_obj_pc_set_shot1
opuserdata -n '___Version___' -v '' $_obj_pc_set_shot1
opuserdata -n '___toolcount___' -v '3' $_obj_pc_set_shot1
opuserdata -n '___toolid___' -v 'pc scene start' $_obj_pc_set_shot1
opset -p on $_obj_pc_set_shot1
opcf $arg1

# Node $_obj_ENV (Object/subnet)
set _obj_ENV = `run("opadd -e -n -v subnet ENV")`
oplocate -x `$arg2 + -2.5916394406215333` -y `$arg3 + -2.244516163522011` $_obj_ENV
opset -S on $_obj_ENV
opparm -V 17.0.352 $_obj_ENV t ( 0 0 0 ) r ( 0 0 0 ) s ( 1 1 1 ) p ( 0 0 0 ) pr ( 0 0 0 ) scale ( 1 )
chlock $_obj_ENV +tx +ty +tz +rx +ry +rz +sx +sy +sz +px +py +pz +prx +pry +prz +scale
chautoscope $_obj_ENV +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.47499999403953552 0.81199997663497925 0.20399999618530273 $_obj_ENV
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_ENV
opexprlanguage -s hscript $_obj_ENV
opuserdata -n '___Version___' -v '17.0.352' $_obj_ENV
opuserdata -n '___toolcount___' -v '1' $_obj_ENV
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_ENV
opset -p on $_obj_ENV
opcf $arg1

# Node $_obj_FX (Object/subnet)
set _obj_FX = `run("opadd -e -n -v subnet FX")`
oplocate -x `$arg2 + -6.2981611858428899` -y `$arg3 + -2.244516163522011` $_obj_FX
opset -S on $_obj_FX
opparm -V 17.0.352 $_obj_FX t ( 0 0 0 ) r ( 0 0 0 ) s ( 1 1 1 ) p ( 0 0 0 ) pr ( 0 0 0 ) scale ( 1 )
chlock $_obj_FX +tx +ty +tz +rx +ry +rz +sx +sy +sz +px +py +pz +prx +pry +prz +scale
chautoscope $_obj_FX +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.88999998569488525 0.41200000047683716 0.76099997758865356 $_obj_FX
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_FX
opexprlanguage -s hscript $_obj_FX
opuserdata -n '___Version___' -v '17.0.352' $_obj_FX
opuserdata -n '___toolcount___' -v '1' $_obj_FX
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_FX
opset -p on $_obj_FX
opcf $arg1

# Node $_obj_shopnet1 (Object/shopnet)
set _obj_shopnet1 = `run("opadd -e -n -v shopnet shopnet1")`
oplocate -x `$arg2 + 6.9285048612652602` -y `$arg3 + 0` $_obj_shopnet1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_shopnet1
opexprlanguage -s hscript $_obj_shopnet1
opuserdata -n '___Version___' -v '17.0.352' $_obj_shopnet1
opuserdata -n '___toolcount___' -v '1' $_obj_shopnet1
opuserdata -n '___toolid___' -v 'pc_scene_start0' $_obj_shopnet1
opcf $_obj_shopnet1

# Node $_obj_shopnet1_grey (Shop/arnold_vopnet)
set _obj_shopnet1_grey = `run("opadd -e -n -v arnold_vopnet grey")`
oplocate -x `$arg2 + 3.1381800000000002` -y `$arg3 + -1.61812` $_obj_shopnet1_grey
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_shopnet1_grey
opexprlanguage -s hscript $_obj_shopnet1_grey
opuserdata -n '___Version___' -v '17.0.352' $_obj_shopnet1_grey
opuserdata -n '___toolcount___' -v '1' $_obj_shopnet1_grey
opuserdata -n '___toolid___' -v 'pc_scene_start0' $_obj_shopnet1_grey
opcf $_obj_shopnet1_grey

# Node $_obj_shopnet1_grey_OUT_material (Vop/arnold_material)
set _obj_shopnet1_grey_OUT_material = `run("opadd -e -n -v arnold_material OUT_material")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_shopnet1_grey_OUT_material
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_shopnet1_grey_OUT_material
opexprlanguage -s hscript $_obj_shopnet1_grey_OUT_material
opuserdata -n '___Version___' -v '17.0.352' $_obj_shopnet1_grey_OUT_material
opuserdata -n '___toolcount___' -v '1' $_obj_shopnet1_grey_OUT_material
opuserdata -n '___toolid___' -v 'pc_scene_start0' $_obj_shopnet1_grey_OUT_material

# Node $_obj_shopnet1_grey_standard_surface1 (arnold::Vop/standard_surface)
set _obj_shopnet1_grey_standard_surface1 = `run("opadd -e -n -v arnold::standard_surface standard_surface1")`
oplocate -x `$arg2 + -3.8902000000000001` -y `$arg3 + 0` $_obj_shopnet1_grey_standard_surface1
opparm -V 17.0.352 $_obj_shopnet1_grey_standard_surface1 base ( 1 ) base_color ( 0.20000000000000001 0.20000000000000001 0.20000000000000001 ) specular_roughness ( 0.69999999999999996 ) specular_IOR ( 1.52 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_shopnet1_grey_standard_surface1
opexprlanguage -s hscript $_obj_shopnet1_grey_standard_surface1
opuserdata -n '___Version___' -v '17.0.352' $_obj_shopnet1_grey_standard_surface1
opuserdata -n '___toolcount___' -v '1' $_obj_shopnet1_grey_standard_surface1
opuserdata -n '___toolid___' -v 'pc_scene_start0' $_obj_shopnet1_grey_standard_surface1
opcf ..
opcf ..
opcf $_obj_shopnet1
opcf $_obj_shopnet1_grey
oporder -e OUT_material standard_surface1 
opcf ..
opcf ..
opset -p on $_obj_shopnet1
opcf $arg1

# Node $_obj_CHAR (Object/subnet)
set _obj_CHAR = `run("opadd -e -n -v subnet CHAR")`
oplocate -x `$arg2 + 2.4967653996732855` -y `$arg3 + -2.244516163522011` $_obj_CHAR
opset -S on $_obj_CHAR
opparm -V 17.0.352 $_obj_CHAR t ( 0 0 0 ) r ( 0 0 0 ) s ( 1 1 1 ) p ( 0 0 0 ) pr ( 0 0 0 ) scale ( 1 )
chlock $_obj_CHAR +tx +ty +tz +rx +ry +rz +sx +sy +sz +px +py +pz +prx +pry +prz +scale
chautoscope $_obj_CHAR +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.56499999761581421 0.49399998784065247 0.86299997568130493 $_obj_CHAR
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_CHAR
opexprlanguage -s hscript $_obj_CHAR
opuserdata -n '___Version___' -v '17.0.352' $_obj_CHAR
opuserdata -n '___toolcount___' -v '1' $_obj_CHAR
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_CHAR
opcf $_obj_CHAR

# Node $_obj_CHAR_measurement_man1 (Object/measurement_man)
set _obj_CHAR_measurement_man1 = `run("opadd -e -n -v measurement_man measurement_man1")`
oplocate -x `$arg2 + -1.1175870895385742e-08` -y `$arg3 + 4.2696411812568407` $_obj_CHAR_measurement_man1
opset -S on $_obj_CHAR_measurement_man1
chautoscope $_obj_CHAR_measurement_man1 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_CHAR_measurement_man1
opexprlanguage -s hscript $_obj_CHAR_measurement_man1
opuserdata -n '___Version___' -v '' $_obj_CHAR_measurement_man1
opuserdata -n '___toolcount___' -v '1' $_obj_CHAR_measurement_man1
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_CHAR_measurement_man1
opcf ..
opcf $_obj_CHAR
opcf ..
opset -p on $_obj_CHAR
opcf $arg1

# Node $_obj_pc_fog1 (Object/pc_fog)
set _obj_pc_fog1 = `run("opadd -e -n -v pc_fog pc_fog1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 1.8032082426932989` $_obj_pc_fog1
chblockbegin
chadd -t 0 0 $_obj_pc_fog1 star_end_frame1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_pc_fog1/star_end_frame1
chadd -t 0 0 $_obj_pc_fog1 star_end_frame2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_pc_fog1/star_end_frame2
chadd -t 0 0 $_obj_pc_fog1 ground_pointx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'origin("",chs("choose_camera"),TX)' $_obj_pc_fog1/ground_pointx
chadd -t 0 0 $_obj_pc_fog1 ground_pointy
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'origin("",chs("choose_camera"),TY)' $_obj_pc_fog1/ground_pointy
chadd -t 0 0 $_obj_pc_fog1 ground_pointz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'origin("",chs("choose_camera"),TZ)' $_obj_pc_fog1/ground_pointz
chblockend
opset -S on $_obj_pc_fog1
chautoscope $_obj_pc_fog1 +tx +ty +tz +rx +ry +rz +sx +sy +sz +ground_pointz +noice_offsetx +noice_offsetz
opcolor -c 0.62400001287460327 0.32899999618530273 0.39599999785423279 $_obj_pc_fog1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_pc_fog1
opexprlanguage -s hscript $_obj_pc_fog1
opuserdata -n '___Version___' -v '' $_obj_pc_fog1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_fog1
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_pc_fog1
opset -p on $_obj_pc_fog1
opcf $arg1

# Node $_obj_ASS (Object/subnet)
set _obj_ASS = `run("opadd -e -n -v subnet ASS")`
oplocate -x `$arg2 + 0` -y `$arg3 + -4.2721550092091993` $_obj_ASS
opset -S on $_obj_ASS
opparm -V 17.0.352 $_obj_ASS t ( 0 0 0 ) r ( 0 0 0 ) s ( 1 1 1 ) p ( 0 0 0 ) pr ( 0 0 0 ) scale ( 1 )
chlock $_obj_ASS +tx +ty +tz +rx +ry +rz +sx +sy +sz +px +py +pz +prx +pry +prz +scale
chautoscope $_obj_ASS +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0 0 0 $_obj_ASS
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_ASS
opexprlanguage -s hscript $_obj_ASS
opuserdata -n '___Version___' -v '17.0.352' $_obj_ASS
opuserdata -n '___toolcount___' -v '1' $_obj_ASS
opuserdata -n '___toolid___' -v 'pc_scene_start' $_obj_ASS
opset -p on $_obj_ASS

opcf $arg1
opcf $_obj_cam1
opwire -n $_obj_cam1_file1 -0 $_obj_cam1_xform1
opcf ..
opcf $arg1
opcf $_obj_lights
opcf ..
opcf $arg1
opcf $_obj_ropnet1
opcf $_obj_ropnet1_pc_render_rop1
opcf ..
opcf ..
opcf $arg1
opcf $arg1
opcf $arg1
opcf $arg1
opcf $_obj_shopnet1
opcf $_obj_shopnet1_grey
opwire -n $_obj_shopnet1_grey_standard_surface1 -0 $_obj_shopnet1_grey_OUT_material
opcf ..
opcf ..
opcf $arg1
opcf $_obj_CHAR
opcf ..
opcf $arg1
opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_ASS
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_cam1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pc alembic geo" label="Pc alembic geo" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_ENV_geo (Object/geo)
set _obj_ENV_geo = `run("opadd -e -n -v geo geo")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_ENV_geo
opspareds '    group {         name    "stdswitcher4"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher4_1"         label   "Render"          parm {             name    "shop_materialpath"             baseparm             label   "Material"             export  none         }         parm {             name    "shop_materialopts"             baseparm             label   "Options"             invisible             export  none         }         parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "viewportlod"             label   "Display As"             type    ordinal             default { "full" }             help    "Choose how the object\'s geometry should be rendered in the viewport"             menu {                 "full"      "Full Geometry"                 "points"    "Point Cloud"                 "box"       "Bounding Box"                 "centroid"  "Centroid"                 "hidden"    "Hidden"                 "subd"      "Subdivision Surface / Curves"             }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendervisibility"             label   "Render Visibility"             type    string             default { "*" }             menureplace {                 "*"                             "Visible to all"                 "primary"                       "Visible only to primary rays"                 "primary|shadow"                "Visible only to primary and shadow rays"                 "-primary"                      "Invisible to primary rays (Phantom)"                 "-diffuse"                      "Invisible to diffuse rays"                 "-diffuse&-reflect&-refract"    "Invisible to secondary rays"                 ""                              "Invisible (Unrenderable)"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendervisibility" }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendersubd"             label   "Render Polygons As Subdivision (Mantra)"             type    toggle             default { "0" }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubd" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdstyle"             label   "Subdivision Style"             type    string             default { "mantra_catclark" }             hidewhen "{ vm_rendersubd == 0 }"             menu {                 "mantra_catclark"   "Mantra Catmull-Clark"                 "osd_catclark"      "OpenSubdiv Catmull-Clark"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdstyle" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdgroup"             label   "Subdivision Group"             type    string             default { "" }             hidewhen "{ vm_rendersubd == 0 }"             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdgroup" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_quality"             label   "Open Subdiv Quality"             type    float             default { "1" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_quality" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_vtxinterp"             label   "OSD Vtx Interp"             type    integer             default { "2" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "No vertex interpolation"                 "1" "Edges only"                 "2" "Edges and Corners"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_vtxinterp" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_fvarinterp"             label   "OSD FVar Interp"             type    integer             default { "4" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "Smooth everywhere"                 "1" "Sharpen corners only"                 "2" "Sharpen edges and corners"                 "3" "Sharpen edges and propagated corners"                 "4" "Sharpen all boundaries"                 "5" "Bilinear interpolation"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_fvarinterp" }             parmtag { "spare_category" "Geometry" }         }         group {             name    "folder0"             label   "Shading"              parm {                 name    "categories"                 label   "Categories"                 type    string                 default { "" }                 help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "reflectmask"                 label   "Reflection Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be reflected on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "refractmask"                 label   "Refraction Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be refracted on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightmask"                 label   "Light Mask"                 type    oplist                 default { "*" }                 help    "Lights that illuminate this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightcategories"                 label   "Light Selection"                 type    string                 default { "*" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_lpetag"                 label   "LPE Tag"                 type    string                 default { "" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "lpetag" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilter"                 label   "Volume Filter"                 type    string                 default { "box" }                 menu {                     "box"       "Box Filter"                     "gaussian"  "Gaussian"                     "bartlett"  "Bartlett (triangle)"                     "catrom"    "Catmull-Rom"                     "hanning"   "Hanning"                     "blackman"  "Blackman"                     "sinc"      "Sinc (sharpening)"                 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filter" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilterwidth"                 label   "Volume Filter Width"                 type    float                 default { "1" }                 range   { 0.001 5 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_matte"                 label   "Matte shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "matte" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_rayshade"                 label   "Raytrace Shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rayshade" }                 parmtag { "spare_category" "Shading" }             }         }          group {             name    "folder0_1"             label   "Sampling"              parm {                 name    "geo_velocityblur"                 label   "Geometry Velocity Blur"                 type    ordinal                 default { "off" }                 disablewhen "{ allowmotionblur == 0 }"                 menu {                     "off"       "No Velocity Blur"                     "on"        "Velocity Blur"                     "accelblur" "Acceleration Blur"                 }             }             parm {                 name    "geo_accelattribute"                 label   "Acceleration Attribute"                 type    string                 default { "accel" }                 hidewhen "{ geo_velocityblur != accelblur }"                 parmtag { "spare_category" "Sampling" }             }         }          group {             name    "folder0_2"             label   "Dicing"              parm {                 name    "vm_shadingquality"                 label   "Shading Quality"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "shadingquality" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_flatness"                 label   "Dicing Flatness"                 type    float                 default { "0.05" }                 range   { 0 1 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "flatness" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu {                     "0" "Disable Predicing"                     "1" "Full Predicing"                     "2" "Precompute Bounds"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "raypredice" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_curvesurface"                 label   "Shade Curves As Surfaces"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "curvesurface" }                 parmtag { "spare_category" "Dicing" }             }         }          group {             name    "folder0_3"             label   "Geometry"              parm {                 name    "vm_rmbackface"                 label   "Backface Removal"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rmbackface" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "shop_geometrypath"                 label   "Procedural Shader"                 type    oppath                 default { "" }                 parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }                 parmtag { "oprelative" "." }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_forcegeometry"                 label   "Force Procedural Geometry Output"                 type    toggle                 default { "1" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_rendersubdcurves"                 label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rendersubdcurves" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpoints"                 label   "Render As Points (Mantra)"                 type    integer                 default { "2" }                 menu {                     "0" "No Point Rendering"                     "1" "Render Only Points"                     "2" "Render Unconnected Points"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpointsas"                 label   "Render Points As (Mantra)"                 type    integer                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 menu {                     "0" "Spheres"                     "1" "Circles"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpointsas" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_usenforpoints"                 label   "Use N For Point Rendering"                 type    toggle                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "usenforpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pointscale"                 label   "Point Scale"                 type    float                 default { "1" }                 disablewhen "{ vm_renderpoints == 0 }"                 range   { 0! 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pointscale" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pscalediameter"                 label   "Treat Point Scale as Diameter Instead of Radius"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pscalediameter" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_metavolume"                 label   "Metaballs as Volume"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "metavolume" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_coving"                 label   "Coving"                 type    integer                 default { "1" }                 menu {                     "0" "Disable Coving"                     "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "coving" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_materialoverride"                 label   "Material Override"                 type    string                 default { "compact" }                 menu {                     "none"      "Disabled"                     "full"      "Evaluate for Each Primitve/Point"                     "compact"   "Evaluate Once"                 }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_overridedetail"                 label   "Ignore Geometry Attribute Shaders"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "overridedetail" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_procuseroottransform"                 label   "Proc Use Root Transform"                 type    toggle                 default { "1" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "procuseroottransform" }                 parmtag { "spare_category" "Geometry" }             }         }      }      group {         name    "stdswitcher4_2"         label   "Arnold"          parm {             name    "shop_propertiespath"             label   "Default Properties"             type    oppath             default { "" }             help    "Specifies a Property SHOP that is used to resolve rendering parameter values. At render time, this SHOP (if given) is used to resolve rendering parameter values first, before looking for then on the objects being rendered."             range   { 0 1 }             parmtag { "opfilter" "!!SHOP/PROPERTIES!!" }             parmtag { "oprelative" "." }             parmtag { "spare_category" "Shaders" }         }         parm {             name    "ar_user_options"             label   "User Options"             type    string             joinnext             default { "" }             help    "This string is passed to AiNodeSetAttributes() ont the Arnold node. It can contain any number of parameter/value pairs separated by whitespace (spaces, tabs, newlines) as found in .ass files."             disablewhen "{ ar_user_options_enable == 0 }"         }         parm {             name    "ar_user_options_enable"             label   "Enable"             type    toggle             default { "0" }             help    "Overrides the value of any parameter of the Arnold node."         }         group {             name    "folder_subdivision"             label   "Subdivision"              parm {                 name    "ar_subdiv_type"                 label   "Type"                 type    string                 default { "none" }                 help    "Subdivision algorithm. None ignores any subdivision and renders the mesh as it is. Linear subdivision puts vertices in the middle of each face. The Catmull-Clark algorithm is used to create smooth surfaces by recursive subdivision surface modeling. The resulting surface will always consist of a mesh of quadrilateral faces."                 menu {                     "none"      "None"                     "catclark"  "Catmull-Clark"                     "linear"    "Linear"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_iterations"                 label   "Iterations"                 type    integer                 default { "1" }                 help    "The number of iterations / levels of subdivision. With Catmull-Clark subdivision, increasing the number of iterations produces a smoother mesh."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 1! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_metric"                 label   "Adaptive Metric"                 type    string                 joinnext                 default { "auto" }                 help    "The adaptive subdivision criterion. Auto subdiv will choose between the EDGELENGTH mode and the FLATNESS depending on the displacement property of the polymesh. This means that if there is a displacement it will use the EDGELENGTH algorithm. If there is not displacement (or it is ignored in the global options) it will use FLATNESS."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "auto"          "Auto"                     "edge_length"   "Edge Length"                     "flatness"      "Flatness"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_error"                 label   "     Error"                 type    float                 default { "0" }                 help    "The \\"adaptive error\\" refers to the acceptable tessellation error as seen from the camera. If there\'s no displacement, then the error represents the distance from the subdivided mesh to the \\"true\\" or \\"limit\\" surface -- sort of a \\"flatness\\" heuristic. The smaller the error, the closer to the limit surface a mesh will be and the less inter-frame popping when the subdivision level jumps. If displacement is enabled, then the error represents the final size of the subdivided quads. A value of 0 disables adaptive subdivision."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0! 10 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_adaptive_space"                 label   "Adaptive Space"                 type    string                 default { "raster" }                 help    "The space in which the adaptive metric is evaluated."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "raster"    "Raster"                     "object"    "Object"                 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_uv_smoothing"                 label   "UV Smoothing"                 type    string                 joinnext                 default { "pin_corners" }                 help    "UV smoothing algorithm."                 disablewhen "{ ar_subdiv_type == none }"                 menu {                     "pin_corners"   "Pin Corners"                     "pin_borders"   "Pin Borders"                     "linear"        "Linear"                     "smooth"        "Smooth"                 }                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_smooth_derivs"                 label   "Smooth Derivatives"                 type    toggle                 default { "0" }                 help    "This option makes it possible to remove the faceted appearance from anisotropic speculars. The object must have a valid UV map for this option to work and only works if you apply at least one subdivision level to the geometry."                 disablewhen "{ ar_subdiv_type == none }"                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_merge_vertex_indices"                 label   "Merge Vertex Indices"                 type    toggle                 default { "1" }                 help    "Enable merging of the indices and data of coincident and identical vertex attribute values (UVs, normals, vertex user data). This allows the proper interpolation of vertex attributes when subdividing, and yields more compact render scenes in memory and on disk, at the cost of a slower export."                 range   { 0 1 }                 parmtag { "spare_category" "Subdivision" }             }             parm {                 name    "ar_subdiv_frustum_ignore"                 label   "Ignore Frustum Culling"                 type    toggle                 default { "0" }                 help    "Subdivision surfaces outside the view or dicing camera frustum will not be subdivided. This can be turned on globally by enabling subdiv_frustum_culling on the ROP and can be turned off for specific meshes by setting subdiv_frustum_ignore true."                 disablewhen "{ ar_subdiv_type == none }"                 parmtag { "spare_category" "Subdivision" }             }         }          group {             name    "folder_subdivision_1"             label   "Displacement"              parm {                 name    "ar_disp_height"                 label   "Height"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_zero_value"                 label   "Zero Value"                 type    float                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_padding"                 label   "Bounds Padding"                 type    float                 default { "0" }                 range   { 0 10 }                 parmtag { "spare_category" "Displacement" }             }             parm {                 name    "ar_disp_autobump"                 label   "Autobump"                 type    toggle                 default { "0" }                 range   { 0 1 }                 parmtag { "spare_category" "Displacement" }             }             groupcollapsible {                 name    "folder_autobump"                 label   "Autobump Visibility"                  parm {                     name    "ar_autobump_visibility_camera"                     label   "Camera"                     type    toggle                     default { "1" }                     help    "Toggle autobump for camera rays (i.e. primary or view rays)."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_shadow"                     label   "Shadow"                     type    toggle                     default { "0" }                     help    "Toggle autobump for shadow rays fired in the direct lighting calculations."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_diffuse_transmit"                     label   "Diffuse Transmission"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect diffuse transmission rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_specular_transmit"                     label   "Specular Transmission"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect specular transmission rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_diffuse_reflect"                     label   "Diffuse Reflection"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect diffuse reflection rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_specular_reflect"                     label   "Specular Reflection"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect specular reflection rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }                 parm {                     name    "ar_autobump_visibility_volume"                     label   "Volume Scattering"                     type    toggle                     default { "0" }                     help    "Toggle autobump for indirect volume scattering rays."                     disablewhen "{ ar_disp_autobump == 0 }"                     range   { 0 1 }                     parmtag { "spare_category" "Displacement" }                 }             }          }          group {             name    "folder_subdivision_2"             label   "Shapes"              parm {                 name    "ar_min_pixel_width"                 label   "Minimum Pixel Width"                 type    float                 default { "0" }                 help    "If this value is non-zero, points or curves with a small on-screen width will be automatically enlarged so that they are at least the specified size in pixels. The enlargement fraction is then used in the hair shader to adjust the opacity so that the visible thickness of the hair remains the same. For a given number of AA samples, this makes it a lot easier to antialias fine hair, at the expense of render time (because of the additional transparency/depth complexity). Good values are in the range 0.2 to 0.7. Values closer to 0 are faster to render but need more AA samples. So if your scene already uses very high AA settings, you should use a low value like 0.1. For best results, you may need to increase the auto-transparency depth, and/or lower the auto-transparency threshold, but watch the effect on render times. Note that this parameter currently works with the ribbon mode only."                 range   { 0 10 }                 parmtag { "spare_category" "Curves" }             }             parm {                 name    "ar_radius"                 label   "Default Radius"                 type    float                 default { "0.05" }                 help    "Sets the default rendered radius of points or thickness of curves. This property can be overridden per point with the \\"ar_radius\\", \\"pscale\\" or \\"width\\" (curves only) attributes."                 range   { 0 10 }                 parmtag { "units" "m1" }             }             group {                 name    "folder_points"                 label   "Points"                  parm {                     name    "ar_mode"                     label   "Mode"                     type    ordinal                     default { "sphere" }                     help    "Rendering mode for points or particles. Can be spheres, or camera-facing disks or quads."                     menu {                         "disk"      "Disk"                         "sphere"    "Sphere"                         "quad"      "Quad"                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_point_scale"                     label   "Point Scale"                     type    float                     default { "1" }                     help    "A global scale factor applied to points."                     range   { 0! 10 }                 }                 parm {                     name    "ar_aspect"                     label   "Aspect"                     type    log                     default { "1" }                     help    "The aspect ratio for quads. This property can be overrriden per point by setting the \\"ar_aspect\\" or \\"spritescale\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_rotation"                     label   "Rotation"                     type    angle                     default { "0" }                     help    "The rotation angle in degrees for quads. This property can be overrriden per point by setting the \\"ar_rotation\\" or the \\"spriterot\\" attributes on the geometry."                     disablewhen "{ ar_mode != quad }"                     range   { -180 180 }                 }             }              group {                 name    "folder_points_1"                 label   "Curves"                  parm {                     name    "ar_curves_basis"                     label   "Basis"                     type    string                     default { "auto" }                     help    "The curves basis to interpret the knots of the input curves or open polygons. When set to \\"Automatic\\", the basis will attempt to match the closest equivalent in Arnold, ie. linear for open polygons, Bezier for Bezier curves and B-spline for NURBS."                     menu {                         "bezier"        "Bezier"                         "b-spline"      "B-Spline"                         "catmull-rom"   "Catmull-Rom"                         "linear"        "Linear"                         "auto"          "Automatic"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }                 parm {                     name    "ar_curves_mode"                     label   "Mode"                     type    string                     default { "ribbon" }                     help    "- Ribbon: This mode is recommended for fine geometry such as realistic hair, fur or fields of grass. These curves are rendered as camera-facing flat ribbons. For secondary and shadow rays, they face the incoming ray direction. This mode doesn\'t look so good for very wide hairs or dramatic zoom-ins because of the flat appearance. This mode works best with a proper hair shader (perhaps based on a Kay-Kajiya or Marschner specular model).\\\\n\\\\n- Thick: This mode resembles spaghetti. It has a circular cross section, and a normal vector that varies across the width of the hair. Thick hairs look great when zoomed in, and are specially useful for effects work, but their varying normals make them more difficult to antialias when they are small. You can use any shader with this rendering mode, including lambert, phong, etc.\\\\n\\\\n- Oriented: This mode is similar to the ribbons mode, but you can set the ribbon orientation for each knot with an \\"ar_orientations\\" vector attribute representing the direction of the normal of the ribbon. This mode can be useful to render grass strands for example."                     menu {                         "ribbon"    "Ribbon"                         "thick"     "Thick"                         "oriented"  "Oriented      "                     }                     range   { 0 1 }                     parmtag { "spare_category" "Curves" }                 }             }              group {                 name    "folder_points_2"                 label   "Volumes"                  parm {                     name    "ar_step_size"                     label   "Volume Step Size"                     type    float                     default { "0" }                     help    "When ar_step_size is set to a value other than zero, then points rendered as spheres, particles and polymeshes will be rendered as volumes."                     range   { 0 1 }                 }                 parm {                     name    "ar_volume_padding"                     label   "Volume Padding"                     type    float                     default { "0" }                     help    "When rendering particles or polymeshes as volumes (when ar_step_size is non-zero), ar_volume_padding will provide extra the volume padding specified for displacement requirements"                     disablewhen "{ ar_step_size == 0 }"                     range   { 0 10 }                 }                 parm {                     name    "label_volume"                     label   "Label"                     type    label                     nolabel                     default { "" }                 }                 parm {                     name    "label_volume2"                     label   "Label"                     type    label                     nolabel                     default { "Points and polymeshes are rendered as volumes if Step Size > 0" }                 }             }              group {                 name    "folder_points_3"                 label   " VDB "                  parm {                     name    "ar_vdb_file_enable"                     label   "Export VDB File"                     type    toggle                     nolabel                     joinnext                     default { "0" }                     help    "Export the VDB primitives as a VDB file and reference the file in the Arnold volume."                     range   { 0 1 }                 }                 parm {                     name    "ar_vdb_file"                     label   "Save to File"                     type    file                     default { "$HIP/`pythonexprs(\\"hou.pwd().path()[1:].replace(\'/\', \'_\')\\")`.$F4.vdb" }                     help    "The OpenVDB file name that the VDB primitves will be written to, and that will be referenced by the Arnold volume instead of attaching the volume data."                     disablewhen "{ ar_vdb_file_enable == 0 }"                     range   { 0 1 }                     parmtag { "filechooser_pattern" "*.vdb" }                 }                 parm {                     name    "ar_grids"                     label   "Export Grids"                     type    string                     default { "*" }                     help    "The VDB grids to export and make available in the volume shading context."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_velocity_grids"                     label   "Velocity Grids"                     type    string                     default { "*" }                     help    "Select 1 vector or 3 float grids representing velocity for motion blur."                     menutoggle {                         [ "import htoa.properties" ]                         [ "return htoa.properties.vdbGridMenu()" ]                         language python                     }                     range   { 0 1 }                 }                 parm {                     name    "ar_velocity_scale"                     label   "Velocity Scale"                     type    log                     default { "1" }                     help    "Scale the velocities by this factor."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0.1 10 }                 }                 parm {                     name    "ar_velocity_threshold"                     label   "Velocity Threshold"                     type    log                     default { "0.001" }                     help    "Controls filtering of noisy velocities. The default value 0.001 should have little to no visual impact, setting it to zero disables filtering entirely."                     disablewhen "{ ar_velocity_grids == \\"\\" }"                     range   { 0! 1! }                 }                 parm {                     name    "ar_padding"                     label   "Bounds Padding"                     type    float                     default { "0" }                     help    "Extra padding for the volume bounds"                     range   { 0 10 }                 }                 parm {                     name    "ar_step_size_type"                     label   "Volume Step"                     type    ordinal                     joinnext                     default { "0" }                     help    "When set to auto, the step size is automatically determined by the volume plugin, yielding the minimum voxel size."                     menu {                         "auto"      "Automatic       "                         "custom"    "Custom"                     }                     range   { 0 1 }                     parmtag { "script_callback" "__import__(\'htoa\').properties.vdbAutoStepSizeCallback()" }                     parmtag { "script_callback_language" "python" }                 }                 parm {                     name    "ar_vdb_step_size"                     label   "      Step Size"                     type    float                     default { "0.02" }                     help    "The ray marching step size. When the step type is auto, this indicates the computed step size, the minimum voxel size."                     disablewhen "{ ar_step_size_type == auto }"                     range   { 0! 10 }                 }                 parm {                     name    "ar_step_scale"                     label   "Step Scale"                     type    log                     default { "1" }                     help    "Multiply the step size by this factor, including when it\'s automatically detected."                     range   { 0.1! 10 }                 }                 parm {                     name    "ar_compress"                     label   "Compress"                     type    toggle                     invisible                     default { "1" }                     help    "Optimize voxel storage to reduce memory usage."                     range   { 0 1 }                 }             }              group {                 name    "folder_points_4"                 label   "Tessellation"                  parm {                     name    "ar_tessellation_enable"                     label   "Tessellate Primitives"                     type    toggle                     default { "1" }                     help    "Tessellate Houdini primitives such as NURBS, Bezier meshes, circles, tubes or spheres prior to sending to Arnold."                     disablewhen "{ ar_tessellation_use_rop == 1 }"                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_style"                     label   "Tessellation Style"                     type    string                     invisible                     default { "lod" }                     help    "Specifies the conversion style for the geometry. The default is\\"Level of Detail\\". Can be one of the following:\\\\n- Level of Detail: Tessellate geometry using the level of detail settings.\\\\n- Divisions: Tessellate geometry based on the number of divisions settings."                     disablewhen "{ ar_tessellation_enable == 0 }"                     menu {                         "lod"   "Level of Detail"                         "div"   "Divisions"                     }                     range   { 0 1 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_ulod"                     label   "U Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for U subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_vlod"                     label   "V Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for V subdivisions of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }                 parm {                     name    "ar_tessellation_trimlod"                     label   "Trim Level of Detail"                     type    float                     default { "1" }                     help    "Specifies the level of detail for trim curves of the surface being converted. Applicable only when conversion method is set to Level of Detail. Defaults to 1.0."                     disablewhen "{ ar_tessellation_enable == 0 }"                     hidewhen "{ ar_tessellation_style != lod }"                     range   { 0! 10 }                     parmtag { "spare_category" "Tessellation" }                 }             }              group {                 name    "folder_points_5"                 label   "Procedurals"                  parm {                     name    "ar_operator_graph_enable"                     label   "Enable Operator Graph"                     type    toggle                     nolabel                     joinnext                     default { "1" }                     help    "Enables the operator graph on procedurals in this OBJ node."                     range   { 0 1 }                 }                 parm {                     name    "ar_operator_graph"                     label   "Operator Graph"                     type    oppath                     default { "" }                     help    "Specify an operator ROP graph to connect to procedurals created by this OBJ node."                     disablewhen "{ ar_operator_graph_enable == 0 }"                     parmtag { "opfilter" "!!ROP!!" }                     parmtag { "oprelative" "." }                 }             }          }          group {             name    "folder_subdivision_3"             label   "Attributes"              parm {                 name    "ar_toon_id"                 label   "Toon ID Group"                 type    string                 default { "" }                 help    "Objects in the same toon ID group will be rendered with the same silhouette, if the user_id attribute is set on the toon shader"             }             parm {                 name    "ar_attributes_detail"                 label   "Detail Attributes"                 type    string                 default { "*" }                 help    "The list of details attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.detailAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_primitive"                 label   "Primitive Attributes"                 type    string                 default { "*" }                 help    "The list of primitive attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.primitiveAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_point"                 label   "Point Attributes"                 type    string                 default { "*" }                 help    "The list of point attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.pointAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }             parm {                 name    "ar_attributes_vertex"                 label   "Vertex Attributes"                 type    string                 default { "*" }                 help    "The list of vertex attributes to be exported as user data for Arnold. As user data is costly in memory, nothing is exported by default. If this field contains a wildcard character (*), all available attributes will be exported."                 menutoggle {                     [ "__import__(\'htoa\').properties.vertexAttributeMenu()" ]                     language python                 }                 range   { 0 1 }                 parmtag { "spare_category" "Attributes" }             }         }          group {             name    "folder_subdivision_4"             label   "Motion Blur"              parm {                 name    "ar_transform_type"                 label   "Transform Type"                 type    ordinal                 default { "2" }                 help    "The type of motion for the transformation of the object, as a hint for the matrix interpolation for transformation motion blur."                 menu {                     "linear"                "Linear"                     "rotate_about_origin"   "Rotate About Origin"                     "rotate_about_center"   "Rotate About Center"                 }                 range   { 0 2 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys_override"                 label   "Transform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_xform_keys"                 label   "Transform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for matrix transformation. Transformation motion blur is calculated based on a linear interpolation of an object transform matrix, between successive motion keys. Increasing this value will add extra steps, which can improve the blurred result, especially for rotating objects. The default is 2, which results in straight lines of blur between shutter start and shutter end."                 disablewhen "{ ar_mb_xform_keys_override == 0 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys_override"                 label   "Deform Keys Override"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Override the ROP settings for Transform Keys."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_dform_keys"                 label   "Deform Keys"                 type    integer                 default { "2" }                 help    "Number of motion keys for object points. Just like with transformation motion keys, increasing this value allows curved motion paths to be rendered more accurately, at the expense of using more memory."                 disablewhen "{ ar_mb_dform_keys_override == 0 } { ar_mb_velocity_enable == 1 ar_mb_acceleration_enable != 1 }"                 range   { 1! 20 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_enable"                 label   "Velocity Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 help    "Deformation blur will be computed from the \\"v\\" point attribute."                 range   { 0 1 }                 parmtag { "spare_category" "Motion Blur" }             }             parm {                 name    "ar_mb_velocity_attribute"                 label   "Velocity Blur"                 type    string                 default { "v" }                 help    "The velocity point attribute to use for velocity blur. The Houdini convention is \'v\'."                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_enable"                 label   "Acceleration Blur Enable"                 type    toggle                 nolabel                 joinnext                 default { "0" }                 disablewhen "{ ar_mb_velocity_enable == 0 }"                 range   { 0 1 }             }             parm {                 name    "ar_mb_acceleration_attribute"                 label   "Acceleration Blur"                 type    string                 default { "force" }                 help    "The acceleration point attribute to use for acceleration blur. The Houdini convention is \'force\' or \'accel\'. If you use use \'force\' ensure you divide by the mass."                 disablewhen "{ ar_mb_velocity_enable == 0 } { ar_mb_acceleration_enable == 0 }"                 menureplace {                     [ "geometry = hou.pwd().renderNode().geometry()" ]                     [ "if not geometry:" ]                     [ "    return []" ]                     [ "menu_items = []" ]                     [ "for attr in geometry.pointAttribs():" ]                     [ "    if not attr.name() in (\'P\', \'Pw\'):" ]                     [ "        menu_items += [attr.name(), \'%s\\\\t  %s[%i]\' % (attr.name(), attr.dataType().name().lower(), attr.size())]" ]                     [ "return menu_items" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_5"             label   "Visibility"              parm {                 name    "ar_visibility_camera"                 label   "Visible to Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_shadow"                 label   "Visible to Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_transmit"                 label   "Visible to Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_transmit"                 label   "Visible to Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_diffuse_reflect"                 label   "Visible to Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_specular_reflect"                 label   "Visible to Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_visibility_volume"                 label   "Visible to Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object visibility for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_receive_shadows"                 label   "Receive Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable received shadows over the object."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_self_shadows"                 label   "Self Shadows"                 type    toggle                 default { "1" }                 help    "Enable/disable self-shadowing over the object."                 disablewhen "{ ar_receive_shadows == 0 }"                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_opaque"                 label   "Opaque"                 type    toggle                 default { "1" }                 help    "By default, Arnold will assume that objects are opaque, which lets the renderer take certain shortcuts and optimizations for maximum ray tracing speed. When this option is unchecked, the object is assumed as \\"possibly transparent\\", and Arnold will perform extra computations to support transparency and transparent shadows, according to the shader\'s opacity settings."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_matte"                 label   "Matte"                 type    toggle                 default { "0" }                 help    "Output black and zero alpha for camera rays to create a holdout."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_skip"                 label   "Skip"                 type    toggle                 default { "0" }                 help    "Do not output this object regardless of it being forced or not."                 range   { 0 1 }                 parmtag { "spare_category" "Visibility" }             }             parm {                 name    "ar_use_light_group"                 label   "Use Light Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_light_group"                 label   "Light Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_light_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_use_shadow_group"                 label   "Use Shadow Group"                 type    toggle                 invisible                 nolabel                 joinnext                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "ar_shadow_group"                 label   "Shadow Group"                 type    oplist                 invisible                 default { "" }                 disablewhen "{ ar_use_shadow_group == 0 }"                 range   { 0 1 }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/" }             }             parm {                 name    "ar_trace_sets"                 label   "Trace Sets"                 type    string                 default { "" }                 menutoggle {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_trace_sets\'):" ]                     [ "            setnames = child.parm(\'ar_trace_sets\').evalAsString()" ]                     [ "            if setnames:" ]                     [ "                my_set.update(setnames.split())" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "tracesets = set()" ]                     [ "traverse(hou.node(\'/\'), tracesets)" ]                     [ "tracesets = list(tracesets)" ]                     [ "tracesets.sort()" ]                     [ "" ]                     [ "return [x for y in zip(tracesets, tracesets) for x in y]" ]                     language python                 }                 range   { 0 1 }             }             parm {                 name    "ar_sss_setname"                 label   "SSS Set"                 type    string                 default { "" }                 help    "Use this parameter to tag multiple objects as belonging to the same SSS set so that illumination will blur across object boundaries. A common use case might be blurring between teeth and gum geometry. This feature is only available when using raytraced SSS."                 menureplace {                     [ "def traverse(node, my_set):" ]                     [ "    for child in node.children():" ]                     [ "        if child.type().category() == hou.objNodeTypeCategory() and child.parm(\'ar_sss_setname\'):" ]                     [ "            setname = child.parm(\'ar_sss_setname\').evalAsString()" ]                     [ "            if setname:" ]                     [ "                my_set.update([setname])" ]                     [ "        traverse(child, my_set)" ]                     [ "" ]                     [ "sss_names = set()" ]                     [ "traverse(hou.node(\'/\'), sss_names)" ]                     [ "sss_names = list(sss_names)" ]                     [ "sss_names.sort()" ]                     [ "" ]                     [ "return [x for y in zip(sss_names, sss_names) for x in y]" ]                     language python                 }                 range   { 0 1 }             }         }          group {             name    "folder_subdivision_6"             label   "Normals"              parm {                 name    "ar_smoothing"                 label   "Smoothing"                 type    toggle                 default { "1" }                 help    "Smooth/Flat normals."                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_invert_normals"                 label   "Invert Normals"                 type    toggle                 default { "0" }                 help    "Invert normals"                 range   { 0 1 }                 parmtag { "spare_category" "Render" }             }             parm {                 name    "ar_sidedness_camera"                 label   "Double-sided for Camera Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for camera rays (i.e. primary or view rays)."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_shadow"                 label   "Double-sided for Shadow Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for shadow rays fired in the direct lighting calculations."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_transmit"                 label   "Double-sided for Diffuse Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_transmit"                 label   "Double-sided for Specular Transmission Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular transmission rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_diffuse_reflect"                 label   "Double-sided for Diffuse Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect diffuse reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_specular_reflect"                 label   "Double-sided for Specular Reflection Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect specular reflection rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }             parm {                 name    "ar_sidedness_volume"                 label   "Double-sided for Volume Scattering Rays"                 type    toggle                 default { "1" }                 help    "Toggle object double-sidedness for indirect volume scattering rays."                 range   { 0 1 }                 parmtag { "spare_category" "Sidedness" }             }         }      }      group {         name    "stdswitcher4_3"         label   "Misc"          parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }         parm {             name    "vport_shadeopen"             baseparm             label   "Shade Open Curves In Viewport"             export  none         }         parm {             name    "vport_displayassubdiv"             baseparm             label   "Display as Subdivision in Viewport"             invisible             export  none         }         parm {             name    "vport_onionskin"             baseparm             label   "Onion Skinning"             export  none         }     }  ' $_obj_ENV_geo
chblockbegin
chadd -t 0 0 $_obj_ENV_geo ar_point_scale
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_pointscale")' $_obj_ENV_geo/ar_point_scale
chadd -t 0 0 $_obj_ENV_geo ar_mb_velocity_enable
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("geo_velocityblur")' $_obj_ENV_geo/ar_mb_velocity_enable
chadd -t 0 0 $_obj_ENV_geo ar_matte
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("vm_matte")' $_obj_ENV_geo/ar_matte
chblockend
opset -S on $_obj_ENV_geo
chautoscope $_obj_ENV_geo +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_ENV_geo
opexprlanguage -s hscript $_obj_ENV_geo
opcf $_obj_ENV_geo

# Node $_obj_ENV_geo_shopnet1 (Sop/shopnet)
set _obj_ENV_geo_shopnet1 = `run("opadd -e -n -v shopnet shopnet1")`
oplocate -x `$arg2 + 3.836002178649236` -y `$arg3 + -4.1595315844534788` $_obj_ENV_geo_shopnet1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ENV_geo_shopnet1
opexprlanguage -s hscript $_obj_ENV_geo_shopnet1
opcf $_obj_ENV_geo_shopnet1

# Node $_obj_ENV_geo_shopnet1_grey (Shop/arnold_vopnet)
set _obj_ENV_geo_shopnet1_grey = `run("opadd -e -n -v arnold_vopnet grey")`
oplocate -x `$arg2 + 1.935675381263616` -y `$arg3 + -2.8654139373946541` $_obj_ENV_geo_shopnet1_grey
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ENV_geo_shopnet1_grey
opexprlanguage -s hscript $_obj_ENV_geo_shopnet1_grey
opcf $_obj_ENV_geo_shopnet1_grey

# Node $_obj_ENV_geo_shopnet1_grey_OUT_material (Vop/arnold_material)
set _obj_ENV_geo_shopnet1_grey_OUT_material = `run("opadd -e -n -v arnold_material OUT_material")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_ENV_geo_shopnet1_grey_OUT_material
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_ENV_geo_shopnet1_grey_OUT_material
opexprlanguage -s hscript $_obj_ENV_geo_shopnet1_grey_OUT_material

# Node $_obj_ENV_geo_shopnet1_grey_standard_surface1 (arnold::Vop/standard_surface)
set _obj_ENV_geo_shopnet1_grey_standard_surface1 = `run("opadd -e -n -v arnold::standard_surface standard_surface1")`
oplocate -x `$arg2 + -4.0882353239199691` -y `$arg3 + 0` $_obj_ENV_geo_shopnet1_grey_standard_surface1
opparm -V 17.0.352 $_obj_ENV_geo_shopnet1_grey_standard_surface1 base ( 1 ) base_color ( 0.20000000000000001 0.20000000000000001 0.20000000000000001 ) specular_roughness ( 0.69999999999999996 ) specular_IOR ( 1.5199999809265137 ) subsurface_type ( diffusion )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_ENV_geo_shopnet1_grey_standard_surface1
opexprlanguage -s hscript $_obj_ENV_geo_shopnet1_grey_standard_surface1
opcf ..
opcf ..
opcf ..
opcf $_obj_ENV_geo

# Node $_obj_ENV_geo_alembic1 (Sop/alembic)
set _obj_ENV_geo_alembic1 = `run("opadd -e -n -v alembic alembic1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_ENV_geo_alembic1
opparm $_obj_ENV_geo_alembic1  numlayers ( 0 ) remapAttributes ( 0 )
chblockbegin
chadd -t 0 0 $_obj_ENV_geo_alembic1 frame
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$FF' $_obj_ENV_geo_alembic1/frame
chadd -t 0 0 $_obj_ENV_geo_alembic1 fps
chkey -t 0 -v 24 -m 0 -a 0 -A 0 -T a  -F '$FPS' $_obj_ENV_geo_alembic1/fps
chblockend
opparm -V 17.0.352 $_obj_ENV_geo_alembic1 fileName ( '$HH/geo/default.abc' ) groupnames ( xformbase )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ENV_geo_alembic1
opexprlanguage -s hscript $_obj_ENV_geo_alembic1

# Node $_obj_ENV_geo_unpack1 (Sop/unpack)
set _obj_ENV_geo_unpack1 = `run("opadd -e -n -v unpack unpack1")`
oplocate -x `$arg2 + -1.3877787807814457e-17` -y `$arg3 + -1.4280501029719979` $_obj_ENV_geo_unpack1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ENV_geo_unpack1
opexprlanguage -s hscript $_obj_ENV_geo_unpack1

# Node $_obj_ENV_geo_convert1 (Sop/convert)
set _obj_ENV_geo_convert1 = `run("opadd -e -n -v convert convert1")`
oplocate -x `$arg2 + -6.9388939039072284e-18` -y `$arg3 + -2.7692810397911702` $_obj_ENV_geo_convert1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ENV_geo_convert1
opexprlanguage -s hscript $_obj_ENV_geo_convert1

# Node $_obj_ENV_geo_facet1 (Sop/facet)
set _obj_ENV_geo_facet1 = `run("opadd -e -n -v facet facet1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -4.1595315844534788` $_obj_ENV_geo_facet1
opparm -V 17.0.352 $_obj_ENV_geo_facet1 postnml ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ENV_geo_facet1
opexprlanguage -s hscript $_obj_ENV_geo_facet1

# Node $_obj_ENV_geo_material1 (Sop/material)
set _obj_ENV_geo_material1 = `run("opadd -e -n -v material material1")`
oplocate -x `$arg2 + 2.7755575615628914e-17` -y `$arg3 + -5.6987472707279885` $_obj_ENV_geo_material1
opparm $_obj_ENV_geo_material1  num_materials ( 1 ) num_local1 ( 0 )
opparm -V 17.0.352 $_obj_ENV_geo_material1 shop_materialpath1 ( ../shopnet1/grey )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_ENV_geo_material1
opexprlanguage -s hscript $_obj_ENV_geo_material1
opcf $_obj_ENV_geo_shopnet1
opcf $_obj_ENV_geo_shopnet1_grey
oporder -e OUT_material standard_surface1 
opcf ..
opcf ..
oporder -e alembic1 unpack1 convert1 facet1 material1 shopnet1 
opcf ..
opset -p on $_obj_ENV_geo

opcf $arg1
opcf $_obj_ENV_geo
opwire -n $_obj_ENV_geo_alembic1 -0 $_obj_ENV_geo_unpack1
opwire -n $_obj_ENV_geo_unpack1 -0 $_obj_ENV_geo_convert1
opwire -n $_obj_ENV_geo_convert1 -0 $_obj_ENV_geo_facet1
opwire -n $_obj_ENV_geo_facet1 -0 $_obj_ENV_geo_material1
opcf $_obj_ENV_geo_shopnet1
opcf $_obj_ENV_geo_shopnet1_grey
opwire -n $_obj_ENV_geo_shopnet1_grey_standard_surface1 -0 $_obj_ENV_geo_shopnet1_grey_OUT_material
opcf ..
opcf ..
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_ENV_geo
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_ENV_geo
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
